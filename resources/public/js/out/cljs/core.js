// Compiled by ClojureScript 0.0-2985 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2985";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7479__delegate = function (args){
return console.log.apply(console,(function (){var G__7478 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7478) : cljs.core.into_array.call(null,G__7478));
})());
};
var G__7479 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7480__i = 0, G__7480__a = new Array(arguments.length -  0);
while (G__7480__i < G__7480__a.length) {G__7480__a[G__7480__i] = arguments[G__7480__i + 0]; ++G__7480__i;}
  args = new cljs.core.IndexedSeq(G__7480__a,0);
} 
return G__7479__delegate.call(this,args);};
G__7479.cljs$lang$maxFixedArity = 0;
G__7479.cljs$lang$applyTo = (function (arglist__7481){
var args = cljs.core.seq(arglist__7481);
return G__7479__delegate(args);
});
G__7479.cljs$core$IFn$_invoke$arity$variadic = G__7479__delegate;
return G__7479;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__7483 = x;
return goog.isString(G__7483);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7485 = x__$1;
return goog.typeOf(G__7485);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3955__auto__ = ty;
if(cljs.core.truth_(and__3955__auto__)){
return ty.cljs$lang$type;
} else {
return and__3955__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7487 = obj;
return goog.typeOf(G__7487);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4423__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4423__auto__)){
var s = temp__4423__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7489 = Symbol;
return goog.typeOf(G__7489);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4854__auto___7491 = len;
var i_7492 = (0);
while(true){
if((i_7492 < n__4854__auto___7491)){
(new_arr[i_7492] = (arr[i_7492]));

var G__7493 = (i_7492 + (1));
i_7492 = G__7493;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7494 = (i + (1));
i = G__7494;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__7503__delegate = function (array,i,idxs){
var G__7500 = aget;
var G__7501 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7502 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7500,G__7501,G__7502) : cljs.core.apply.call(null,G__7500,G__7501,G__7502));
};
var G__7503 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7504__i = 0, G__7504__a = new Array(arguments.length -  2);
while (G__7504__i < G__7504__a.length) {G__7504__a[G__7504__i] = arguments[G__7504__i + 2]; ++G__7504__i;}
  idxs = new cljs.core.IndexedSeq(G__7504__a,0);
} 
return G__7503__delegate.call(this,array,i,idxs);};
G__7503.cljs$lang$maxFixedArity = 2;
G__7503.cljs$lang$applyTo = (function (arglist__7505){
var array = cljs.core.first(arglist__7505);
arglist__7505 = cljs.core.next(arglist__7505);
var i = cljs.core.first(arglist__7505);
var idxs = cljs.core.rest(arglist__7505);
return G__7503__delegate(array,i,idxs);
});
G__7503.cljs$core$IFn$_invoke$arity$variadic = G__7503__delegate;
return G__7503;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__7506 = null;
if (arguments.length > 2) {
var G__7507__i = 0, G__7507__a = new Array(arguments.length -  2);
while (G__7507__i < G__7507__a.length) {G__7507__a[G__7507__i] = arguments[G__7507__i + 2]; ++G__7507__i;}
G__7506 = new cljs.core.IndexedSeq(G__7507__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7506);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__7516__delegate = function (array,idx,idx2,idxv){
var G__7512 = aset;
var G__7513 = (array[idx]);
var G__7514 = idx2;
var G__7515 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7512,G__7513,G__7514,G__7515) : cljs.core.apply.call(null,G__7512,G__7513,G__7514,G__7515));
};
var G__7516 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7517__i = 0, G__7517__a = new Array(arguments.length -  3);
while (G__7517__i < G__7517__a.length) {G__7517__a[G__7517__i] = arguments[G__7517__i + 3]; ++G__7517__i;}
  idxv = new cljs.core.IndexedSeq(G__7517__a,0);
} 
return G__7516__delegate.call(this,array,idx,idx2,idxv);};
G__7516.cljs$lang$maxFixedArity = 3;
G__7516.cljs$lang$applyTo = (function (arglist__7518){
var array = cljs.core.first(arglist__7518);
arglist__7518 = cljs.core.next(arglist__7518);
var idx = cljs.core.first(arglist__7518);
arglist__7518 = cljs.core.next(arglist__7518);
var idx2 = cljs.core.first(arglist__7518);
var idxv = cljs.core.rest(arglist__7518);
return G__7516__delegate(array,idx,idx2,idxv);
});
G__7516.cljs$core$IFn$_invoke$arity$variadic = G__7516__delegate;
return G__7516;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__7519 = null;
if (arguments.length > 3) {
var G__7520__i = 0, G__7520__a = new Array(arguments.length -  3);
while (G__7520__i < G__7520__a.length) {G__7520__a[G__7520__i] = arguments[G__7520__i + 3]; ++G__7520__i;}
G__7519 = new cljs.core.IndexedSeq(G__7520__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__7526 = (function (a,x){
a.push(x);

return a;
});
var G__7527 = [];
var G__7528 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7526,G__7527,G__7528) : cljs.core.reduce.call(null,G__7526,G__7527,G__7528));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7529__i = 0, G__7529__a = new Array(arguments.length -  2);
while (G__7529__i < G__7529__a.length) {G__7529__a[G__7529__i] = arguments[G__7529__i + 2]; ++G__7529__i;}
  args = new cljs.core.IndexedSeq(G__7529__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__7530){
var obj = cljs.core.first(arglist__7530);
arglist__7530 = cljs.core.next(arglist__7530);
var s = cljs.core.first(arglist__7530);
var args = cljs.core.rest(arglist__7530);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj7532 = {};
return obj7532;
})();


cljs.core.IFn = (function (){var obj7534 = {};
return obj7534;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7580 = x__4611__auto__;
return goog.typeOf(G__7580);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7582 = x__4611__auto__;
return goog.typeOf(G__7582);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7584 = x__4611__auto__;
return goog.typeOf(G__7584);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7586 = x__4611__auto__;
return goog.typeOf(G__7586);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7588 = x__4611__auto__;
return goog.typeOf(G__7588);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7590 = x__4611__auto__;
return goog.typeOf(G__7590);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7592 = x__4611__auto__;
return goog.typeOf(G__7592);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7594 = x__4611__auto__;
return goog.typeOf(G__7594);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7596 = x__4611__auto__;
return goog.typeOf(G__7596);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7598 = x__4611__auto__;
return goog.typeOf(G__7598);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7600 = x__4611__auto__;
return goog.typeOf(G__7600);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7602 = x__4611__auto__;
return goog.typeOf(G__7602);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7604 = x__4611__auto__;
return goog.typeOf(G__7604);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7606 = x__4611__auto__;
return goog.typeOf(G__7606);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7608 = x__4611__auto__;
return goog.typeOf(G__7608);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7610 = x__4611__auto__;
return goog.typeOf(G__7610);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7612 = x__4611__auto__;
return goog.typeOf(G__7612);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7614 = x__4611__auto__;
return goog.typeOf(G__7614);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7616 = x__4611__auto__;
return goog.typeOf(G__7616);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7618 = x__4611__auto__;
return goog.typeOf(G__7618);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7620 = x__4611__auto__;
return goog.typeOf(G__7620);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._invoke[(function (){var G__7622 = x__4611__auto__;
return goog.typeOf(G__7622);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._invoke["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7624 = {};
return obj7624;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3955__auto__ = value;
if(and__3955__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3955__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4611__auto__ = (((value == null))?null:value);
return (function (){var or__3967__auto__ = (cljs.core._clone[(function (){var G__7628 = x__4611__auto__;
return goog.typeOf(G__7628);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._clone["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7630 = {};
return obj7630;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._count[(function (){var G__7634 = x__4611__auto__;
return goog.typeOf(G__7634);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._count["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7636 = {};
return obj7636;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._empty[(function (){var G__7640 = x__4611__auto__;
return goog.typeOf(G__7640);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._empty["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7642 = {};
return obj7642;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._conj[(function (){var G__7646 = x__4611__auto__;
return goog.typeOf(G__7646);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._conj["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7648 = {};
return obj7648;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._nth[(function (){var G__7654 = x__4611__auto__;
return goog.typeOf(G__7654);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._nth["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._nth[(function (){var G__7656 = x__4611__auto__;
return goog.typeOf(G__7656);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._nth["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj7658 = {};
return obj7658;
})();


cljs.core.ISeq = (function (){var obj7660 = {};
return obj7660;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._first[(function (){var G__7664 = x__4611__auto__;
return goog.typeOf(G__7664);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._first["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._rest[(function (){var G__7668 = x__4611__auto__;
return goog.typeOf(G__7668);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._rest["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7670 = {};
return obj7670;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._next[(function (){var G__7674 = x__4611__auto__;
return goog.typeOf(G__7674);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._next["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7676 = {};
return obj7676;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._lookup[(function (){var G__7682 = x__4611__auto__;
return goog.typeOf(G__7682);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._lookup["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._lookup[(function (){var G__7684 = x__4611__auto__;
return goog.typeOf(G__7684);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._lookup["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7686 = {};
return obj7686;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7690 = x__4611__auto__;
return goog.typeOf(G__7690);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._assoc[(function (){var G__7694 = x__4611__auto__;
return goog.typeOf(G__7694);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._assoc["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7696 = {};
return obj7696;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._dissoc[(function (){var G__7700 = x__4611__auto__;
return goog.typeOf(G__7700);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7702 = {};
return obj7702;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._key[(function (){var G__7706 = x__4611__auto__;
return goog.typeOf(G__7706);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._key["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._val[(function (){var G__7710 = x__4611__auto__;
return goog.typeOf(G__7710);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._val["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7712 = {};
return obj7712;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._disjoin[(function (){var G__7716 = x__4611__auto__;
return goog.typeOf(G__7716);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7718 = {};
return obj7718;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._peek[(function (){var G__7722 = x__4611__auto__;
return goog.typeOf(G__7722);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._peek["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._pop[(function (){var G__7726 = x__4611__auto__;
return goog.typeOf(G__7726);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._pop["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7728 = {};
return obj7728;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._assoc_n[(function (){var G__7732 = x__4611__auto__;
return goog.typeOf(G__7732);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7734 = {};
return obj7734;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._deref[(function (){var G__7738 = x__4611__auto__;
return goog.typeOf(G__7738);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._deref["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7740 = {};
return obj7740;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7744 = x__4611__auto__;
return goog.typeOf(G__7744);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7746 = {};
return obj7746;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._meta[(function (){var G__7750 = x__4611__auto__;
return goog.typeOf(G__7750);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._meta["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7752 = {};
return obj7752;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._with_meta[(function (){var G__7756 = x__4611__auto__;
return goog.typeOf(G__7756);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7758 = {};
return obj7758;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._reduce[(function (){var G__7764 = x__4611__auto__;
return goog.typeOf(G__7764);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._reduce["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._reduce[(function (){var G__7766 = x__4611__auto__;
return goog.typeOf(G__7766);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._reduce["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7768 = {};
return obj7768;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._kv_reduce[(function (){var G__7772 = x__4611__auto__;
return goog.typeOf(G__7772);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7774 = {};
return obj7774;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._equiv[(function (){var G__7778 = x__4611__auto__;
return goog.typeOf(G__7778);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._equiv["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7780 = {};
return obj7780;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._hash[(function (){var G__7784 = x__4611__auto__;
return goog.typeOf(G__7784);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._hash["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7786 = {};
return obj7786;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._seq[(function (){var G__7790 = x__4611__auto__;
return goog.typeOf(G__7790);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._seq["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7792 = {};
return obj7792;
})();


cljs.core.IList = (function (){var obj7794 = {};
return obj7794;
})();


cljs.core.IRecord = (function (){var obj7796 = {};
return obj7796;
})();


cljs.core.IReversible = (function (){var obj7798 = {};
return obj7798;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._rseq[(function (){var G__7802 = x__4611__auto__;
return goog.typeOf(G__7802);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._rseq["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7804 = {};
return obj7804;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._sorted_seq[(function (){var G__7808 = x__4611__auto__;
return goog.typeOf(G__7808);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7812 = x__4611__auto__;
return goog.typeOf(G__7812);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._entry_key[(function (){var G__7816 = x__4611__auto__;
return goog.typeOf(G__7816);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._comparator[(function (){var G__7820 = x__4611__auto__;
return goog.typeOf(G__7820);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._comparator["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7822 = {};
return obj7822;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3955__auto__ = writer;
if(and__3955__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3955__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4611__auto__ = (((writer == null))?null:writer);
return (function (){var or__3967__auto__ = (cljs.core._write[(function (){var G__7826 = x__4611__auto__;
return goog.typeOf(G__7826);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._write["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3955__auto__ = writer;
if(and__3955__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3955__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4611__auto__ = (((writer == null))?null:writer);
return (function (){var or__3967__auto__ = (cljs.core._flush[(function (){var G__7830 = x__4611__auto__;
return goog.typeOf(G__7830);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._flush["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7832 = {};
return obj7832;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._pr_writer[(function (){var G__7836 = x__4611__auto__;
return goog.typeOf(G__7836);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7838 = {};
return obj7838;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3955__auto__ = d;
if(and__3955__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3955__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4611__auto__ = (((d == null))?null:d);
return (function (){var or__3967__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7842 = x__4611__auto__;
return goog.typeOf(G__7842);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7844 = {};
return obj7844;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._notify_watches[(function (){var G__7848 = x__4611__auto__;
return goog.typeOf(G__7848);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._add_watch[(function (){var G__7852 = x__4611__auto__;
return goog.typeOf(G__7852);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3955__auto__ = this$;
if(and__3955__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3955__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4611__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3967__auto__ = (cljs.core._remove_watch[(function (){var G__7856 = x__4611__auto__;
return goog.typeOf(G__7856);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7858 = {};
return obj7858;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._as_transient[(function (){var G__7862 = x__4611__auto__;
return goog.typeOf(G__7862);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7864 = {};
return obj7864;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._conj_BANG_[(function (){var G__7868 = x__4611__auto__;
return goog.typeOf(G__7868);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7872 = x__4611__auto__;
return goog.typeOf(G__7872);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7874 = {};
return obj7874;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7878 = x__4611__auto__;
return goog.typeOf(G__7878);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7880 = {};
return obj7880;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7884 = x__4611__auto__;
return goog.typeOf(G__7884);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7886 = {};
return obj7886;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7890 = x__4611__auto__;
return goog.typeOf(G__7890);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._pop_BANG_[(function (){var G__7894 = x__4611__auto__;
return goog.typeOf(G__7894);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7896 = {};
return obj7896;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3955__auto__ = tcoll;
if(and__3955__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4611__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3967__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7900 = x__4611__auto__;
return goog.typeOf(G__7900);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7902 = {};
return obj7902;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._compare[(function (){var G__7906 = x__4611__auto__;
return goog.typeOf(G__7906);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._compare["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7908 = {};
return obj7908;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._drop_first[(function (){var G__7912 = x__4611__auto__;
return goog.typeOf(G__7912);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7914 = {};
return obj7914;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._chunked_first[(function (){var G__7918 = x__4611__auto__;
return goog.typeOf(G__7918);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._chunked_rest[(function (){var G__7922 = x__4611__auto__;
return goog.typeOf(G__7922);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7924 = {};
return obj7924;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._chunked_next[(function (){var G__7928 = x__4611__auto__;
return goog.typeOf(G__7928);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7930 = {};
return obj7930;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._name[(function (){var G__7934 = x__4611__auto__;
return goog.typeOf(G__7934);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._name["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._namespace[(function (){var G__7938 = x__4611__auto__;
return goog.typeOf(G__7938);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._namespace["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7940 = {};
return obj7940;
})();


cljs.core.IReset = (function (){var obj7942 = {};
return obj7942;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._reset_BANG_[(function (){var G__7946 = x__4611__auto__;
return goog.typeOf(G__7946);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7948 = {};
return obj7948;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._swap_BANG_[(function (){var G__7958 = x__4611__auto__;
return goog.typeOf(G__7958);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._swap_BANG_[(function (){var G__7960 = x__4611__auto__;
return goog.typeOf(G__7960);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._swap_BANG_[(function (){var G__7962 = x__4611__auto__;
return goog.typeOf(G__7962);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._swap_BANG_[(function (){var G__7964 = x__4611__auto__;
return goog.typeOf(G__7964);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj7966 = {};
return obj7966;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3955__auto__ = o;
if(and__3955__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3955__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4611__auto__ = (((o == null))?null:o);
return (function (){var or__3967__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7970 = x__4611__auto__;
return goog.typeOf(G__7970);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj7972 = {};
return obj7972;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3955__auto__ = coll;
if(and__3955__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3955__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4611__auto__ = (((coll == null))?null:coll);
return (function (){var or__3967__auto__ = (cljs.core._iterator[(function (){var G__7976 = x__4611__auto__;
return goog.typeOf(G__7976);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._iterator["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7979 = (4294967295);
var G__7980 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7979,G__7980) : Math.imul.call(null,G__7979,G__7980));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__7983 = a;
var G__7984 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7983,G__7984) : Math.imul.call(null,G__7983,G__7984));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7985 = (i + (2));
var G__7986 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7985;
h1 = G__7986;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7988 = {};
return obj7988;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7989 = (i + (1));
var G__7990 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7989;
hash = G__7990;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7994 = {};
return obj7994;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__7997 = o;
if(G__7997){
var bit__4641__auto__ = (G__7997.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4641__auto__) || (G__7997.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7998 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7998) : Math.floor.call(null,G__7998));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3955__auto__ = cljs.core.not(a.ns);
if(and__3955__auto__){
return b.ns;
} else {
return and__3955__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8005 = a.ns;
var G__8006 = b.ns;
return goog.array.defaultCompare(G__8005,G__8006);
})();
if(((0) === nsc)){
var G__8007 = a.name;
var G__8008 = b.name;
return goog.array.defaultCompare(G__8007,G__8008);
} else {
return nsc;
}
}
} else {
var G__8009 = a.name;
var G__8010 = b.name;
return goog.array.defaultCompare(G__8009,G__8010);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__8012 = null;
var G__8012__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__8012__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__8012 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8012__2.call(this,self__,coll);
case 3:
return G__8012__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8012.cljs$core$IFn$_invoke$arity$2 = G__8012__2;
G__8012.cljs$core$IFn$_invoke$arity$3 = G__8012__3;
return G__8012;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args8011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8011)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4388__auto__ = self__._hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__8060 = null;
var G__8060__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__8060__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__8060__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__8060__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__8060__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__8060__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__8060__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__8060__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__8060__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__8060__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__8060__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__8060__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__8060__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__8060__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__8060__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__8060__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__8060__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__8060__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__8060__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__8060__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__8060__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__8060__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8016 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__8017 = a;
var G__8018 = b;
var G__8019 = c;
var G__8020 = d;
var G__8021 = e;
var G__8022 = f;
var G__8023 = g;
var G__8024 = h;
var G__8025 = i;
var G__8026 = j;
var G__8027 = k;
var G__8028 = l;
var G__8029 = m;
var G__8030 = n;
var G__8031 = o;
var G__8032 = p;
var G__8033 = q;
var G__8034 = r;
var G__8035 = s;
var G__8036 = t;
var G__8037 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037) : cljs.core.apply.call(null,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037));
});
G__8060 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8060__1.call(this,self__);
case 2:
return G__8060__2.call(this,self__,a);
case 3:
return G__8060__3.call(this,self__,a,b);
case 4:
return G__8060__4.call(this,self__,a,b,c);
case 5:
return G__8060__5.call(this,self__,a,b,c,d);
case 6:
return G__8060__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8060__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8060__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8060__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8060__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8060__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8060__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8060__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8060__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8060__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8060__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8060__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8060__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8060__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8060__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8060__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8060__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8060.cljs$core$IFn$_invoke$arity$1 = G__8060__1;
G__8060.cljs$core$IFn$_invoke$arity$2 = G__8060__2;
G__8060.cljs$core$IFn$_invoke$arity$3 = G__8060__3;
G__8060.cljs$core$IFn$_invoke$arity$4 = G__8060__4;
G__8060.cljs$core$IFn$_invoke$arity$5 = G__8060__5;
G__8060.cljs$core$IFn$_invoke$arity$6 = G__8060__6;
G__8060.cljs$core$IFn$_invoke$arity$7 = G__8060__7;
G__8060.cljs$core$IFn$_invoke$arity$8 = G__8060__8;
G__8060.cljs$core$IFn$_invoke$arity$9 = G__8060__9;
G__8060.cljs$core$IFn$_invoke$arity$10 = G__8060__10;
G__8060.cljs$core$IFn$_invoke$arity$11 = G__8060__11;
G__8060.cljs$core$IFn$_invoke$arity$12 = G__8060__12;
G__8060.cljs$core$IFn$_invoke$arity$13 = G__8060__13;
G__8060.cljs$core$IFn$_invoke$arity$14 = G__8060__14;
G__8060.cljs$core$IFn$_invoke$arity$15 = G__8060__15;
G__8060.cljs$core$IFn$_invoke$arity$16 = G__8060__16;
G__8060.cljs$core$IFn$_invoke$arity$17 = G__8060__17;
G__8060.cljs$core$IFn$_invoke$arity$18 = G__8060__18;
G__8060.cljs$core$IFn$_invoke$arity$19 = G__8060__19;
G__8060.cljs$core$IFn$_invoke$arity$20 = G__8060__20;
G__8060.cljs$core$IFn$_invoke$arity$21 = G__8060__21;
G__8060.cljs$core$IFn$_invoke$arity$22 = G__8060__22;
return G__8060;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args8015){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8015)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8038 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__8039 = a;
var G__8040 = b;
var G__8041 = c;
var G__8042 = d;
var G__8043 = e;
var G__8044 = f;
var G__8045 = g;
var G__8046 = h;
var G__8047 = i;
var G__8048 = j;
var G__8049 = k;
var G__8050 = l;
var G__8051 = m;
var G__8052 = n;
var G__8053 = o;
var G__8054 = p;
var G__8055 = q;
var G__8056 = r;
var G__8057 = s;
var G__8058 = t;
var G__8059 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059) : cljs.core.apply.call(null,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056,G__8057,G__8058,G__8059));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__8062 = x;
if(G__8062){
var bit__4648__auto__ = null;
if(cljs.core.truth_((function (){var or__3967__auto__ = bit__4648__auto__;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return G__8062.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__8062.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8062);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8062);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__8064 = value;
if(G__8064){
var bit__4648__auto__ = (G__8064.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4648__auto__) || (G__8064.cljs$core$ICloneable$)){
return true;
} else {
if((!G__8064.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8064);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8066 = coll;
if(G__8066){
var bit__4641__auto__ = (G__8066.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4641__auto__) || (G__8066.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8068 = coll;
if(G__8068){
var bit__4641__auto__ = (G__8068.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4641__auto__) || (G__8068.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__8070 = coll;
if(G__8070){
var bit__4641__auto__ = (G__8070.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4641__auto__) || (G__8070.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8072 = coll;
if(G__8072){
var bit__4641__auto__ = (G__8072.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4641__auto__) || (G__8072.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__8077__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8078 = y;
var G__8079 = cljs.core.first(more);
var G__8080 = cljs.core.next(more);
x = G__8078;
y = G__8079;
more = G__8080;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8077 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8081__i = 0, G__8081__a = new Array(arguments.length -  2);
while (G__8081__i < G__8081__a.length) {G__8081__a[G__8081__i] = arguments[G__8081__i + 2]; ++G__8081__i;}
  more = new cljs.core.IndexedSeq(G__8081__a,0);
} 
return G__8077__delegate.call(this,x,y,more);};
G__8077.cljs$lang$maxFixedArity = 2;
G__8077.cljs$lang$applyTo = (function (arglist__8082){
var x = cljs.core.first(arglist__8082);
arglist__8082 = cljs.core.next(arglist__8082);
var y = cljs.core.first(arglist__8082);
var more = cljs.core.rest(arglist__8082);
return G__8077__delegate(x,y,more);
});
G__8077.cljs$core$IFn$_invoke$arity$variadic = G__8077__delegate;
return G__8077;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__8083 = null;
if (arguments.length > 2) {
var G__8084__i = 0, G__8084__a = new Array(arguments.length -  2);
while (G__8084__i < G__8084__a.length) {G__8084__a[G__8084__i] = arguments[G__8084__i + 2]; ++G__8084__i;}
G__8083 = new cljs.core.IndexedSeq(G__8084__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__8085 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__8085) : cljs.core.es6_iterator_seq.call(null,G__8085));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8086 = (n + (1));
var G__8087 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8088 = cljs.core.next(coll__$1);
n = G__8086;
hash_code = G__8087;
coll__$1 = G__8088;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8089 = (n + (1));
var G__8090 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8091 = cljs.core.next(coll__$1);
n = G__8089;
hash_code = G__8090;
coll__$1 = G__8091;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__8092 = o;
return goog.getUid(G__8092);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__8094 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8094) : cljs.core.deref.call(null,G__8094));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8101 = val;
var G__8102 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8101,G__8102) : f.call(null,G__8101,G__8102));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8107 = nval;
var G__8108 = (n + (1));
val = G__8107;
n = G__8108;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8103 = val__$1;
var G__8104 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8103,G__8104) : f.call(null,G__8103,G__8104));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8109 = nval;
var G__8110 = (n + (1));
val__$1 = G__8109;
n = G__8110;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8105 = val__$1;
var G__8106 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8105,G__8106) : f.call(null,G__8105,G__8106));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8111 = nval;
var G__8112 = (n + (1));
val__$1 = G__8111;
n = G__8112;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8119 = val;
var G__8120 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8119,G__8120) : f.call(null,G__8119,G__8120));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8125 = nval;
var G__8126 = (n + (1));
val = G__8125;
n = G__8126;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8121 = val__$1;
var G__8122 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8121,G__8122) : f.call(null,G__8121,G__8122));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8127 = nval;
var G__8128 = (n + (1));
val__$1 = G__8127;
n = G__8128;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8123 = val__$1;
var G__8124 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8123,G__8124) : f.call(null,G__8123,G__8124));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8129 = nval;
var G__8130 = (n + (1));
val__$1 = G__8129;
n = G__8130;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__8132 = x;
if(G__8132){
var bit__4648__auto__ = (G__8132.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4648__auto__) || (G__8132.cljs$core$ICounted$)){
return true;
} else {
if((!G__8132.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8132);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8132);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__8134 = x;
if(G__8134){
var bit__4648__auto__ = (G__8134.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4648__auto__) || (G__8134.cljs$core$IIndexed$)){
return true;
} else {
if((!G__8134.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8134);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8135 = coll__$1;
var G__8136 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8135,G__8136) : cljs.core.equiv_sequential.call(null,G__8135,G__8136));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8137 = o;
var G__8138 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8137,G__8138) : cljs.core.cons.call(null,G__8137,G__8138));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8141 = coll__$1;
var G__8142 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8141,G__8142) : cljs.core.equiv_sequential.call(null,G__8141,G__8142));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__8143 = cljs.core.List.EMPTY;
var G__8144 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__8143,G__8144) : cljs.core.with_meta.call(null,G__8143,G__8144));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__8145 = f;
var G__8146 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__8145,G__8146) : cljs.core.seq_reduce.call(null,G__8145,G__8146));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__8147 = f;
var G__8148 = start;
var G__8149 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__8147,G__8148,G__8149) : cljs.core.seq_reduce.call(null,G__8147,G__8148,G__8149));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8150 = o;
var G__8151 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8150,G__8151) : cljs.core.cons.call(null,G__8150,G__8151));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__8152 = sn;
s = G__8152;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__8157__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__8158 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__8159 = cljs.core.first(xs);
var G__8160 = cljs.core.next(xs);
coll = G__8158;
x = G__8159;
xs = G__8160;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__8157 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__8161__i = 0, G__8161__a = new Array(arguments.length -  2);
while (G__8161__i < G__8161__a.length) {G__8161__a[G__8161__i] = arguments[G__8161__i + 2]; ++G__8161__i;}
  xs = new cljs.core.IndexedSeq(G__8161__a,0);
} 
return G__8157__delegate.call(this,coll,x,xs);};
G__8157.cljs$lang$maxFixedArity = 2;
G__8157.cljs$lang$applyTo = (function (arglist__8162){
var coll = cljs.core.first(arglist__8162);
arglist__8162 = cljs.core.next(arglist__8162);
var x = cljs.core.first(arglist__8162);
var xs = cljs.core.rest(arglist__8162);
return G__8157__delegate(coll,x,xs);
});
G__8157.cljs$core$IFn$_invoke$arity$variadic = G__8157__delegate;
return G__8157;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__8163 = null;
if (arguments.length > 2) {
var G__8164__i = 0, G__8164__a = new Array(arguments.length -  2);
while (G__8164__i < G__8164__a.length) {G__8164__a[G__8164__i] = arguments[G__8164__i + 2]; ++G__8164__i;}
G__8163 = new cljs.core.IndexedSeq(G__8164__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__8163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__8165 = cljs.core.next(s);
var G__8166 = (acc + (1));
s = G__8165;
acc = G__8166;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__8168 = coll;
if(G__8168){
var bit__4641__auto__ = (G__8168.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4641__auto__) || (G__8168.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__8169 = cljs.core.next(coll);
var G__8170 = (n - (1));
coll = G__8169;
n = G__8170;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__8171 = cljs.core.next(coll);
var G__8172 = (n - (1));
var G__8173 = not_found;
coll = G__8171;
n = G__8172;
not_found = G__8173;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__8178 = coll;
if(G__8178){
var bit__4641__auto__ = (G__8178.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4641__auto__) || (G__8178.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8179 = coll;
if(G__8179){
var bit__4648__auto__ = (G__8179.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4648__auto__) || (G__8179.cljs$core$ISeq$)){
return true;
} else {
if((!G__8179.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8179);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8179);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__8180 = coll;
if(G__8180){
var bit__4641__auto__ = (G__8180.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4641__auto__) || (G__8180.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8181 = coll;
if(G__8181){
var bit__4648__auto__ = (G__8181.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4648__auto__) || (G__8181.cljs$core$ISeq$)){
return true;
} else {
if((!G__8181.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8181);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8181);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__8182 = (n__$1 - (1));
var G__8183 = cljs.core.rest(xs);
n__$1 = G__8182;
xs = G__8183;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__8186 = o;
if(G__8186){
var bit__4641__auto__ = (G__8186.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4641__auto__) || (G__8186.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__8187 = o;
if(G__8187){
var bit__4641__auto__ = (G__8187.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4641__auto__) || (G__8187.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__8191__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__8192 = ret;
var G__8193 = cljs.core.first(kvs);
var G__8194 = cljs.core.second(kvs);
var G__8195 = cljs.core.nnext(kvs);
coll = G__8192;
k = G__8193;
v = G__8194;
kvs = G__8195;
continue;
} else {
return ret;
}
break;
}
};
var G__8191 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8196__i = 0, G__8196__a = new Array(arguments.length -  3);
while (G__8196__i < G__8196__a.length) {G__8196__a[G__8196__i] = arguments[G__8196__i + 3]; ++G__8196__i;}
  kvs = new cljs.core.IndexedSeq(G__8196__a,0);
} 
return G__8191__delegate.call(this,coll,k,v,kvs);};
G__8191.cljs$lang$maxFixedArity = 3;
G__8191.cljs$lang$applyTo = (function (arglist__8197){
var coll = cljs.core.first(arglist__8197);
arglist__8197 = cljs.core.next(arglist__8197);
var k = cljs.core.first(arglist__8197);
arglist__8197 = cljs.core.next(arglist__8197);
var v = cljs.core.first(arglist__8197);
var kvs = cljs.core.rest(arglist__8197);
return G__8191__delegate(coll,k,v,kvs);
});
G__8191.cljs$core$IFn$_invoke$arity$variadic = G__8191__delegate;
return G__8191;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__8198 = null;
if (arguments.length > 3) {
var G__8199__i = 0, G__8199__a = new Array(arguments.length -  3);
while (G__8199__i < G__8199__a.length) {G__8199__a[G__8199__i] = arguments[G__8199__i + 3]; ++G__8199__i;}
G__8198 = new cljs.core.IndexedSeq(G__8199__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__8198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__8202__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8203 = ret;
var G__8204 = cljs.core.first(ks);
var G__8205 = cljs.core.next(ks);
coll = G__8203;
k = G__8204;
ks = G__8205;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8202 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8206__i = 0, G__8206__a = new Array(arguments.length -  2);
while (G__8206__i < G__8206__a.length) {G__8206__a[G__8206__i] = arguments[G__8206__i + 2]; ++G__8206__i;}
  ks = new cljs.core.IndexedSeq(G__8206__a,0);
} 
return G__8202__delegate.call(this,coll,k,ks);};
G__8202.cljs$lang$maxFixedArity = 2;
G__8202.cljs$lang$applyTo = (function (arglist__8207){
var coll = cljs.core.first(arglist__8207);
arglist__8207 = cljs.core.next(arglist__8207);
var k = cljs.core.first(arglist__8207);
var ks = cljs.core.rest(arglist__8207);
return G__8202__delegate(coll,k,ks);
});
G__8202.cljs$core$IFn$_invoke$arity$variadic = G__8202__delegate;
return G__8202;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__8208 = null;
if (arguments.length > 2) {
var G__8209__i = 0, G__8209__a = new Array(arguments.length -  2);
while (G__8209__i < G__8209__a.length) {G__8209__a[G__8209__i] = arguments[G__8209__i + 2]; ++G__8209__i;}
G__8208 = new cljs.core.IndexedSeq(G__8209__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3967__auto__ = (function (){var G__8214 = f;
return goog.isFunction(G__8214);
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var G__8215 = f;
if(G__8215){
var bit__4648__auto__ = null;
if(cljs.core.truth_((function (){var or__3967__auto____$1 = bit__4648__auto__;
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
return G__8215.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__8215.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8215);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8215);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__8681 = null;
var G__8681__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8681__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8217 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8217) : self__.afn.call(null,G__8217));
});
var G__8681__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8218 = a;
var G__8219 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8218,G__8219) : self__.afn.call(null,G__8218,G__8219));
});
var G__8681__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8220 = a;
var G__8221 = b;
var G__8222 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8220,G__8221,G__8222) : self__.afn.call(null,G__8220,G__8221,G__8222));
});
var G__8681__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8223 = a;
var G__8224 = b;
var G__8225 = c;
var G__8226 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8223,G__8224,G__8225,G__8226) : self__.afn.call(null,G__8223,G__8224,G__8225,G__8226));
});
var G__8681__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8227 = a;
var G__8228 = b;
var G__8229 = c;
var G__8230 = d;
var G__8231 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8227,G__8228,G__8229,G__8230,G__8231) : self__.afn.call(null,G__8227,G__8228,G__8229,G__8230,G__8231));
});
var G__8681__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8232 = a;
var G__8233 = b;
var G__8234 = c;
var G__8235 = d;
var G__8236 = e;
var G__8237 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8232,G__8233,G__8234,G__8235,G__8236,G__8237) : self__.afn.call(null,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237));
});
var G__8681__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8238 = a;
var G__8239 = b;
var G__8240 = c;
var G__8241 = d;
var G__8242 = e;
var G__8243 = f;
var G__8244 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244) : self__.afn.call(null,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244));
});
var G__8681__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8245 = a;
var G__8246 = b;
var G__8247 = c;
var G__8248 = d;
var G__8249 = e;
var G__8250 = f;
var G__8251 = g;
var G__8252 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252) : self__.afn.call(null,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252));
});
var G__8681__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8253 = a;
var G__8254 = b;
var G__8255 = c;
var G__8256 = d;
var G__8257 = e;
var G__8258 = f;
var G__8259 = g;
var G__8260 = h;
var G__8261 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261) : self__.afn.call(null,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261));
});
var G__8681__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8262 = a;
var G__8263 = b;
var G__8264 = c;
var G__8265 = d;
var G__8266 = e;
var G__8267 = f;
var G__8268 = g;
var G__8269 = h;
var G__8270 = i;
var G__8271 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271) : self__.afn.call(null,G__8262,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271));
});
var G__8681__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8272 = a;
var G__8273 = b;
var G__8274 = c;
var G__8275 = d;
var G__8276 = e;
var G__8277 = f;
var G__8278 = g;
var G__8279 = h;
var G__8280 = i;
var G__8281 = j;
var G__8282 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282) : self__.afn.call(null,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282));
});
var G__8681__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8283 = a;
var G__8284 = b;
var G__8285 = c;
var G__8286 = d;
var G__8287 = e;
var G__8288 = f;
var G__8289 = g;
var G__8290 = h;
var G__8291 = i;
var G__8292 = j;
var G__8293 = k;
var G__8294 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294) : self__.afn.call(null,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294));
});
var G__8681__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8295 = a;
var G__8296 = b;
var G__8297 = c;
var G__8298 = d;
var G__8299 = e;
var G__8300 = f;
var G__8301 = g;
var G__8302 = h;
var G__8303 = i;
var G__8304 = j;
var G__8305 = k;
var G__8306 = l;
var G__8307 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307) : self__.afn.call(null,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307));
});
var G__8681__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8308 = a;
var G__8309 = b;
var G__8310 = c;
var G__8311 = d;
var G__8312 = e;
var G__8313 = f;
var G__8314 = g;
var G__8315 = h;
var G__8316 = i;
var G__8317 = j;
var G__8318 = k;
var G__8319 = l;
var G__8320 = m;
var G__8321 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321) : self__.afn.call(null,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321));
});
var G__8681__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8322 = a;
var G__8323 = b;
var G__8324 = c;
var G__8325 = d;
var G__8326 = e;
var G__8327 = f;
var G__8328 = g;
var G__8329 = h;
var G__8330 = i;
var G__8331 = j;
var G__8332 = k;
var G__8333 = l;
var G__8334 = m;
var G__8335 = n;
var G__8336 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336) : self__.afn.call(null,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336));
});
var G__8681__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8337 = a;
var G__8338 = b;
var G__8339 = c;
var G__8340 = d;
var G__8341 = e;
var G__8342 = f;
var G__8343 = g;
var G__8344 = h;
var G__8345 = i;
var G__8346 = j;
var G__8347 = k;
var G__8348 = l;
var G__8349 = m;
var G__8350 = n;
var G__8351 = o;
var G__8352 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352) : self__.afn.call(null,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352));
});
var G__8681__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8353 = a;
var G__8354 = b;
var G__8355 = c;
var G__8356 = d;
var G__8357 = e;
var G__8358 = f;
var G__8359 = g;
var G__8360 = h;
var G__8361 = i;
var G__8362 = j;
var G__8363 = k;
var G__8364 = l;
var G__8365 = m;
var G__8366 = n;
var G__8367 = o;
var G__8368 = p;
var G__8369 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369) : self__.afn.call(null,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369));
});
var G__8681__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8370 = a;
var G__8371 = b;
var G__8372 = c;
var G__8373 = d;
var G__8374 = e;
var G__8375 = f;
var G__8376 = g;
var G__8377 = h;
var G__8378 = i;
var G__8379 = j;
var G__8380 = k;
var G__8381 = l;
var G__8382 = m;
var G__8383 = n;
var G__8384 = o;
var G__8385 = p;
var G__8386 = q;
var G__8387 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387) : self__.afn.call(null,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387));
});
var G__8681__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8388 = a;
var G__8389 = b;
var G__8390 = c;
var G__8391 = d;
var G__8392 = e;
var G__8393 = f;
var G__8394 = g;
var G__8395 = h;
var G__8396 = i;
var G__8397 = j;
var G__8398 = k;
var G__8399 = l;
var G__8400 = m;
var G__8401 = n;
var G__8402 = o;
var G__8403 = p;
var G__8404 = q;
var G__8405 = r;
var G__8406 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406) : self__.afn.call(null,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406));
});
var G__8681__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8407 = a;
var G__8408 = b;
var G__8409 = c;
var G__8410 = d;
var G__8411 = e;
var G__8412 = f;
var G__8413 = g;
var G__8414 = h;
var G__8415 = i;
var G__8416 = j;
var G__8417 = k;
var G__8418 = l;
var G__8419 = m;
var G__8420 = n;
var G__8421 = o;
var G__8422 = p;
var G__8423 = q;
var G__8424 = r;
var G__8425 = s;
var G__8426 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426) : self__.afn.call(null,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426));
});
var G__8681__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8427 = self__.afn;
var G__8428 = a;
var G__8429 = b;
var G__8430 = c;
var G__8431 = d;
var G__8432 = e;
var G__8433 = f;
var G__8434 = g;
var G__8435 = h;
var G__8436 = i;
var G__8437 = j;
var G__8438 = k;
var G__8439 = l;
var G__8440 = m;
var G__8441 = n;
var G__8442 = o;
var G__8443 = p;
var G__8444 = q;
var G__8445 = r;
var G__8446 = s;
var G__8447 = t;
var G__8448 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8427,G__8428,G__8429,G__8430,G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448) : cljs.core.apply.call(null,G__8427,G__8428,G__8429,G__8430,G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448));
});
G__8681 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8681__1.call(this,self__);
case 2:
return G__8681__2.call(this,self__,a);
case 3:
return G__8681__3.call(this,self__,a,b);
case 4:
return G__8681__4.call(this,self__,a,b,c);
case 5:
return G__8681__5.call(this,self__,a,b,c,d);
case 6:
return G__8681__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8681__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8681__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8681__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8681__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8681__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8681__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8681__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8681__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8681__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8681__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8681__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8681__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8681__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8681__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8681__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8681__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8681.cljs$core$IFn$_invoke$arity$1 = G__8681__1;
G__8681.cljs$core$IFn$_invoke$arity$2 = G__8681__2;
G__8681.cljs$core$IFn$_invoke$arity$3 = G__8681__3;
G__8681.cljs$core$IFn$_invoke$arity$4 = G__8681__4;
G__8681.cljs$core$IFn$_invoke$arity$5 = G__8681__5;
G__8681.cljs$core$IFn$_invoke$arity$6 = G__8681__6;
G__8681.cljs$core$IFn$_invoke$arity$7 = G__8681__7;
G__8681.cljs$core$IFn$_invoke$arity$8 = G__8681__8;
G__8681.cljs$core$IFn$_invoke$arity$9 = G__8681__9;
G__8681.cljs$core$IFn$_invoke$arity$10 = G__8681__10;
G__8681.cljs$core$IFn$_invoke$arity$11 = G__8681__11;
G__8681.cljs$core$IFn$_invoke$arity$12 = G__8681__12;
G__8681.cljs$core$IFn$_invoke$arity$13 = G__8681__13;
G__8681.cljs$core$IFn$_invoke$arity$14 = G__8681__14;
G__8681.cljs$core$IFn$_invoke$arity$15 = G__8681__15;
G__8681.cljs$core$IFn$_invoke$arity$16 = G__8681__16;
G__8681.cljs$core$IFn$_invoke$arity$17 = G__8681__17;
G__8681.cljs$core$IFn$_invoke$arity$18 = G__8681__18;
G__8681.cljs$core$IFn$_invoke$arity$19 = G__8681__19;
G__8681.cljs$core$IFn$_invoke$arity$20 = G__8681__20;
G__8681.cljs$core$IFn$_invoke$arity$21 = G__8681__21;
G__8681.cljs$core$IFn$_invoke$arity$22 = G__8681__22;
return G__8681;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args8216){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8216)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8449 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8449) : self__.afn.call(null,G__8449));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8450 = a;
var G__8451 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8450,G__8451) : self__.afn.call(null,G__8450,G__8451));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8452 = a;
var G__8453 = b;
var G__8454 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8452,G__8453,G__8454) : self__.afn.call(null,G__8452,G__8453,G__8454));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8455 = a;
var G__8456 = b;
var G__8457 = c;
var G__8458 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8455,G__8456,G__8457,G__8458) : self__.afn.call(null,G__8455,G__8456,G__8457,G__8458));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8459 = a;
var G__8460 = b;
var G__8461 = c;
var G__8462 = d;
var G__8463 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8459,G__8460,G__8461,G__8462,G__8463) : self__.afn.call(null,G__8459,G__8460,G__8461,G__8462,G__8463));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8464 = a;
var G__8465 = b;
var G__8466 = c;
var G__8467 = d;
var G__8468 = e;
var G__8469 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8464,G__8465,G__8466,G__8467,G__8468,G__8469) : self__.afn.call(null,G__8464,G__8465,G__8466,G__8467,G__8468,G__8469));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8470 = a;
var G__8471 = b;
var G__8472 = c;
var G__8473 = d;
var G__8474 = e;
var G__8475 = f;
var G__8476 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476) : self__.afn.call(null,G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8477 = a;
var G__8478 = b;
var G__8479 = c;
var G__8480 = d;
var G__8481 = e;
var G__8482 = f;
var G__8483 = g;
var G__8484 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8477,G__8478,G__8479,G__8480,G__8481,G__8482,G__8483,G__8484) : self__.afn.call(null,G__8477,G__8478,G__8479,G__8480,G__8481,G__8482,G__8483,G__8484));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8485 = a;
var G__8486 = b;
var G__8487 = c;
var G__8488 = d;
var G__8489 = e;
var G__8490 = f;
var G__8491 = g;
var G__8492 = h;
var G__8493 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491,G__8492,G__8493) : self__.afn.call(null,G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491,G__8492,G__8493));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8494 = a;
var G__8495 = b;
var G__8496 = c;
var G__8497 = d;
var G__8498 = e;
var G__8499 = f;
var G__8500 = g;
var G__8501 = h;
var G__8502 = i;
var G__8503 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8494,G__8495,G__8496,G__8497,G__8498,G__8499,G__8500,G__8501,G__8502,G__8503) : self__.afn.call(null,G__8494,G__8495,G__8496,G__8497,G__8498,G__8499,G__8500,G__8501,G__8502,G__8503));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8504 = a;
var G__8505 = b;
var G__8506 = c;
var G__8507 = d;
var G__8508 = e;
var G__8509 = f;
var G__8510 = g;
var G__8511 = h;
var G__8512 = i;
var G__8513 = j;
var G__8514 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8504,G__8505,G__8506,G__8507,G__8508,G__8509,G__8510,G__8511,G__8512,G__8513,G__8514) : self__.afn.call(null,G__8504,G__8505,G__8506,G__8507,G__8508,G__8509,G__8510,G__8511,G__8512,G__8513,G__8514));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8515 = a;
var G__8516 = b;
var G__8517 = c;
var G__8518 = d;
var G__8519 = e;
var G__8520 = f;
var G__8521 = g;
var G__8522 = h;
var G__8523 = i;
var G__8524 = j;
var G__8525 = k;
var G__8526 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8515,G__8516,G__8517,G__8518,G__8519,G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526) : self__.afn.call(null,G__8515,G__8516,G__8517,G__8518,G__8519,G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8527 = a;
var G__8528 = b;
var G__8529 = c;
var G__8530 = d;
var G__8531 = e;
var G__8532 = f;
var G__8533 = g;
var G__8534 = h;
var G__8535 = i;
var G__8536 = j;
var G__8537 = k;
var G__8538 = l;
var G__8539 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8527,G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535,G__8536,G__8537,G__8538,G__8539) : self__.afn.call(null,G__8527,G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535,G__8536,G__8537,G__8538,G__8539));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8540 = a;
var G__8541 = b;
var G__8542 = c;
var G__8543 = d;
var G__8544 = e;
var G__8545 = f;
var G__8546 = g;
var G__8547 = h;
var G__8548 = i;
var G__8549 = j;
var G__8550 = k;
var G__8551 = l;
var G__8552 = m;
var G__8553 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546,G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553) : self__.afn.call(null,G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546,G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8554 = a;
var G__8555 = b;
var G__8556 = c;
var G__8557 = d;
var G__8558 = e;
var G__8559 = f;
var G__8560 = g;
var G__8561 = h;
var G__8562 = i;
var G__8563 = j;
var G__8564 = k;
var G__8565 = l;
var G__8566 = m;
var G__8567 = n;
var G__8568 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8554,G__8555,G__8556,G__8557,G__8558,G__8559,G__8560,G__8561,G__8562,G__8563,G__8564,G__8565,G__8566,G__8567,G__8568) : self__.afn.call(null,G__8554,G__8555,G__8556,G__8557,G__8558,G__8559,G__8560,G__8561,G__8562,G__8563,G__8564,G__8565,G__8566,G__8567,G__8568));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8569 = a;
var G__8570 = b;
var G__8571 = c;
var G__8572 = d;
var G__8573 = e;
var G__8574 = f;
var G__8575 = g;
var G__8576 = h;
var G__8577 = i;
var G__8578 = j;
var G__8579 = k;
var G__8580 = l;
var G__8581 = m;
var G__8582 = n;
var G__8583 = o;
var G__8584 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8569,G__8570,G__8571,G__8572,G__8573,G__8574,G__8575,G__8576,G__8577,G__8578,G__8579,G__8580,G__8581,G__8582,G__8583,G__8584) : self__.afn.call(null,G__8569,G__8570,G__8571,G__8572,G__8573,G__8574,G__8575,G__8576,G__8577,G__8578,G__8579,G__8580,G__8581,G__8582,G__8583,G__8584));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8585 = a;
var G__8586 = b;
var G__8587 = c;
var G__8588 = d;
var G__8589 = e;
var G__8590 = f;
var G__8591 = g;
var G__8592 = h;
var G__8593 = i;
var G__8594 = j;
var G__8595 = k;
var G__8596 = l;
var G__8597 = m;
var G__8598 = n;
var G__8599 = o;
var G__8600 = p;
var G__8601 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8585,G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593,G__8594,G__8595,G__8596,G__8597,G__8598,G__8599,G__8600,G__8601) : self__.afn.call(null,G__8585,G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593,G__8594,G__8595,G__8596,G__8597,G__8598,G__8599,G__8600,G__8601));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8602 = a;
var G__8603 = b;
var G__8604 = c;
var G__8605 = d;
var G__8606 = e;
var G__8607 = f;
var G__8608 = g;
var G__8609 = h;
var G__8610 = i;
var G__8611 = j;
var G__8612 = k;
var G__8613 = l;
var G__8614 = m;
var G__8615 = n;
var G__8616 = o;
var G__8617 = p;
var G__8618 = q;
var G__8619 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8602,G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611,G__8612,G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619) : self__.afn.call(null,G__8602,G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611,G__8612,G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8620 = a;
var G__8621 = b;
var G__8622 = c;
var G__8623 = d;
var G__8624 = e;
var G__8625 = f;
var G__8626 = g;
var G__8627 = h;
var G__8628 = i;
var G__8629 = j;
var G__8630 = k;
var G__8631 = l;
var G__8632 = m;
var G__8633 = n;
var G__8634 = o;
var G__8635 = p;
var G__8636 = q;
var G__8637 = r;
var G__8638 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8620,G__8621,G__8622,G__8623,G__8624,G__8625,G__8626,G__8627,G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635,G__8636,G__8637,G__8638) : self__.afn.call(null,G__8620,G__8621,G__8622,G__8623,G__8624,G__8625,G__8626,G__8627,G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635,G__8636,G__8637,G__8638));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8639 = a;
var G__8640 = b;
var G__8641 = c;
var G__8642 = d;
var G__8643 = e;
var G__8644 = f;
var G__8645 = g;
var G__8646 = h;
var G__8647 = i;
var G__8648 = j;
var G__8649 = k;
var G__8650 = l;
var G__8651 = m;
var G__8652 = n;
var G__8653 = o;
var G__8654 = p;
var G__8655 = q;
var G__8656 = r;
var G__8657 = s;
var G__8658 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8639,G__8640,G__8641,G__8642,G__8643,G__8644,G__8645,G__8646,G__8647,G__8648,G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658) : self__.afn.call(null,G__8639,G__8640,G__8641,G__8642,G__8643,G__8644,G__8645,G__8646,G__8647,G__8648,G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8659 = self__.afn;
var G__8660 = a;
var G__8661 = b;
var G__8662 = c;
var G__8663 = d;
var G__8664 = e;
var G__8665 = f;
var G__8666 = g;
var G__8667 = h;
var G__8668 = i;
var G__8669 = j;
var G__8670 = k;
var G__8671 = l;
var G__8672 = m;
var G__8673 = n;
var G__8674 = o;
var G__8675 = p;
var G__8676 = q;
var G__8677 = r;
var G__8678 = s;
var G__8679 = t;
var G__8680 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8659,G__8660,G__8661,G__8662,G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677,G__8678,G__8679,G__8680) : cljs.core.apply.call(null,G__8659,G__8660,G__8661,G__8662,G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677,G__8678,G__8679,G__8680));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8685 = o;
if(G__8685){
var bit__4648__auto__ = (G__8685.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4648__auto__) || (G__8685.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8685.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8685);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8685);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function meta(o){
if((function (){var and__3955__auto__ = !((o == null));
if(and__3955__auto__){
var G__8689 = o;
if(G__8689){
var bit__4648__auto__ = (G__8689.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4648__auto__) || (G__8689.cljs$core$IMeta$)){
return true;
} else {
if((!G__8689.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8689);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8689);
}
} else {
return and__3955__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__8692__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8693 = ret;
var G__8694 = cljs.core.first(ks);
var G__8695 = cljs.core.next(ks);
coll = G__8693;
k = G__8694;
ks = G__8695;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8692 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8696__i = 0, G__8696__a = new Array(arguments.length -  2);
while (G__8696__i < G__8696__a.length) {G__8696__a[G__8696__i] = arguments[G__8696__i + 2]; ++G__8696__i;}
  ks = new cljs.core.IndexedSeq(G__8696__a,0);
} 
return G__8692__delegate.call(this,coll,k,ks);};
G__8692.cljs$lang$maxFixedArity = 2;
G__8692.cljs$lang$applyTo = (function (arglist__8697){
var coll = cljs.core.first(arglist__8697);
arglist__8697 = cljs.core.next(arglist__8697);
var k = cljs.core.first(arglist__8697);
var ks = cljs.core.rest(arglist__8697);
return G__8692__delegate(coll,k,ks);
});
G__8692.cljs$core$IFn$_invoke$arity$variadic = G__8692__delegate;
return G__8692;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__8698 = null;
if (arguments.length > 2) {
var G__8699__i = 0, G__8699__a = new Array(arguments.length -  2);
while (G__8699__i < G__8699__a.length) {G__8699__a[G__8699__i] = arguments[G__8699__i + 2]; ++G__8699__i;}
G__8698 = new cljs.core.IndexedSeq(G__8699__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8701 = x;
if(G__8701){
var bit__4648__auto__ = (G__8701.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4648__auto__) || (G__8701.cljs$core$ICollection$)){
return true;
} else {
if((!G__8701.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8701);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8701);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8703 = x;
if(G__8703){
var bit__4648__auto__ = (G__8703.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4648__auto__) || (G__8703.cljs$core$ISet$)){
return true;
} else {
if((!G__8703.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8703);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8703);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__8705 = x;
if(G__8705){
var bit__4648__auto__ = (G__8705.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4648__auto__) || (G__8705.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8705.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8705);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8705);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__8707 = x;
if(G__8707){
var bit__4648__auto__ = (G__8707.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4648__auto__) || (G__8707.cljs$core$ISequential$)){
return true;
} else {
if((!G__8707.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8707);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8707);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__8709 = x;
if(G__8709){
var bit__4648__auto__ = (G__8709.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4648__auto__) || (G__8709.cljs$core$ISorted$)){
return true;
} else {
if((!G__8709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8709);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__8711 = x;
if(G__8711){
var bit__4648__auto__ = (G__8711.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4648__auto__) || (G__8711.cljs$core$IReduce$)){
return true;
} else {
if((!G__8711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8711);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8713 = x;
if(G__8713){
var bit__4648__auto__ = (G__8713.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4648__auto__) || (G__8713.cljs$core$IMap$)){
return true;
} else {
if((!G__8713.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8713);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8713);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__8715 = x;
if(G__8715){
var bit__4648__auto__ = (G__8715.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4648__auto__) || (G__8715.cljs$core$IVector$)){
return true;
} else {
if((!G__8715.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8715);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8715);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__8717 = x;
if(G__8717){
var bit__4641__auto__ = (G__8717.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4641__auto__) || (G__8717.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj8723 = {};
return obj8723;
});
var js_obj__1 = (function() { 
var G__8726__delegate = function (keyvals){
var G__8724 = goog.object.create;
var G__8725 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8724,G__8725) : cljs.core.apply.call(null,G__8724,G__8725));
};
var G__8726 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8727__i = 0, G__8727__a = new Array(arguments.length -  0);
while (G__8727__i < G__8727__a.length) {G__8727__a[G__8727__i] = arguments[G__8727__i + 0]; ++G__8727__i;}
  keyvals = new cljs.core.IndexedSeq(G__8727__a,0);
} 
return G__8726__delegate.call(this,keyvals);};
G__8726.cljs$lang$maxFixedArity = 0;
G__8726.cljs$lang$applyTo = (function (arglist__8728){
var keyvals = cljs.core.seq(arglist__8728);
return G__8726__delegate(keyvals);
});
G__8726.cljs$core$IFn$_invoke$arity$variadic = G__8726__delegate;
return G__8726;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__8729 = null;
if (arguments.length > 0) {
var G__8730__i = 0, G__8730__a = new Array(arguments.length -  0);
while (G__8730__i < G__8730__a.length) {G__8730__a[G__8730__i] = arguments[G__8730__i + 0]; ++G__8730__i;}
G__8729 = new cljs.core.IndexedSeq(G__8730__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__8733_8735 = obj;
var G__8734_8736 = ((function (G__8733_8735,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8733_8735,keys))
;
goog.object.forEach(G__8733_8735,G__8734_8736);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8737 = (i__$1 + (1));
var G__8738 = (j__$1 + (1));
var G__8739 = (len__$1 - (1));
i__$1 = G__8737;
j__$1 = G__8738;
len__$1 = G__8739;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8740 = (i__$1 - (1));
var G__8741 = (j__$1 - (1));
var G__8742 = (len__$1 - (1));
i__$1 = G__8740;
j__$1 = G__8741;
len__$1 = G__8742;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8744 = {};
return obj8744;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8746 = s;
if(G__8746){
var bit__4648__auto__ = (G__8746.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4648__auto__) || (G__8746.cljs$core$ISeq$)){
return true;
} else {
if((!G__8746.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8746);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__8748 = s;
if(G__8748){
var bit__4648__auto__ = (G__8748.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4648__auto__) || (G__8748.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8748.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8748);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3967__auto__ = cljs.core.fn_QMARK_(f);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var G__8752 = f;
if(G__8752){
var bit__4648__auto__ = (G__8752.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4648__auto__) || (G__8752.cljs$core$IFn$)){
return true;
} else {
if((!G__8752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8752);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8765 = n;
return isNaN(G__8765);
})())) && (!((n === Infinity))) && (((function (){var G__8766 = n;
return parseFloat(G__8766);
})() === (function (){var G__8767 = n;
var G__8768 = (10);
return parseInt(G__8767,G__8768);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__8769__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8770 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8771 = etc;
s = G__8770;
xs = G__8771;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8769 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8772__i = 0, G__8772__a = new Array(arguments.length -  2);
while (G__8772__i < G__8772__a.length) {G__8772__a[G__8772__i] = arguments[G__8772__i + 2]; ++G__8772__i;}
  more = new cljs.core.IndexedSeq(G__8772__a,0);
} 
return G__8769__delegate.call(this,x,y,more);};
G__8769.cljs$lang$maxFixedArity = 2;
G__8769.cljs$lang$applyTo = (function (arglist__8773){
var x = cljs.core.first(arglist__8773);
arglist__8773 = cljs.core.next(arglist__8773);
var y = cljs.core.first(arglist__8773);
var more = cljs.core.rest(arglist__8773);
return G__8769__delegate(x,y,more);
});
G__8769.cljs$core$IFn$_invoke$arity$variadic = G__8769__delegate;
return G__8769;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8774 = null;
if (arguments.length > 2) {
var G__8775__i = 0, G__8775__a = new Array(arguments.length -  2);
while (G__8775__i < G__8775__a.length) {G__8775__a[G__8775__i] = arguments[G__8775__i + 2]; ++G__8775__i;}
G__8774 = new cljs.core.IndexedSeq(G__8775__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8779 = x;
if(G__8779){
var bit__4641__auto__ = (G__8779.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4641__auto__) || (G__8779.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8780 = x;
var G__8781 = y;
return goog.array.defaultCompare(G__8780,G__8781);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8786 = xs;
var G__8787 = ys;
var G__8788 = len;
var G__8789 = (n + (1));
xs = G__8786;
ys = G__8787;
len = G__8788;
n = G__8789;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8794 = x;
var G__8795 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8794,G__8795) : f.call(null,G__8794,G__8795));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8796 = y;
var G__8797 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8796,G__8797) : f.call(null,G__8796,G__8797));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8803 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8803) : cljs.core.to_array.call(null,G__8803));
})();
var G__8804_8806 = a;
var G__8805_8807 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8804_8806,G__8805_8807);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8813 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8813) : keyfn.call(null,G__8813));
})(),(function (){var G__8814 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8814) : keyfn.call(null,G__8814));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var G__8820 = f;
var G__8821 = cljs.core.first(s);
var G__8822 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8820,G__8821,G__8822) : cljs.core.reduce.call(null,G__8820,G__8821,G__8822));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8823 = val__$1;
var G__8824 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8823,G__8824) : f.call(null,G__8823,G__8824));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8825 = nval;
var G__8826 = cljs.core.next(coll__$1);
val__$1 = G__8825;
coll__$1 = G__8826;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8830 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8830) : cljs.core.to_array.call(null,G__8830));
})();
var G__8831_8833 = a;
goog.array.shuffle(G__8831_8833);

var G__8832 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8832) : cljs.core.vec.call(null,G__8832));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8836 = coll;
if(G__8836){
var bit__4641__auto__ = (G__8836.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4641__auto__) || (G__8836.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8837 = coll;
if(G__8837){
var bit__4641__auto__ = (G__8837.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4641__auto__) || (G__8837.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8846 = null;
var G__8846__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8846__1 = (function (x){
var G__8843 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8843) : cf.call(null,G__8843));
});
var G__8846__2 = (function (x,y){
var G__8844 = x;
var G__8845 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8844,G__8845) : f.call(null,G__8844,G__8845));
});
G__8846 = function(x,y){
switch(arguments.length){
case 0:
return G__8846__0.call(this);
case 1:
return G__8846__1.call(this,x);
case 2:
return G__8846__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8846.cljs$core$IFn$_invoke$arity$0 = G__8846__0;
G__8846.cljs$core$IFn$_invoke$arity$1 = G__8846__1;
G__8846.cljs$core$IFn$_invoke$arity$2 = G__8846__2;
return G__8846;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8853 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8853) : xform.call(null,G__8853));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8854 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8854) : f__$1.call(null,G__8854));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8855__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8855 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8856__i = 0, G__8856__a = new Array(arguments.length -  2);
while (G__8856__i < G__8856__a.length) {G__8856__a[G__8856__i] = arguments[G__8856__i + 2]; ++G__8856__i;}
  more = new cljs.core.IndexedSeq(G__8856__a,0);
} 
return G__8855__delegate.call(this,x,y,more);};
G__8855.cljs$lang$maxFixedArity = 2;
G__8855.cljs$lang$applyTo = (function (arglist__8857){
var x = cljs.core.first(arglist__8857);
arglist__8857 = cljs.core.next(arglist__8857);
var y = cljs.core.first(arglist__8857);
var more = cljs.core.rest(arglist__8857);
return G__8855__delegate(x,y,more);
});
G__8855.cljs$core$IFn$_invoke$arity$variadic = G__8855__delegate;
return G__8855;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8858 = null;
if (arguments.length > 2) {
var G__8859__i = 0, G__8859__a = new Array(arguments.length -  2);
while (G__8859__i < G__8859__a.length) {G__8859__a[G__8859__i] = arguments[G__8859__i + 2]; ++G__8859__i;}
G__8858 = new cljs.core.IndexedSeq(G__8859__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8860__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8860 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8861__i = 0, G__8861__a = new Array(arguments.length -  2);
while (G__8861__i < G__8861__a.length) {G__8861__a[G__8861__i] = arguments[G__8861__i + 2]; ++G__8861__i;}
  more = new cljs.core.IndexedSeq(G__8861__a,0);
} 
return G__8860__delegate.call(this,x,y,more);};
G__8860.cljs$lang$maxFixedArity = 2;
G__8860.cljs$lang$applyTo = (function (arglist__8862){
var x = cljs.core.first(arglist__8862);
arglist__8862 = cljs.core.next(arglist__8862);
var y = cljs.core.first(arglist__8862);
var more = cljs.core.rest(arglist__8862);
return G__8860__delegate(x,y,more);
});
G__8860.cljs$core$IFn$_invoke$arity$variadic = G__8860__delegate;
return G__8860;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8863 = null;
if (arguments.length > 2) {
var G__8864__i = 0, G__8864__a = new Array(arguments.length -  2);
while (G__8864__i < G__8864__a.length) {G__8864__a[G__8864__i] = arguments[G__8864__i + 2]; ++G__8864__i;}
G__8863 = new cljs.core.IndexedSeq(G__8864__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8865__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8865 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8866__i = 0, G__8866__a = new Array(arguments.length -  2);
while (G__8866__i < G__8866__a.length) {G__8866__a[G__8866__i] = arguments[G__8866__i + 2]; ++G__8866__i;}
  more = new cljs.core.IndexedSeq(G__8866__a,0);
} 
return G__8865__delegate.call(this,x,y,more);};
G__8865.cljs$lang$maxFixedArity = 2;
G__8865.cljs$lang$applyTo = (function (arglist__8867){
var x = cljs.core.first(arglist__8867);
arglist__8867 = cljs.core.next(arglist__8867);
var y = cljs.core.first(arglist__8867);
var more = cljs.core.rest(arglist__8867);
return G__8865__delegate(x,y,more);
});
G__8865.cljs$core$IFn$_invoke$arity$variadic = G__8865__delegate;
return G__8865;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8868 = null;
if (arguments.length > 2) {
var G__8869__i = 0, G__8869__a = new Array(arguments.length -  2);
while (G__8869__i < G__8869__a.length) {G__8869__a[G__8869__i] = arguments[G__8869__i + 2]; ++G__8869__i;}
G__8868 = new cljs.core.IndexedSeq(G__8869__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8874__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8874 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8875__i = 0, G__8875__a = new Array(arguments.length -  2);
while (G__8875__i < G__8875__a.length) {G__8875__a[G__8875__i] = arguments[G__8875__i + 2]; ++G__8875__i;}
  more = new cljs.core.IndexedSeq(G__8875__a,0);
} 
return G__8874__delegate.call(this,x,y,more);};
G__8874.cljs$lang$maxFixedArity = 2;
G__8874.cljs$lang$applyTo = (function (arglist__8876){
var x = cljs.core.first(arglist__8876);
arglist__8876 = cljs.core.next(arglist__8876);
var y = cljs.core.first(arglist__8876);
var more = cljs.core.rest(arglist__8876);
return G__8874__delegate(x,y,more);
});
G__8874.cljs$core$IFn$_invoke$arity$variadic = G__8874__delegate;
return G__8874;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8877 = null;
if (arguments.length > 2) {
var G__8878__i = 0, G__8878__a = new Array(arguments.length -  2);
while (G__8878__i < G__8878__a.length) {G__8878__a[G__8878__i] = arguments[G__8878__i + 2]; ++G__8878__i;}
G__8877 = new cljs.core.IndexedSeq(G__8878__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8879__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8880 = y;
var G__8881 = cljs.core.first(more);
var G__8882 = cljs.core.next(more);
x = G__8880;
y = G__8881;
more = G__8882;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8879 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8883__i = 0, G__8883__a = new Array(arguments.length -  2);
while (G__8883__i < G__8883__a.length) {G__8883__a[G__8883__i] = arguments[G__8883__i + 2]; ++G__8883__i;}
  more = new cljs.core.IndexedSeq(G__8883__a,0);
} 
return G__8879__delegate.call(this,x,y,more);};
G__8879.cljs$lang$maxFixedArity = 2;
G__8879.cljs$lang$applyTo = (function (arglist__8884){
var x = cljs.core.first(arglist__8884);
arglist__8884 = cljs.core.next(arglist__8884);
var y = cljs.core.first(arglist__8884);
var more = cljs.core.rest(arglist__8884);
return G__8879__delegate(x,y,more);
});
G__8879.cljs$core$IFn$_invoke$arity$variadic = G__8879__delegate;
return G__8879;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8885 = null;
if (arguments.length > 2) {
var G__8886__i = 0, G__8886__a = new Array(arguments.length -  2);
while (G__8886__i < G__8886__a.length) {G__8886__a[G__8886__i] = arguments[G__8886__i + 2]; ++G__8886__i;}
G__8885 = new cljs.core.IndexedSeq(G__8886__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8887__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8888 = y;
var G__8889 = cljs.core.first(more);
var G__8890 = cljs.core.next(more);
x = G__8888;
y = G__8889;
more = G__8890;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8887 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8891__i = 0, G__8891__a = new Array(arguments.length -  2);
while (G__8891__i < G__8891__a.length) {G__8891__a[G__8891__i] = arguments[G__8891__i + 2]; ++G__8891__i;}
  more = new cljs.core.IndexedSeq(G__8891__a,0);
} 
return G__8887__delegate.call(this,x,y,more);};
G__8887.cljs$lang$maxFixedArity = 2;
G__8887.cljs$lang$applyTo = (function (arglist__8892){
var x = cljs.core.first(arglist__8892);
arglist__8892 = cljs.core.next(arglist__8892);
var y = cljs.core.first(arglist__8892);
var more = cljs.core.rest(arglist__8892);
return G__8887__delegate(x,y,more);
});
G__8887.cljs$core$IFn$_invoke$arity$variadic = G__8887__delegate;
return G__8887;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__8893 = null;
if (arguments.length > 2) {
var G__8894__i = 0, G__8894__a = new Array(arguments.length -  2);
while (G__8894__i < G__8894__a.length) {G__8894__a[G__8894__i] = arguments[G__8894__i + 2]; ++G__8894__i;}
G__8893 = new cljs.core.IndexedSeq(G__8894__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__8895__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8896 = y;
var G__8897 = cljs.core.first(more);
var G__8898 = cljs.core.next(more);
x = G__8896;
y = G__8897;
more = G__8898;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8895 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8899__i = 0, G__8899__a = new Array(arguments.length -  2);
while (G__8899__i < G__8899__a.length) {G__8899__a[G__8899__i] = arguments[G__8899__i + 2]; ++G__8899__i;}
  more = new cljs.core.IndexedSeq(G__8899__a,0);
} 
return G__8895__delegate.call(this,x,y,more);};
G__8895.cljs$lang$maxFixedArity = 2;
G__8895.cljs$lang$applyTo = (function (arglist__8900){
var x = cljs.core.first(arglist__8900);
arglist__8900 = cljs.core.next(arglist__8900);
var y = cljs.core.first(arglist__8900);
var more = cljs.core.rest(arglist__8900);
return G__8895__delegate(x,y,more);
});
G__8895.cljs$core$IFn$_invoke$arity$variadic = G__8895__delegate;
return G__8895;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__8901 = null;
if (arguments.length > 2) {
var G__8902__i = 0, G__8902__a = new Array(arguments.length -  2);
while (G__8902__i < G__8902__a.length) {G__8902__a[G__8902__i] = arguments[G__8902__i + 2]; ++G__8902__i;}
G__8901 = new cljs.core.IndexedSeq(G__8902__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__8903__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8904 = y;
var G__8905 = cljs.core.first(more);
var G__8906 = cljs.core.next(more);
x = G__8904;
y = G__8905;
more = G__8906;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8903 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8907__i = 0, G__8907__a = new Array(arguments.length -  2);
while (G__8907__i < G__8907__a.length) {G__8907__a[G__8907__i] = arguments[G__8907__i + 2]; ++G__8907__i;}
  more = new cljs.core.IndexedSeq(G__8907__a,0);
} 
return G__8903__delegate.call(this,x,y,more);};
G__8903.cljs$lang$maxFixedArity = 2;
G__8903.cljs$lang$applyTo = (function (arglist__8908){
var x = cljs.core.first(arglist__8908);
arglist__8908 = cljs.core.next(arglist__8908);
var y = cljs.core.first(arglist__8908);
var more = cljs.core.rest(arglist__8908);
return G__8903__delegate(x,y,more);
});
G__8903.cljs$core$IFn$_invoke$arity$variadic = G__8903__delegate;
return G__8903;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__8909 = null;
if (arguments.length > 2) {
var G__8910__i = 0, G__8910__a = new Array(arguments.length -  2);
while (G__8910__i < G__8910__a.length) {G__8910__a[G__8910__i] = arguments[G__8910__i + 2]; ++G__8910__i;}
G__8909 = new cljs.core.IndexedSeq(G__8910__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4284__auto__ = x;
var y__4285__auto__ = y;
return ((x__4284__auto__ > y__4285__auto__) ? x__4284__auto__ : y__4285__auto__);
});
var max__3 = (function() { 
var G__8911__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4284__auto__ = x;
var y__4285__auto__ = y;
return ((x__4284__auto__ > y__4285__auto__) ? x__4284__auto__ : y__4285__auto__);
})(),more);
};
var G__8911 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8912__i = 0, G__8912__a = new Array(arguments.length -  2);
while (G__8912__i < G__8912__a.length) {G__8912__a[G__8912__i] = arguments[G__8912__i + 2]; ++G__8912__i;}
  more = new cljs.core.IndexedSeq(G__8912__a,0);
} 
return G__8911__delegate.call(this,x,y,more);};
G__8911.cljs$lang$maxFixedArity = 2;
G__8911.cljs$lang$applyTo = (function (arglist__8913){
var x = cljs.core.first(arglist__8913);
arglist__8913 = cljs.core.next(arglist__8913);
var y = cljs.core.first(arglist__8913);
var more = cljs.core.rest(arglist__8913);
return G__8911__delegate(x,y,more);
});
G__8911.cljs$core$IFn$_invoke$arity$variadic = G__8911__delegate;
return G__8911;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__8914 = null;
if (arguments.length > 2) {
var G__8915__i = 0, G__8915__a = new Array(arguments.length -  2);
while (G__8915__i < G__8915__a.length) {G__8915__a[G__8915__i] = arguments[G__8915__i + 2]; ++G__8915__i;}
G__8914 = new cljs.core.IndexedSeq(G__8915__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4291__auto__ = x;
var y__4292__auto__ = y;
return ((x__4291__auto__ < y__4292__auto__) ? x__4291__auto__ : y__4292__auto__);
});
var min__3 = (function() { 
var G__8916__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4291__auto__ = x;
var y__4292__auto__ = y;
return ((x__4291__auto__ < y__4292__auto__) ? x__4291__auto__ : y__4292__auto__);
})(),more);
};
var G__8916 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8917__i = 0, G__8917__a = new Array(arguments.length -  2);
while (G__8917__i < G__8917__a.length) {G__8917__a[G__8917__i] = arguments[G__8917__i + 2]; ++G__8917__i;}
  more = new cljs.core.IndexedSeq(G__8917__a,0);
} 
return G__8916__delegate.call(this,x,y,more);};
G__8916.cljs$lang$maxFixedArity = 2;
G__8916.cljs$lang$applyTo = (function (arglist__8918){
var x = cljs.core.first(arglist__8918);
arglist__8918 = cljs.core.next(arglist__8918);
var y = cljs.core.first(arglist__8918);
var more = cljs.core.rest(arglist__8918);
return G__8916__delegate(x,y,more);
});
G__8916.cljs$core$IFn$_invoke$arity$variadic = G__8916__delegate;
return G__8916;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__8919 = null;
if (arguments.length > 2) {
var G__8920__i = 0, G__8920__a = new Array(arguments.length -  2);
while (G__8920__i < G__8920__a.length) {G__8920__a[G__8920__i] = arguments[G__8920__i + 2]; ++G__8920__i;}
G__8919 = new cljs.core.IndexedSeq(G__8920__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__8921__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__8921 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8922__i = 0, G__8922__a = new Array(arguments.length -  2);
while (G__8922__i < G__8922__a.length) {G__8922__a[G__8922__i] = arguments[G__8922__i + 2]; ++G__8922__i;}
  more = new cljs.core.IndexedSeq(G__8922__a,0);
} 
return G__8921__delegate.call(this,x,y,more);};
G__8921.cljs$lang$maxFixedArity = 2;
G__8921.cljs$lang$applyTo = (function (arglist__8923){
var x = cljs.core.first(arglist__8923);
arglist__8923 = cljs.core.next(arglist__8923);
var y = cljs.core.first(arglist__8923);
var more = cljs.core.rest(arglist__8923);
return G__8921__delegate(x,y,more);
});
G__8921.cljs$core$IFn$_invoke$arity$variadic = G__8921__delegate;
return G__8921;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__8924 = null;
if (arguments.length > 2) {
var G__8925__i = 0, G__8925__a = new Array(arguments.length -  2);
while (G__8925__i < G__8925__a.length) {G__8925__a[G__8925__i] = arguments[G__8925__i + 2]; ++G__8925__i;}
G__8924 = new cljs.core.IndexedSeq(G__8925__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__8926__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__8926 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8927__i = 0, G__8927__a = new Array(arguments.length -  2);
while (G__8927__i < G__8927__a.length) {G__8927__a[G__8927__i] = arguments[G__8927__i + 2]; ++G__8927__i;}
  more = new cljs.core.IndexedSeq(G__8927__a,0);
} 
return G__8926__delegate.call(this,x,y,more);};
G__8926.cljs$lang$maxFixedArity = 2;
G__8926.cljs$lang$applyTo = (function (arglist__8928){
var x = cljs.core.first(arglist__8928);
arglist__8928 = cljs.core.next(arglist__8928);
var y = cljs.core.first(arglist__8928);
var more = cljs.core.rest(arglist__8928);
return G__8926__delegate(x,y,more);
});
G__8926.cljs$core$IFn$_invoke$arity$variadic = G__8926__delegate;
return G__8926;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__8929 = null;
if (arguments.length > 2) {
var G__8930__i = 0, G__8930__a = new Array(arguments.length -  2);
while (G__8930__i < G__8930__a.length) {G__8930__a[G__8930__i] = arguments[G__8930__i + 2]; ++G__8930__i;}
G__8929 = new cljs.core.IndexedSeq(G__8930__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__8935__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8935 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8936__i = 0, G__8936__a = new Array(arguments.length -  2);
while (G__8936__i < G__8936__a.length) {G__8936__a[G__8936__i] = arguments[G__8936__i + 2]; ++G__8936__i;}
  more = new cljs.core.IndexedSeq(G__8936__a,0);
} 
return G__8935__delegate.call(this,x,y,more);};
G__8935.cljs$lang$maxFixedArity = 2;
G__8935.cljs$lang$applyTo = (function (arglist__8937){
var x = cljs.core.first(arglist__8937);
arglist__8937 = cljs.core.next(arglist__8937);
var y = cljs.core.first(arglist__8937);
var more = cljs.core.rest(arglist__8937);
return G__8935__delegate(x,y,more);
});
G__8935.cljs$core$IFn$_invoke$arity$variadic = G__8935__delegate;
return G__8935;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__8938 = null;
if (arguments.length > 2) {
var G__8939__i = 0, G__8939__a = new Array(arguments.length -  2);
while (G__8939__i < G__8939__a.length) {G__8939__a[G__8939__i] = arguments[G__8939__i + 2]; ++G__8939__i;}
G__8938 = new cljs.core.IndexedSeq(G__8939__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__8940__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__8940 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8941__i = 0, G__8941__a = new Array(arguments.length -  2);
while (G__8941__i < G__8941__a.length) {G__8941__a[G__8941__i] = arguments[G__8941__i + 2]; ++G__8941__i;}
  more = new cljs.core.IndexedSeq(G__8941__a,0);
} 
return G__8940__delegate.call(this,x,y,more);};
G__8940.cljs$lang$maxFixedArity = 2;
G__8940.cljs$lang$applyTo = (function (arglist__8942){
var x = cljs.core.first(arglist__8942);
arglist__8942 = cljs.core.next(arglist__8942);
var y = cljs.core.first(arglist__8942);
var more = cljs.core.rest(arglist__8942);
return G__8940__delegate(x,y,more);
});
G__8940.cljs$core$IFn$_invoke$arity$variadic = G__8940__delegate;
return G__8940;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__8943 = null;
if (arguments.length > 2) {
var G__8944__i = 0, G__8944__a = new Array(arguments.length -  2);
while (G__8944__i < G__8944__a.length) {G__8944__a[G__8944__i] = arguments[G__8944__i + 2]; ++G__8944__i;}
G__8943 = new cljs.core.IndexedSeq(G__8944__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__8945__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__8945 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8946__i = 0, G__8946__a = new Array(arguments.length -  2);
while (G__8946__i < G__8946__a.length) {G__8946__a[G__8946__i] = arguments[G__8946__i + 2]; ++G__8946__i;}
  more = new cljs.core.IndexedSeq(G__8946__a,0);
} 
return G__8945__delegate.call(this,x,y,more);};
G__8945.cljs$lang$maxFixedArity = 2;
G__8945.cljs$lang$applyTo = (function (arglist__8947){
var x = cljs.core.first(arglist__8947);
arglist__8947 = cljs.core.next(arglist__8947);
var y = cljs.core.first(arglist__8947);
var more = cljs.core.rest(arglist__8947);
return G__8945__delegate(x,y,more);
});
G__8945.cljs$core$IFn$_invoke$arity$variadic = G__8945__delegate;
return G__8945;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__8948 = null;
if (arguments.length > 2) {
var G__8949__i = 0, G__8949__a = new Array(arguments.length -  2);
while (G__8949__i < G__8949__a.length) {G__8949__a[G__8949__i] = arguments[G__8949__i + 2]; ++G__8949__i;}
G__8948 = new cljs.core.IndexedSeq(G__8949__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__8952 = x;
var G__8953 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8952,G__8953) : cljs.core.mod.call(null,G__8952,G__8953));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__8954__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__8954 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8955__i = 0, G__8955__a = new Array(arguments.length -  2);
while (G__8955__i < G__8955__a.length) {G__8955__a[G__8955__i] = arguments[G__8955__i + 2]; ++G__8955__i;}
  more = new cljs.core.IndexedSeq(G__8955__a,0);
} 
return G__8954__delegate.call(this,x,y,more);};
G__8954.cljs$lang$maxFixedArity = 2;
G__8954.cljs$lang$applyTo = (function (arglist__8956){
var x = cljs.core.first(arglist__8956);
arglist__8956 = cljs.core.next(arglist__8956);
var y = cljs.core.first(arglist__8956);
var more = cljs.core.rest(arglist__8956);
return G__8954__delegate(x,y,more);
});
G__8954.cljs$core$IFn$_invoke$arity$variadic = G__8954__delegate;
return G__8954;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__8957 = null;
if (arguments.length > 2) {
var G__8958__i = 0, G__8958__a = new Array(arguments.length -  2);
while (G__8958__i < G__8958__a.length) {G__8958__a[G__8958__i] = arguments[G__8958__i + 2]; ++G__8958__i;}
G__8957 = new cljs.core.IndexedSeq(G__8958__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8957);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__8959__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__8959 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8960__i = 0, G__8960__a = new Array(arguments.length -  2);
while (G__8960__i < G__8960__a.length) {G__8960__a[G__8960__i] = arguments[G__8960__i + 2]; ++G__8960__i;}
  more = new cljs.core.IndexedSeq(G__8960__a,0);
} 
return G__8959__delegate.call(this,x,y,more);};
G__8959.cljs$lang$maxFixedArity = 2;
G__8959.cljs$lang$applyTo = (function (arglist__8961){
var x = cljs.core.first(arglist__8961);
arglist__8961 = cljs.core.next(arglist__8961);
var y = cljs.core.first(arglist__8961);
var more = cljs.core.rest(arglist__8961);
return G__8959__delegate(x,y,more);
});
G__8959.cljs$core$IFn$_invoke$arity$variadic = G__8959__delegate;
return G__8959;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__8962 = null;
if (arguments.length > 2) {
var G__8963__i = 0, G__8963__a = new Array(arguments.length -  2);
while (G__8963__i < G__8963__a.length) {G__8963__a[G__8963__i] = arguments[G__8963__i + 2]; ++G__8963__i;}
G__8962 = new cljs.core.IndexedSeq(G__8963__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8962);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__8966 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8966) : Math.floor.call(null,G__8966));
} else {
var G__8967 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8967) : Math.ceil.call(null,G__8967));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__8968__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__8968 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8969__i = 0, G__8969__a = new Array(arguments.length -  2);
while (G__8969__i < G__8969__a.length) {G__8969__a[G__8969__i] = arguments[G__8969__i + 2]; ++G__8969__i;}
  more = new cljs.core.IndexedSeq(G__8969__a,0);
} 
return G__8968__delegate.call(this,x,y,more);};
G__8968.cljs$lang$maxFixedArity = 2;
G__8968.cljs$lang$applyTo = (function (arglist__8970){
var x = cljs.core.first(arglist__8970);
arglist__8970 = cljs.core.next(arglist__8970);
var y = cljs.core.first(arglist__8970);
var more = cljs.core.rest(arglist__8970);
return G__8968__delegate(x,y,more);
});
G__8968.cljs$core$IFn$_invoke$arity$variadic = G__8968__delegate;
return G__8968;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__8971 = null;
if (arguments.length > 2) {
var G__8972__i = 0, G__8972__a = new Array(arguments.length -  2);
while (G__8972__i < G__8972__a.length) {G__8972__a[G__8972__i] = arguments[G__8972__i + 2]; ++G__8972__i;}
G__8971 = new cljs.core.IndexedSeq(G__8972__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__8973__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__8973 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8974__i = 0, G__8974__a = new Array(arguments.length -  2);
while (G__8974__i < G__8974__a.length) {G__8974__a[G__8974__i] = arguments[G__8974__i + 2]; ++G__8974__i;}
  more = new cljs.core.IndexedSeq(G__8974__a,0);
} 
return G__8973__delegate.call(this,x,y,more);};
G__8973.cljs$lang$maxFixedArity = 2;
G__8973.cljs$lang$applyTo = (function (arglist__8975){
var x = cljs.core.first(arglist__8975);
arglist__8975 = cljs.core.next(arglist__8975);
var y = cljs.core.first(arglist__8975);
var more = cljs.core.rest(arglist__8975);
return G__8973__delegate(x,y,more);
});
G__8973.cljs$core$IFn$_invoke$arity$variadic = G__8973__delegate;
return G__8973;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__8976 = null;
if (arguments.length > 2) {
var G__8977__i = 0, G__8977__a = new Array(arguments.length -  2);
while (G__8977__i < G__8977__a.length) {G__8977__a[G__8977__i] = arguments[G__8977__i + 2]; ++G__8977__i;}
G__8976 = new cljs.core.IndexedSeq(G__8977__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8976);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__8978__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__8978 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8979__i = 0, G__8979__a = new Array(arguments.length -  2);
while (G__8979__i < G__8979__a.length) {G__8979__a[G__8979__i] = arguments[G__8979__i + 2]; ++G__8979__i;}
  more = new cljs.core.IndexedSeq(G__8979__a,0);
} 
return G__8978__delegate.call(this,x,y,more);};
G__8978.cljs$lang$maxFixedArity = 2;
G__8978.cljs$lang$applyTo = (function (arglist__8980){
var x = cljs.core.first(arglist__8980);
arglist__8980 = cljs.core.next(arglist__8980);
var y = cljs.core.first(arglist__8980);
var more = cljs.core.rest(arglist__8980);
return G__8978__delegate(x,y,more);
});
G__8978.cljs$core$IFn$_invoke$arity$variadic = G__8978__delegate;
return G__8978;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__8981 = null;
if (arguments.length > 2) {
var G__8982__i = 0, G__8982__a = new Array(arguments.length -  2);
while (G__8982__i < G__8982__a.length) {G__8982__a[G__8982__i] = arguments[G__8982__i + 2]; ++G__8982__i;}
G__8981 = new cljs.core.IndexedSeq(G__8982__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__8983__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__8983 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8984__i = 0, G__8984__a = new Array(arguments.length -  2);
while (G__8984__i < G__8984__a.length) {G__8984__a[G__8984__i] = arguments[G__8984__i + 2]; ++G__8984__i;}
  more = new cljs.core.IndexedSeq(G__8984__a,0);
} 
return G__8983__delegate.call(this,x,y,more);};
G__8983.cljs$lang$maxFixedArity = 2;
G__8983.cljs$lang$applyTo = (function (arglist__8985){
var x = cljs.core.first(arglist__8985);
arglist__8985 = cljs.core.next(arglist__8985);
var y = cljs.core.first(arglist__8985);
var more = cljs.core.rest(arglist__8985);
return G__8983__delegate(x,y,more);
});
G__8983.cljs$core$IFn$_invoke$arity$variadic = G__8983__delegate;
return G__8983;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__8986 = null;
if (arguments.length > 2) {
var G__8987__i = 0, G__8987__a = new Array(arguments.length -  2);
while (G__8987__i < G__8987__a.length) {G__8987__a[G__8987__i] = arguments[G__8987__i + 2]; ++G__8987__i;}
G__8986 = new cljs.core.IndexedSeq(G__8987__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__8992__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8993 = y;
var G__8994 = cljs.core.first(more);
var G__8995 = cljs.core.next(more);
x = G__8993;
y = G__8994;
more = G__8995;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8992 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8996__i = 0, G__8996__a = new Array(arguments.length -  2);
while (G__8996__i < G__8996__a.length) {G__8996__a[G__8996__i] = arguments[G__8996__i + 2]; ++G__8996__i;}
  more = new cljs.core.IndexedSeq(G__8996__a,0);
} 
return G__8992__delegate.call(this,x,y,more);};
G__8992.cljs$lang$maxFixedArity = 2;
G__8992.cljs$lang$applyTo = (function (arglist__8997){
var x = cljs.core.first(arglist__8997);
arglist__8997 = cljs.core.next(arglist__8997);
var y = cljs.core.first(arglist__8997);
var more = cljs.core.rest(arglist__8997);
return G__8992__delegate(x,y,more);
});
G__8992.cljs$core$IFn$_invoke$arity$variadic = G__8992__delegate;
return G__8992;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__8998 = null;
if (arguments.length > 2) {
var G__8999__i = 0, G__8999__a = new Array(arguments.length -  2);
while (G__8999__i < G__8999__a.length) {G__8999__a[G__8999__i] = arguments[G__8999__i + 2]; ++G__8999__i;}
G__8998 = new cljs.core.IndexedSeq(G__8999__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8998);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__9000 = (n__$1 - (1));
var G__9001 = cljs.core.next(xs);
n__$1 = G__9000;
xs = G__9001;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__9005 = x;
return goog.string.buildString(G__9005);
}
});
var str__2 = (function() { 
var G__9006__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__9007 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__9008 = cljs.core.next(more);
sb = G__9007;
more = G__9008;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__9006 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__9009__i = 0, G__9009__a = new Array(arguments.length -  1);
while (G__9009__i < G__9009__a.length) {G__9009__a[G__9009__i] = arguments[G__9009__i + 1]; ++G__9009__i;}
  ys = new cljs.core.IndexedSeq(G__9009__a,0);
} 
return G__9006__delegate.call(this,x,ys);};
G__9006.cljs$lang$maxFixedArity = 1;
G__9006.cljs$lang$applyTo = (function (arglist__9010){
var x = cljs.core.first(arglist__9010);
var ys = cljs.core.rest(arglist__9010);
return G__9006__delegate(x,ys);
});
G__9006.cljs$core$IFn$_invoke$arity$variadic = G__9006__delegate;
return G__9006;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__9011 = null;
if (arguments.length > 1) {
var G__9012__i = 0, G__9012__a = new Array(arguments.length -  1);
while (G__9012__i < G__9012__a.length) {G__9012__a[G__9012__i] = arguments[G__9012__i + 1]; ++G__9012__i;}
G__9011 = new cljs.core.IndexedSeq(G__9012__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__9013 = cljs.core.next(xs);
var G__9014 = cljs.core.next(ys);
xs = G__9013;
ys = G__9014;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__9015 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__9016 = cljs.core.next(s);
res = G__9015;
s = G__9016;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__9021 = ((h + (cljs.core.hash((function (){var G__9019 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9019) : cljs.core.key.call(null,G__9019));
})()) ^ cljs.core.hash((function (){var G__9020 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9020) : cljs.core.val.call(null,G__9020));
})()))) % (4503599627370496));
var G__9022 = cljs.core.next(s);
h = G__9021;
s = G__9022;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__9023 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__9024 = cljs.core.next(s__$1);
h = G__9023;
s__$1 = G__9024;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__9035_9045 = cljs.core.seq(fn_map);
var chunk__9036_9046 = null;
var count__9037_9047 = (0);
var i__9038_9048 = (0);
while(true){
if((i__9038_9048 < count__9037_9047)){
var vec__9039_9049 = chunk__9036_9046.cljs$core$IIndexed$_nth$arity$2(null,i__9038_9048);
var key_name_9050 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9039_9049,(0),null);
var f_9051 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9039_9049,(1),null);
var str_name_9052 = (function (){var G__9040 = key_name_9050;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9040) : cljs.core.name.call(null,G__9040));
})();
(obj[str_name_9052] = f_9051);

var G__9053 = seq__9035_9045;
var G__9054 = chunk__9036_9046;
var G__9055 = count__9037_9047;
var G__9056 = (i__9038_9048 + (1));
seq__9035_9045 = G__9053;
chunk__9036_9046 = G__9054;
count__9037_9047 = G__9055;
i__9038_9048 = G__9056;
continue;
} else {
var temp__4425__auto___9057 = cljs.core.seq(seq__9035_9045);
if(temp__4425__auto___9057){
var seq__9035_9058__$1 = temp__4425__auto___9057;
if(cljs.core.chunked_seq_QMARK_(seq__9035_9058__$1)){
var c__4754__auto___9059 = (function (){var G__9041 = seq__9035_9058__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__9041) : cljs.core.chunk_first.call(null,G__9041));
})();
var G__9060 = (function (){var G__9042 = seq__9035_9058__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__9042) : cljs.core.chunk_rest.call(null,G__9042));
})();
var G__9061 = c__4754__auto___9059;
var G__9062 = cljs.core.count(c__4754__auto___9059);
var G__9063 = (0);
seq__9035_9045 = G__9060;
chunk__9036_9046 = G__9061;
count__9037_9047 = G__9062;
i__9038_9048 = G__9063;
continue;
} else {
var vec__9043_9064 = cljs.core.first(seq__9035_9058__$1);
var key_name_9065 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9043_9064,(0),null);
var f_9066 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9043_9064,(1),null);
var str_name_9067 = (function (){var G__9044 = key_name_9065;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9044) : cljs.core.name.call(null,G__9044));
})();
(obj[str_name_9067] = f_9066);

var G__9068 = cljs.core.next(seq__9035_9058__$1);
var G__9069 = null;
var G__9070 = (0);
var G__9071 = (0);
seq__9035_9045 = G__9068;
chunk__9036_9046 = G__9069;
count__9037_9047 = G__9070;
i__9038_9048 = G__9071;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__9073 = coll;
if(G__9073){
var bit__4648__auto__ = (G__9073.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4648__auto__) || (G__9073.cljs$core$IReversible$)){
return true;
} else {
if((!G__9073.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9073);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9073);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__9074 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__9074;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__9075 = (i - (1));
var G__9076 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__9075;
r = G__9076;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__9077__i = 0, G__9077__a = new Array(arguments.length -  0);
while (G__9077__i < G__9077__a.length) {G__9077__a[G__9077__i] = arguments[G__9077__i + 0]; ++G__9077__i;}
  xs = new cljs.core.IndexedSeq(G__9077__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__9078){
var xs = cljs.core.seq(arglist__9078);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3967__auto__ = (coll == null);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var G__9082 = coll;
if(G__9082){
var bit__4641__auto__ = (G__9082.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4641__auto__) || (G__9082.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__9084 = x;
if(G__9084){
var bit__4648__auto__ = (G__9084.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4648__auto__) || (G__9084.cljs$core$IList$)){
return true;
} else {
if((!G__9084.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9084);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3955__auto__ = cljs.core.not(a.ns);
if(and__3955__auto__){
return b.ns;
} else {
return and__3955__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__9091 = a.ns;
var G__9092 = b.ns;
return goog.array.defaultCompare(G__9091,G__9092);
})();
if(((0) === nsc)){
var G__9093 = a.name;
var G__9094 = b.name;
return goog.array.defaultCompare(G__9093,G__9094);
} else {
return nsc;
}
}
} else {
var G__9095 = a.name;
var G__9096 = b.name;
return goog.array.defaultCompare(G__9095,G__9096);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__9098 = null;
var G__9098__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__9098__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__9098 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__9098__2.call(this,self__,coll);
case 3:
return G__9098__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9098.cljs$core$IFn$_invoke$arity$2 = G__9098__2;
G__9098.cljs$core$IFn$_invoke$arity$3 = G__9098__3;
return G__9098;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args9097){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9097)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4388__auto__ = self__._hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function namespace(x){
if((function (){var G__9100 = x;
if(G__9100){
var bit__4641__auto__ = (G__9100.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4641__auto__) || (G__9100.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__9102 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9102) : cljs.core.name.call(null,G__9102));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__9103 = ls.sval();
ls = G__9103;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__9105 = s;
if(G__9105){
var bit__4641__auto__ = (G__9105.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4641__auto__) || (G__9105.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__9106 = cljs.core.next(s__$1);
s__$1 = G__9106;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_9107 = (0);
var xs_9108 = cljs.core.seq(coll);
while(true){
if(xs_9108){
(ret[i_9107] = cljs.core.to_array(cljs.core.first(xs_9108)));

var G__9109 = (i_9107 + (1));
var G__9110 = cljs.core.next(xs_9108);
i_9107 = G__9109;
xs_9108 = G__9110;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9113 = (i + (1));
var G__9114 = cljs.core.next(s__$1);
i = G__9113;
s__$1 = G__9114;
continue;
} else {
return a;
}
break;
}
} else {
var n__4854__auto___9115 = size;
var i_9116 = (0);
while(true){
if((i_9116 < n__4854__auto___9115)){
(a[i_9116] = init_val_or_seq);

var G__9117 = (i_9116 + (1));
i_9116 = G__9117;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9120 = (i + (1));
var G__9121 = cljs.core.next(s__$1);
i = G__9120;
s__$1 = G__9121;
continue;
} else {
return a;
}
break;
}
} else {
var n__4854__auto___9122 = size;
var i_9123 = (0);
while(true){
if((i_9123 < n__4854__auto___9122)){
(a[i_9123] = init_val_or_seq);

var G__9124 = (i_9123 + (1));
i_9123 = G__9124;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9127 = (i + (1));
var G__9128 = cljs.core.next(s__$1);
i = G__9127;
s__$1 = G__9128;
continue;
} else {
return a;
}
break;
}
} else {
var n__4854__auto___9129 = size;
var i_9130 = (0);
while(true){
if((i_9130 < n__4854__auto___9129)){
(a[i_9130] = init_val_or_seq);

var G__9131 = (i_9130 + (1));
i_9130 = G__9131;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9134 = (i + (1));
var G__9135 = cljs.core.next(s__$1);
i = G__9134;
s__$1 = G__9135;
continue;
} else {
return a;
}
break;
}
} else {
var n__4854__auto___9136 = size;
var i_9137 = (0);
while(true){
if((i_9137 < n__4854__auto___9136)){
(a[i_9137] = init_val_or_seq);

var G__9138 = (i_9137 + (1));
i_9137 = G__9138;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__9139 = cljs.core.next(s__$1);
var G__9140 = (i - (1));
var G__9141 = (sum + (1));
s__$1 = G__9139;
i = G__9140;
sum = G__9141;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__9161__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__9161 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9162__i = 0, G__9162__a = new Array(arguments.length -  2);
while (G__9162__i < G__9162__a.length) {G__9162__a[G__9162__i] = arguments[G__9162__i + 2]; ++G__9162__i;}
  zs = new cljs.core.IndexedSeq(G__9162__a,0);
} 
return G__9161__delegate.call(this,x,y,zs);};
G__9161.cljs$lang$maxFixedArity = 2;
G__9161.cljs$lang$applyTo = (function (arglist__9163){
var x = cljs.core.first(arglist__9163);
arglist__9163 = cljs.core.next(arglist__9163);
var y = cljs.core.first(arglist__9163);
var zs = cljs.core.rest(arglist__9163);
return G__9161__delegate(x,y,zs);
});
G__9161.cljs$core$IFn$_invoke$arity$variadic = G__9161__delegate;
return G__9161;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__9164 = null;
if (arguments.length > 2) {
var G__9165__i = 0, G__9165__a = new Array(arguments.length -  2);
while (G__9165__i < G__9165__a.length) {G__9165__a[G__9165__i] = arguments[G__9165__i + 2]; ++G__9165__i;}
G__9164 = new cljs.core.IndexedSeq(G__9165__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__9166__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__9166 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__9167__i = 0, G__9167__a = new Array(arguments.length -  4);
while (G__9167__i < G__9167__a.length) {G__9167__a[G__9167__i] = arguments[G__9167__i + 4]; ++G__9167__i;}
  more = new cljs.core.IndexedSeq(G__9167__a,0);
} 
return G__9166__delegate.call(this,a,b,c,d,more);};
G__9166.cljs$lang$maxFixedArity = 4;
G__9166.cljs$lang$applyTo = (function (arglist__9168){
var a = cljs.core.first(arglist__9168);
arglist__9168 = cljs.core.next(arglist__9168);
var b = cljs.core.first(arglist__9168);
arglist__9168 = cljs.core.next(arglist__9168);
var c = cljs.core.first(arglist__9168);
arglist__9168 = cljs.core.next(arglist__9168);
var d = cljs.core.first(arglist__9168);
var more = cljs.core.rest(arglist__9168);
return G__9166__delegate(a,b,c,d,more);
});
G__9166.cljs$core$IFn$_invoke$arity$variadic = G__9166__delegate;
return G__9166;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__9169 = null;
if (arguments.length > 4) {
var G__9170__i = 0, G__9170__a = new Array(arguments.length -  4);
while (G__9170__i < G__9170__a.length) {G__9170__a[G__9170__i] = arguments[G__9170__i + 4]; ++G__9170__i;}
G__9169 = new cljs.core.IndexedSeq(G__9170__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__9169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__9171__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9172 = ntcoll;
var G__9173 = cljs.core.first(vals);
var G__9174 = cljs.core.next(vals);
tcoll = G__9172;
val = G__9173;
vals = G__9174;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9171 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9175__i = 0, G__9175__a = new Array(arguments.length -  2);
while (G__9175__i < G__9175__a.length) {G__9175__a[G__9175__i] = arguments[G__9175__i + 2]; ++G__9175__i;}
  vals = new cljs.core.IndexedSeq(G__9175__a,0);
} 
return G__9171__delegate.call(this,tcoll,val,vals);};
G__9171.cljs$lang$maxFixedArity = 2;
G__9171.cljs$lang$applyTo = (function (arglist__9176){
var tcoll = cljs.core.first(arglist__9176);
arglist__9176 = cljs.core.next(arglist__9176);
var val = cljs.core.first(arglist__9176);
var vals = cljs.core.rest(arglist__9176);
return G__9171__delegate(tcoll,val,vals);
});
G__9171.cljs$core$IFn$_invoke$arity$variadic = G__9171__delegate;
return G__9171;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__9177 = null;
if (arguments.length > 2) {
var G__9178__i = 0, G__9178__a = new Array(arguments.length -  2);
while (G__9178__i < G__9178__a.length) {G__9178__a[G__9178__i] = arguments[G__9178__i + 2]; ++G__9178__i;}
G__9177 = new cljs.core.IndexedSeq(G__9178__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__9179__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__9180 = ntcoll;
var G__9181 = cljs.core.first(kvs);
var G__9182 = cljs.core.second(kvs);
var G__9183 = cljs.core.nnext(kvs);
tcoll = G__9180;
key = G__9181;
val = G__9182;
kvs = G__9183;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9179 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__9184__i = 0, G__9184__a = new Array(arguments.length -  3);
while (G__9184__i < G__9184__a.length) {G__9184__a[G__9184__i] = arguments[G__9184__i + 3]; ++G__9184__i;}
  kvs = new cljs.core.IndexedSeq(G__9184__a,0);
} 
return G__9179__delegate.call(this,tcoll,key,val,kvs);};
G__9179.cljs$lang$maxFixedArity = 3;
G__9179.cljs$lang$applyTo = (function (arglist__9185){
var tcoll = cljs.core.first(arglist__9185);
arglist__9185 = cljs.core.next(arglist__9185);
var key = cljs.core.first(arglist__9185);
arglist__9185 = cljs.core.next(arglist__9185);
var val = cljs.core.first(arglist__9185);
var kvs = cljs.core.rest(arglist__9185);
return G__9179__delegate(tcoll,key,val,kvs);
});
G__9179.cljs$core$IFn$_invoke$arity$variadic = G__9179__delegate;
return G__9179;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__9186 = null;
if (arguments.length > 3) {
var G__9187__i = 0, G__9187__a = new Array(arguments.length -  3);
while (G__9187__i < G__9187__a.length) {G__9187__a[G__9187__i] = arguments[G__9187__i + 3]; ++G__9187__i;}
G__9186 = new cljs.core.IndexedSeq(G__9187__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__9186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__9188__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__9189 = ntcoll;
var G__9190 = cljs.core.first(ks);
var G__9191 = cljs.core.next(ks);
tcoll = G__9189;
key = G__9190;
ks = G__9191;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9188 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__9192__i = 0, G__9192__a = new Array(arguments.length -  2);
while (G__9192__i < G__9192__a.length) {G__9192__a[G__9192__i] = arguments[G__9192__i + 2]; ++G__9192__i;}
  ks = new cljs.core.IndexedSeq(G__9192__a,0);
} 
return G__9188__delegate.call(this,tcoll,key,ks);};
G__9188.cljs$lang$maxFixedArity = 2;
G__9188.cljs$lang$applyTo = (function (arglist__9193){
var tcoll = cljs.core.first(arglist__9193);
arglist__9193 = cljs.core.next(arglist__9193);
var key = cljs.core.first(arglist__9193);
var ks = cljs.core.rest(arglist__9193);
return G__9188__delegate(tcoll,key,ks);
});
G__9188.cljs$core$IFn$_invoke$arity$variadic = G__9188__delegate;
return G__9188;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__9194 = null;
if (arguments.length > 2) {
var G__9195__i = 0, G__9195__a = new Array(arguments.length -  2);
while (G__9195__i < G__9195__a.length) {G__9195__a[G__9195__i] = arguments[G__9195__i + 2]; ++G__9195__i;}
G__9194 = new cljs.core.IndexedSeq(G__9195__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__9194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__9196__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9197 = ntcoll;
var G__9198 = cljs.core.first(vals);
var G__9199 = cljs.core.next(vals);
tcoll = G__9197;
val = G__9198;
vals = G__9199;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9196 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9200__i = 0, G__9200__a = new Array(arguments.length -  2);
while (G__9200__i < G__9200__a.length) {G__9200__a[G__9200__i] = arguments[G__9200__i + 2]; ++G__9200__i;}
  vals = new cljs.core.IndexedSeq(G__9200__a,0);
} 
return G__9196__delegate.call(this,tcoll,val,vals);};
G__9196.cljs$lang$maxFixedArity = 2;
G__9196.cljs$lang$applyTo = (function (arglist__9201){
var tcoll = cljs.core.first(arglist__9201);
arglist__9201 = cljs.core.next(arglist__9201);
var val = cljs.core.first(arglist__9201);
var vals = cljs.core.rest(arglist__9201);
return G__9196__delegate(tcoll,val,vals);
});
G__9196.cljs$core$IFn$_invoke$arity$variadic = G__9196__delegate;
return G__9196;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__9202 = null;
if (arguments.length > 2) {
var G__9203__i = 0, G__9203__a = new Array(arguments.length -  2);
while (G__9203__i < G__9203__a.length) {G__9203__a[G__9203__i] = arguments[G__9203__i + 2]; ++G__9203__i;}
G__9202 = new cljs.core.IndexedSeq(G__9203__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4898 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4898);
} else {
var G__9414 = a4898;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9414) : f.call(null,G__9414));
}
} else {
var b4899 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4898,b4899);
} else {
var G__9415 = a4898;
var G__9416 = b4899;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9415,G__9416) : f.call(null,G__9415,G__9416));
}
} else {
var c4900 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4898,b4899,c4900);
} else {
var G__9417 = a4898;
var G__9418 = b4899;
var G__9419 = c4900;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9417,G__9418,G__9419) : f.call(null,G__9417,G__9418,G__9419));
}
} else {
var d4901 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4898,b4899,c4900,d4901);
} else {
var G__9420 = a4898;
var G__9421 = b4899;
var G__9422 = c4900;
var G__9423 = d4901;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9420,G__9421,G__9422,G__9423) : f.call(null,G__9420,G__9421,G__9422,G__9423));
}
} else {
var e4902 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4898,b4899,c4900,d4901,e4902);
} else {
var G__9424 = a4898;
var G__9425 = b4899;
var G__9426 = c4900;
var G__9427 = d4901;
var G__9428 = e4902;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9424,G__9425,G__9426,G__9427,G__9428) : f.call(null,G__9424,G__9425,G__9426,G__9427,G__9428));
}
} else {
var f4903 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4898,b4899,c4900,d4901,e4902,f4903);
} else {
var G__9429 = a4898;
var G__9430 = b4899;
var G__9431 = c4900;
var G__9432 = d4901;
var G__9433 = e4902;
var G__9434 = f4903;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9429,G__9430,G__9431,G__9432,G__9433,G__9434) : f.call(null,G__9429,G__9430,G__9431,G__9432,G__9433,G__9434));
}
} else {
var g4904 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4898,b4899,c4900,d4901,e4902,f4903,g4904);
} else {
var G__9435 = a4898;
var G__9436 = b4899;
var G__9437 = c4900;
var G__9438 = d4901;
var G__9439 = e4902;
var G__9440 = f4903;
var G__9441 = g4904;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9435,G__9436,G__9437,G__9438,G__9439,G__9440,G__9441) : f.call(null,G__9435,G__9436,G__9437,G__9438,G__9439,G__9440,G__9441));
}
} else {
var h4905 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905);
} else {
var G__9442 = a4898;
var G__9443 = b4899;
var G__9444 = c4900;
var G__9445 = d4901;
var G__9446 = e4902;
var G__9447 = f4903;
var G__9448 = g4904;
var G__9449 = h4905;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9442,G__9443,G__9444,G__9445,G__9446,G__9447,G__9448,G__9449) : f.call(null,G__9442,G__9443,G__9444,G__9445,G__9446,G__9447,G__9448,G__9449));
}
} else {
var i4906 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906);
} else {
var G__9450 = a4898;
var G__9451 = b4899;
var G__9452 = c4900;
var G__9453 = d4901;
var G__9454 = e4902;
var G__9455 = f4903;
var G__9456 = g4904;
var G__9457 = h4905;
var G__9458 = i4906;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9450,G__9451,G__9452,G__9453,G__9454,G__9455,G__9456,G__9457,G__9458) : f.call(null,G__9450,G__9451,G__9452,G__9453,G__9454,G__9455,G__9456,G__9457,G__9458));
}
} else {
var j4907 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907);
} else {
var G__9459 = a4898;
var G__9460 = b4899;
var G__9461 = c4900;
var G__9462 = d4901;
var G__9463 = e4902;
var G__9464 = f4903;
var G__9465 = g4904;
var G__9466 = h4905;
var G__9467 = i4906;
var G__9468 = j4907;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9459,G__9460,G__9461,G__9462,G__9463,G__9464,G__9465,G__9466,G__9467,G__9468) : f.call(null,G__9459,G__9460,G__9461,G__9462,G__9463,G__9464,G__9465,G__9466,G__9467,G__9468));
}
} else {
var k4908 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908);
} else {
var G__9469 = a4898;
var G__9470 = b4899;
var G__9471 = c4900;
var G__9472 = d4901;
var G__9473 = e4902;
var G__9474 = f4903;
var G__9475 = g4904;
var G__9476 = h4905;
var G__9477 = i4906;
var G__9478 = j4907;
var G__9479 = k4908;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9469,G__9470,G__9471,G__9472,G__9473,G__9474,G__9475,G__9476,G__9477,G__9478,G__9479) : f.call(null,G__9469,G__9470,G__9471,G__9472,G__9473,G__9474,G__9475,G__9476,G__9477,G__9478,G__9479));
}
} else {
var l4909 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909);
} else {
var G__9480 = a4898;
var G__9481 = b4899;
var G__9482 = c4900;
var G__9483 = d4901;
var G__9484 = e4902;
var G__9485 = f4903;
var G__9486 = g4904;
var G__9487 = h4905;
var G__9488 = i4906;
var G__9489 = j4907;
var G__9490 = k4908;
var G__9491 = l4909;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9480,G__9481,G__9482,G__9483,G__9484,G__9485,G__9486,G__9487,G__9488,G__9489,G__9490,G__9491) : f.call(null,G__9480,G__9481,G__9482,G__9483,G__9484,G__9485,G__9486,G__9487,G__9488,G__9489,G__9490,G__9491));
}
} else {
var m4910 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910);
} else {
var G__9492 = a4898;
var G__9493 = b4899;
var G__9494 = c4900;
var G__9495 = d4901;
var G__9496 = e4902;
var G__9497 = f4903;
var G__9498 = g4904;
var G__9499 = h4905;
var G__9500 = i4906;
var G__9501 = j4907;
var G__9502 = k4908;
var G__9503 = l4909;
var G__9504 = m4910;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9492,G__9493,G__9494,G__9495,G__9496,G__9497,G__9498,G__9499,G__9500,G__9501,G__9502,G__9503,G__9504) : f.call(null,G__9492,G__9493,G__9494,G__9495,G__9496,G__9497,G__9498,G__9499,G__9500,G__9501,G__9502,G__9503,G__9504));
}
} else {
var n4911 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911);
} else {
var G__9505 = a4898;
var G__9506 = b4899;
var G__9507 = c4900;
var G__9508 = d4901;
var G__9509 = e4902;
var G__9510 = f4903;
var G__9511 = g4904;
var G__9512 = h4905;
var G__9513 = i4906;
var G__9514 = j4907;
var G__9515 = k4908;
var G__9516 = l4909;
var G__9517 = m4910;
var G__9518 = n4911;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9505,G__9506,G__9507,G__9508,G__9509,G__9510,G__9511,G__9512,G__9513,G__9514,G__9515,G__9516,G__9517,G__9518) : f.call(null,G__9505,G__9506,G__9507,G__9508,G__9509,G__9510,G__9511,G__9512,G__9513,G__9514,G__9515,G__9516,G__9517,G__9518));
}
} else {
var o4912 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912);
} else {
var G__9519 = a4898;
var G__9520 = b4899;
var G__9521 = c4900;
var G__9522 = d4901;
var G__9523 = e4902;
var G__9524 = f4903;
var G__9525 = g4904;
var G__9526 = h4905;
var G__9527 = i4906;
var G__9528 = j4907;
var G__9529 = k4908;
var G__9530 = l4909;
var G__9531 = m4910;
var G__9532 = n4911;
var G__9533 = o4912;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9519,G__9520,G__9521,G__9522,G__9523,G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530,G__9531,G__9532,G__9533) : f.call(null,G__9519,G__9520,G__9521,G__9522,G__9523,G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530,G__9531,G__9532,G__9533));
}
} else {
var p4913 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912,p4913);
} else {
var G__9534 = a4898;
var G__9535 = b4899;
var G__9536 = c4900;
var G__9537 = d4901;
var G__9538 = e4902;
var G__9539 = f4903;
var G__9540 = g4904;
var G__9541 = h4905;
var G__9542 = i4906;
var G__9543 = j4907;
var G__9544 = k4908;
var G__9545 = l4909;
var G__9546 = m4910;
var G__9547 = n4911;
var G__9548 = o4912;
var G__9549 = p4913;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9534,G__9535,G__9536,G__9537,G__9538,G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547,G__9548,G__9549) : f.call(null,G__9534,G__9535,G__9536,G__9537,G__9538,G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547,G__9548,G__9549));
}
} else {
var q4914 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912,p4913,q4914);
} else {
var G__9550 = a4898;
var G__9551 = b4899;
var G__9552 = c4900;
var G__9553 = d4901;
var G__9554 = e4902;
var G__9555 = f4903;
var G__9556 = g4904;
var G__9557 = h4905;
var G__9558 = i4906;
var G__9559 = j4907;
var G__9560 = k4908;
var G__9561 = l4909;
var G__9562 = m4910;
var G__9563 = n4911;
var G__9564 = o4912;
var G__9565 = p4913;
var G__9566 = q4914;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557,G__9558,G__9559,G__9560,G__9561,G__9562,G__9563,G__9564,G__9565,G__9566) : f.call(null,G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557,G__9558,G__9559,G__9560,G__9561,G__9562,G__9563,G__9564,G__9565,G__9566));
}
} else {
var r4915 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912,p4913,q4914,r4915);
} else {
var G__9567 = a4898;
var G__9568 = b4899;
var G__9569 = c4900;
var G__9570 = d4901;
var G__9571 = e4902;
var G__9572 = f4903;
var G__9573 = g4904;
var G__9574 = h4905;
var G__9575 = i4906;
var G__9576 = j4907;
var G__9577 = k4908;
var G__9578 = l4909;
var G__9579 = m4910;
var G__9580 = n4911;
var G__9581 = o4912;
var G__9582 = p4913;
var G__9583 = q4914;
var G__9584 = r4915;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9567,G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576,G__9577,G__9578,G__9579,G__9580,G__9581,G__9582,G__9583,G__9584) : f.call(null,G__9567,G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576,G__9577,G__9578,G__9579,G__9580,G__9581,G__9582,G__9583,G__9584));
}
} else {
var s4916 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912,p4913,q4914,r4915,s4916);
} else {
var G__9585 = a4898;
var G__9586 = b4899;
var G__9587 = c4900;
var G__9588 = d4901;
var G__9589 = e4902;
var G__9590 = f4903;
var G__9591 = g4904;
var G__9592 = h4905;
var G__9593 = i4906;
var G__9594 = j4907;
var G__9595 = k4908;
var G__9596 = l4909;
var G__9597 = m4910;
var G__9598 = n4911;
var G__9599 = o4912;
var G__9600 = p4913;
var G__9601 = q4914;
var G__9602 = r4915;
var G__9603 = s4916;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592,G__9593,G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603) : f.call(null,G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592,G__9593,G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603));
}
} else {
var t4917 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4898,b4899,c4900,d4901,e4902,f4903,g4904,h4905,i4906,j4907,k4908,l4909,m4910,n4911,o4912,p4913,q4914,r4915,s4916,t4917);
} else {
var G__9604 = a4898;
var G__9605 = b4899;
var G__9606 = c4900;
var G__9607 = d4901;
var G__9608 = e4902;
var G__9609 = f4903;
var G__9610 = g4904;
var G__9611 = h4905;
var G__9612 = i4906;
var G__9613 = j4907;
var G__9614 = k4908;
var G__9615 = l4909;
var G__9616 = m4910;
var G__9617 = n4911;
var G__9618 = o4912;
var G__9619 = p4913;
var G__9620 = q4914;
var G__9621 = r4915;
var G__9622 = s4916;
var G__9623 = t4917;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9604,G__9605,G__9606,G__9607,G__9608,G__9609,G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622,G__9623) : f.call(null,G__9604,G__9605,G__9606,G__9607,G__9608,G__9609,G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622,G__9623));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__9624__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9624 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9625__i = 0, G__9625__a = new Array(arguments.length -  5);
while (G__9625__i < G__9625__a.length) {G__9625__a[G__9625__i] = arguments[G__9625__i + 5]; ++G__9625__i;}
  args = new cljs.core.IndexedSeq(G__9625__a,0);
} 
return G__9624__delegate.call(this,f,a,b,c,d,args);};
G__9624.cljs$lang$maxFixedArity = 5;
G__9624.cljs$lang$applyTo = (function (arglist__9626){
var f = cljs.core.first(arglist__9626);
arglist__9626 = cljs.core.next(arglist__9626);
var a = cljs.core.first(arglist__9626);
arglist__9626 = cljs.core.next(arglist__9626);
var b = cljs.core.first(arglist__9626);
arglist__9626 = cljs.core.next(arglist__9626);
var c = cljs.core.first(arglist__9626);
arglist__9626 = cljs.core.next(arglist__9626);
var d = cljs.core.first(arglist__9626);
var args = cljs.core.rest(arglist__9626);
return G__9624__delegate(f,a,b,c,d,args);
});
G__9624.cljs$core$IFn$_invoke$arity$variadic = G__9624__delegate;
return G__9624;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__9627 = null;
if (arguments.length > 5) {
var G__9628__i = 0, G__9628__a = new Array(arguments.length -  5);
while (G__9628__i < G__9628__a.length) {G__9628__a[G__9628__i] = arguments[G__9628__i + 5]; ++G__9628__i;}
G__9627 = new cljs.core.IndexedSeq(G__9628__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9644 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9644) : f.call(null,G__9644));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9645 = cljs.core.meta(obj);
var G__9646 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9645,G__9646) : f.call(null,G__9645,G__9646));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9647 = cljs.core.meta(obj);
var G__9648 = a;
var G__9649 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9647,G__9648,G__9649) : f.call(null,G__9647,G__9648,G__9649));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9650 = cljs.core.meta(obj);
var G__9651 = a;
var G__9652 = b;
var G__9653 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9650,G__9651,G__9652,G__9653) : f.call(null,G__9650,G__9651,G__9652,G__9653));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9654 = cljs.core.meta(obj);
var G__9655 = a;
var G__9656 = b;
var G__9657 = c;
var G__9658 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9654,G__9655,G__9656,G__9657,G__9658) : f.call(null,G__9654,G__9655,G__9656,G__9657,G__9658));
})());
});
var vary_meta__7 = (function() { 
var G__9659__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9659 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9660__i = 0, G__9660__a = new Array(arguments.length -  6);
while (G__9660__i < G__9660__a.length) {G__9660__a[G__9660__i] = arguments[G__9660__i + 6]; ++G__9660__i;}
  args = new cljs.core.IndexedSeq(G__9660__a,0);
} 
return G__9659__delegate.call(this,obj,f,a,b,c,d,args);};
G__9659.cljs$lang$maxFixedArity = 6;
G__9659.cljs$lang$applyTo = (function (arglist__9661){
var obj = cljs.core.first(arglist__9661);
arglist__9661 = cljs.core.next(arglist__9661);
var f = cljs.core.first(arglist__9661);
arglist__9661 = cljs.core.next(arglist__9661);
var a = cljs.core.first(arglist__9661);
arglist__9661 = cljs.core.next(arglist__9661);
var b = cljs.core.first(arglist__9661);
arglist__9661 = cljs.core.next(arglist__9661);
var c = cljs.core.first(arglist__9661);
arglist__9661 = cljs.core.next(arglist__9661);
var d = cljs.core.first(arglist__9661);
var args = cljs.core.rest(arglist__9661);
return G__9659__delegate(obj,f,a,b,c,d,args);
});
G__9659.cljs$core$IFn$_invoke$arity$variadic = G__9659__delegate;
return G__9659;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9662 = null;
if (arguments.length > 6) {
var G__9663__i = 0, G__9663__a = new Array(arguments.length -  6);
while (G__9663__i < G__9663__a.length) {G__9663__a[G__9663__i] = arguments[G__9663__i + 6]; ++G__9663__i;}
G__9662 = new cljs.core.IndexedSeq(G__9663__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__9664__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9664 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9665__i = 0, G__9665__a = new Array(arguments.length -  2);
while (G__9665__i < G__9665__a.length) {G__9665__a[G__9665__i] = arguments[G__9665__i + 2]; ++G__9665__i;}
  more = new cljs.core.IndexedSeq(G__9665__a,0);
} 
return G__9664__delegate.call(this,x,y,more);};
G__9664.cljs$lang$maxFixedArity = 2;
G__9664.cljs$lang$applyTo = (function (arglist__9666){
var x = cljs.core.first(arglist__9666);
arglist__9666 = cljs.core.next(arglist__9666);
var y = cljs.core.first(arglist__9666);
var more = cljs.core.rest(arglist__9666);
return G__9664__delegate(x,y,more);
});
G__9664.cljs$core$IFn$_invoke$arity$variadic = G__9664__delegate;
return G__9664;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__9667 = null;
if (arguments.length > 2) {
var G__9668__i = 0, G__9668__a = new Array(arguments.length -  2);
while (G__9668__i < G__9668__a.length) {G__9668__a[G__9668__i] = arguments[G__9668__i + 2]; ++G__9668__i;}
G__9667 = new cljs.core.IndexedSeq(G__9668__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9667);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t9672 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9672 = (function (nil_iter,meta9673){
this.nil_iter = nil_iter;
this.meta9673 = meta9673;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t9672.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9674,meta9673__$1){
var self__ = this;
var _9674__$1 = this;
return (new cljs.core.t9672(self__.nil_iter,meta9673__$1));
});

cljs.core.t9672.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9674){
var self__ = this;
var _9674__$1 = this;
return self__.meta9673;
});

cljs.core.t9672.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9672.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9672.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9672.cljs$lang$type = true;

cljs.core.t9672.cljs$lang$ctorStr = "cljs.core/t9672";

cljs.core.t9672.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/t9672");
});

cljs.core.__GT_t9672 = (function __GT_t9672(nil_iter__$1,meta9673){
return (new cljs.core.t9672(nil_iter__$1,meta9673));
});

}

return (new cljs.core.t9672(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3955__auto__ = !((lt.stepper == null));
if(and__3955__auto__){
return self__.iter.hasNext();
} else {
return and__3955__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9675 = lt;
var G__9676 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9675,G__9676) : self__.xform.call(null,G__9675,G__9676));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9677 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9677) : self__.xform.call(null,G__9677));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9679 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9679) : xform.call(null,G__9679));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9681 = cljs.core.next(iters__$1);
iters__$1 = G__9681;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4854__auto___9682 = self__.iters.length;
var i_9683 = (0);
while(true){
if((i_9683 < n__4854__auto___9682)){
(self__.nexts[i_9683] = (self__.iters[i_9683]).next());

var G__9684 = (i_9683 + (1));
i_9683 = G__9684;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3955__auto__ = !((lt.stepper == null));
if(and__3955__auto__){
return this$.hasNext();
} else {
return and__3955__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9680 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9680) : self__.xform.call(null,G__9680));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9689 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9689) : xform.call(null,G__9689));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9690_9694 = cljs.core.seq(colls);
var chunk__9691_9695 = null;
var count__9692_9696 = (0);
var i__9693_9697 = (0);
while(true){
if((i__9693_9697 < count__9692_9696)){
var coll_9698 = chunk__9691_9695.cljs$core$IIndexed$_nth$arity$2(null,i__9693_9697);
iters.push(cljs.core.iter(coll_9698));

var G__9699 = seq__9690_9694;
var G__9700 = chunk__9691_9695;
var G__9701 = count__9692_9696;
var G__9702 = (i__9693_9697 + (1));
seq__9690_9694 = G__9699;
chunk__9691_9695 = G__9700;
count__9692_9696 = G__9701;
i__9693_9697 = G__9702;
continue;
} else {
var temp__4425__auto___9703 = cljs.core.seq(seq__9690_9694);
if(temp__4425__auto___9703){
var seq__9690_9704__$1 = temp__4425__auto___9703;
if(cljs.core.chunked_seq_QMARK_(seq__9690_9704__$1)){
var c__4754__auto___9705 = cljs.core.chunk_first(seq__9690_9704__$1);
var G__9706 = cljs.core.chunk_rest(seq__9690_9704__$1);
var G__9707 = c__4754__auto___9705;
var G__9708 = cljs.core.count(c__4754__auto___9705);
var G__9709 = (0);
seq__9690_9694 = G__9706;
chunk__9691_9695 = G__9707;
count__9692_9696 = G__9708;
i__9693_9697 = G__9709;
continue;
} else {
var coll_9710 = cljs.core.first(seq__9690_9704__$1);
iters.push(cljs.core.iter(coll_9710));

var G__9711 = cljs.core.next(seq__9690_9704__$1);
var G__9712 = null;
var G__9713 = (0);
var G__9714 = (0);
seq__9690_9694 = G__9711;
chunk__9691_9695 = G__9712;
count__9692_9696 = G__9713;
i__9693_9697 = G__9714;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3967__auto__ = cljs.core.seq(coll);
if(or__3967__auto__){
return or__3967__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__9715__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9715 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9716__i = 0, G__9716__a = new Array(arguments.length -  2);
while (G__9716__i < G__9716__a.length) {G__9716__a[G__9716__i] = arguments[G__9716__i + 2]; ++G__9716__i;}
  colls = new cljs.core.IndexedSeq(G__9716__a,0);
} 
return G__9715__delegate.call(this,xform,coll,colls);};
G__9715.cljs$lang$maxFixedArity = 2;
G__9715.cljs$lang$applyTo = (function (arglist__9717){
var xform = cljs.core.first(arglist__9717);
arglist__9717 = cljs.core.next(arglist__9717);
var coll = cljs.core.first(arglist__9717);
var colls = cljs.core.rest(arglist__9717);
return G__9715__delegate(xform,coll,colls);
});
G__9715.cljs$core$IFn$_invoke$arity$variadic = G__9715__delegate;
return G__9715;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__9718 = null;
if (arguments.length > 2) {
var G__9719__i = 0, G__9719__a = new Array(arguments.length -  2);
while (G__9719__i < G__9719__a.length) {G__9719__a[G__9719__i] = arguments[G__9719__i + 2]; ++G__9719__i;}
G__9718 = new cljs.core.IndexedSeq(G__9719__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9721 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9721) : pred.call(null,G__9721));
})())){
var G__9722 = pred;
var G__9723 = cljs.core.next(coll);
pred = G__9722;
coll = G__9723;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3967__auto__ = (function (){var G__9727 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9727) : pred.call(null,G__9727));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var G__9728 = pred;
var G__9729 = cljs.core.next(coll);
pred = G__9728;
coll = G__9729;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function complement(f){
return (function() {
var G__9736 = null;
var G__9736__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9736__1 = (function (x){
return cljs.core.not((function (){var G__9733 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9733) : f.call(null,G__9733));
})());
});
var G__9736__2 = (function (x,y){
return cljs.core.not((function (){var G__9734 = x;
var G__9735 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9734,G__9735) : f.call(null,G__9734,G__9735));
})());
});
var G__9736__3 = (function() { 
var G__9737__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9737 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9738__i = 0, G__9738__a = new Array(arguments.length -  2);
while (G__9738__i < G__9738__a.length) {G__9738__a[G__9738__i] = arguments[G__9738__i + 2]; ++G__9738__i;}
  zs = new cljs.core.IndexedSeq(G__9738__a,0);
} 
return G__9737__delegate.call(this,x,y,zs);};
G__9737.cljs$lang$maxFixedArity = 2;
G__9737.cljs$lang$applyTo = (function (arglist__9739){
var x = cljs.core.first(arglist__9739);
arglist__9739 = cljs.core.next(arglist__9739);
var y = cljs.core.first(arglist__9739);
var zs = cljs.core.rest(arglist__9739);
return G__9737__delegate(x,y,zs);
});
G__9737.cljs$core$IFn$_invoke$arity$variadic = G__9737__delegate;
return G__9737;
})()
;
G__9736 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9736__0.call(this);
case 1:
return G__9736__1.call(this,x);
case 2:
return G__9736__2.call(this,x,y);
default:
var G__9740 = null;
if (arguments.length > 2) {
var G__9741__i = 0, G__9741__a = new Array(arguments.length -  2);
while (G__9741__i < G__9741__a.length) {G__9741__a[G__9741__i] = arguments[G__9741__i + 2]; ++G__9741__i;}
G__9740 = new cljs.core.IndexedSeq(G__9741__a,0);
}
return G__9736__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9736.cljs$lang$maxFixedArity = 2;
G__9736.cljs$lang$applyTo = G__9736__3.cljs$lang$applyTo;
G__9736.cljs$core$IFn$_invoke$arity$0 = G__9736__0;
G__9736.cljs$core$IFn$_invoke$arity$1 = G__9736__1;
G__9736.cljs$core$IFn$_invoke$arity$2 = G__9736__2;
G__9736.cljs$core$IFn$_invoke$arity$variadic = G__9736__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9736;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__9742__delegate = function (args){
return x;
};
var G__9742 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9743__i = 0, G__9743__a = new Array(arguments.length -  0);
while (G__9743__i < G__9743__a.length) {G__9743__a[G__9743__i] = arguments[G__9743__i + 0]; ++G__9743__i;}
  args = new cljs.core.IndexedSeq(G__9743__a,0);
} 
return G__9742__delegate.call(this,args);};
G__9742.cljs$lang$maxFixedArity = 0;
G__9742.cljs$lang$applyTo = (function (arglist__9744){
var args = cljs.core.seq(arglist__9744);
return G__9742__delegate(args);
});
G__9742.cljs$core$IFn$_invoke$arity$variadic = G__9742__delegate;
return G__9742;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9799 = null;
var G__9799__0 = (function (){
var G__9772 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9772) : f.call(null,G__9772));
});
var G__9799__1 = (function (x){
var G__9773 = (function (){var G__9774 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9774) : g.call(null,G__9774));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9773) : f.call(null,G__9773));
});
var G__9799__2 = (function (x,y){
var G__9775 = (function (){var G__9776 = x;
var G__9777 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9776,G__9777) : g.call(null,G__9776,G__9777));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9775) : f.call(null,G__9775));
});
var G__9799__3 = (function (x,y,z){
var G__9778 = (function (){var G__9779 = x;
var G__9780 = y;
var G__9781 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9779,G__9780,G__9781) : g.call(null,G__9779,G__9780,G__9781));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9778) : f.call(null,G__9778));
});
var G__9799__4 = (function() { 
var G__9800__delegate = function (x,y,z,args){
var G__9782 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9782) : f.call(null,G__9782));
};
var G__9800 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9801__i = 0, G__9801__a = new Array(arguments.length -  3);
while (G__9801__i < G__9801__a.length) {G__9801__a[G__9801__i] = arguments[G__9801__i + 3]; ++G__9801__i;}
  args = new cljs.core.IndexedSeq(G__9801__a,0);
} 
return G__9800__delegate.call(this,x,y,z,args);};
G__9800.cljs$lang$maxFixedArity = 3;
G__9800.cljs$lang$applyTo = (function (arglist__9802){
var x = cljs.core.first(arglist__9802);
arglist__9802 = cljs.core.next(arglist__9802);
var y = cljs.core.first(arglist__9802);
arglist__9802 = cljs.core.next(arglist__9802);
var z = cljs.core.first(arglist__9802);
var args = cljs.core.rest(arglist__9802);
return G__9800__delegate(x,y,z,args);
});
G__9800.cljs$core$IFn$_invoke$arity$variadic = G__9800__delegate;
return G__9800;
})()
;
G__9799 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9799__0.call(this);
case 1:
return G__9799__1.call(this,x);
case 2:
return G__9799__2.call(this,x,y);
case 3:
return G__9799__3.call(this,x,y,z);
default:
var G__9803 = null;
if (arguments.length > 3) {
var G__9804__i = 0, G__9804__a = new Array(arguments.length -  3);
while (G__9804__i < G__9804__a.length) {G__9804__a[G__9804__i] = arguments[G__9804__i + 3]; ++G__9804__i;}
G__9803 = new cljs.core.IndexedSeq(G__9804__a,0);
}
return G__9799__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9799.cljs$lang$maxFixedArity = 3;
G__9799.cljs$lang$applyTo = G__9799__4.cljs$lang$applyTo;
G__9799.cljs$core$IFn$_invoke$arity$0 = G__9799__0;
G__9799.cljs$core$IFn$_invoke$arity$1 = G__9799__1;
G__9799.cljs$core$IFn$_invoke$arity$2 = G__9799__2;
G__9799.cljs$core$IFn$_invoke$arity$3 = G__9799__3;
G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9799;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9805 = null;
var G__9805__0 = (function (){
var G__9783 = (function (){var G__9784 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9784) : g.call(null,G__9784));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9783) : f.call(null,G__9783));
});
var G__9805__1 = (function (x){
var G__9785 = (function (){var G__9786 = (function (){var G__9787 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9787) : h.call(null,G__9787));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9786) : g.call(null,G__9786));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9785) : f.call(null,G__9785));
});
var G__9805__2 = (function (x,y){
var G__9788 = (function (){var G__9789 = (function (){var G__9790 = x;
var G__9791 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9790,G__9791) : h.call(null,G__9790,G__9791));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9789) : g.call(null,G__9789));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9788) : f.call(null,G__9788));
});
var G__9805__3 = (function (x,y,z){
var G__9792 = (function (){var G__9793 = (function (){var G__9794 = x;
var G__9795 = y;
var G__9796 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9794,G__9795,G__9796) : h.call(null,G__9794,G__9795,G__9796));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9793) : g.call(null,G__9793));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9792) : f.call(null,G__9792));
});
var G__9805__4 = (function() { 
var G__9806__delegate = function (x,y,z,args){
var G__9797 = (function (){var G__9798 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9798) : g.call(null,G__9798));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9797) : f.call(null,G__9797));
};
var G__9806 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9807__i = 0, G__9807__a = new Array(arguments.length -  3);
while (G__9807__i < G__9807__a.length) {G__9807__a[G__9807__i] = arguments[G__9807__i + 3]; ++G__9807__i;}
  args = new cljs.core.IndexedSeq(G__9807__a,0);
} 
return G__9806__delegate.call(this,x,y,z,args);};
G__9806.cljs$lang$maxFixedArity = 3;
G__9806.cljs$lang$applyTo = (function (arglist__9808){
var x = cljs.core.first(arglist__9808);
arglist__9808 = cljs.core.next(arglist__9808);
var y = cljs.core.first(arglist__9808);
arglist__9808 = cljs.core.next(arglist__9808);
var z = cljs.core.first(arglist__9808);
var args = cljs.core.rest(arglist__9808);
return G__9806__delegate(x,y,z,args);
});
G__9806.cljs$core$IFn$_invoke$arity$variadic = G__9806__delegate;
return G__9806;
})()
;
G__9805 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9805__0.call(this);
case 1:
return G__9805__1.call(this,x);
case 2:
return G__9805__2.call(this,x,y);
case 3:
return G__9805__3.call(this,x,y,z);
default:
var G__9809 = null;
if (arguments.length > 3) {
var G__9810__i = 0, G__9810__a = new Array(arguments.length -  3);
while (G__9810__i < G__9810__a.length) {G__9810__a[G__9810__i] = arguments[G__9810__i + 3]; ++G__9810__i;}
G__9809 = new cljs.core.IndexedSeq(G__9810__a,0);
}
return G__9805__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9805.cljs$lang$maxFixedArity = 3;
G__9805.cljs$lang$applyTo = G__9805__4.cljs$lang$applyTo;
G__9805.cljs$core$IFn$_invoke$arity$0 = G__9805__0;
G__9805.cljs$core$IFn$_invoke$arity$1 = G__9805__1;
G__9805.cljs$core$IFn$_invoke$arity$2 = G__9805__2;
G__9805.cljs$core$IFn$_invoke$arity$3 = G__9805__3;
G__9805.cljs$core$IFn$_invoke$arity$variadic = G__9805__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9805;
})()
});
var comp__4 = (function() { 
var G__9811__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9812__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9813 = cljs.core.first(fs__$2).call(null,ret);
var G__9814 = cljs.core.next(fs__$2);
ret = G__9813;
fs__$2 = G__9814;
continue;
} else {
return ret;
}
break;
}
};
var G__9812 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9815__i = 0, G__9815__a = new Array(arguments.length -  0);
while (G__9815__i < G__9815__a.length) {G__9815__a[G__9815__i] = arguments[G__9815__i + 0]; ++G__9815__i;}
  args = new cljs.core.IndexedSeq(G__9815__a,0);
} 
return G__9812__delegate.call(this,args);};
G__9812.cljs$lang$maxFixedArity = 0;
G__9812.cljs$lang$applyTo = (function (arglist__9816){
var args = cljs.core.seq(arglist__9816);
return G__9812__delegate(args);
});
G__9812.cljs$core$IFn$_invoke$arity$variadic = G__9812__delegate;
return G__9812;
})()
;
;})(fs__$1))
};
var G__9811 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9817__i = 0, G__9817__a = new Array(arguments.length -  3);
while (G__9817__i < G__9817__a.length) {G__9817__a[G__9817__i] = arguments[G__9817__i + 3]; ++G__9817__i;}
  fs = new cljs.core.IndexedSeq(G__9817__a,0);
} 
return G__9811__delegate.call(this,f1,f2,f3,fs);};
G__9811.cljs$lang$maxFixedArity = 3;
G__9811.cljs$lang$applyTo = (function (arglist__9818){
var f1 = cljs.core.first(arglist__9818);
arglist__9818 = cljs.core.next(arglist__9818);
var f2 = cljs.core.first(arglist__9818);
arglist__9818 = cljs.core.next(arglist__9818);
var f3 = cljs.core.first(arglist__9818);
var fs = cljs.core.rest(arglist__9818);
return G__9811__delegate(f1,f2,f3,fs);
});
G__9811.cljs$core$IFn$_invoke$arity$variadic = G__9811__delegate;
return G__9811;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9819 = null;
if (arguments.length > 3) {
var G__9820__i = 0, G__9820__a = new Array(arguments.length -  3);
while (G__9820__i < G__9820__a.length) {G__9820__a[G__9820__i] = arguments[G__9820__i + 3]; ++G__9820__i;}
G__9819 = new cljs.core.IndexedSeq(G__9820__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9819);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9905 = null;
var G__9905__0 = (function (){
var G__9863 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9863) : f.call(null,G__9863));
});
var G__9905__1 = (function (x){
var G__9864 = arg1;
var G__9865 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9864,G__9865) : f.call(null,G__9864,G__9865));
});
var G__9905__2 = (function (x,y){
var G__9866 = arg1;
var G__9867 = x;
var G__9868 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9866,G__9867,G__9868) : f.call(null,G__9866,G__9867,G__9868));
});
var G__9905__3 = (function (x,y,z){
var G__9869 = arg1;
var G__9870 = x;
var G__9871 = y;
var G__9872 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9869,G__9870,G__9871,G__9872) : f.call(null,G__9869,G__9870,G__9871,G__9872));
});
var G__9905__4 = (function() { 
var G__9906__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9906 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9907__i = 0, G__9907__a = new Array(arguments.length -  3);
while (G__9907__i < G__9907__a.length) {G__9907__a[G__9907__i] = arguments[G__9907__i + 3]; ++G__9907__i;}
  args = new cljs.core.IndexedSeq(G__9907__a,0);
} 
return G__9906__delegate.call(this,x,y,z,args);};
G__9906.cljs$lang$maxFixedArity = 3;
G__9906.cljs$lang$applyTo = (function (arglist__9908){
var x = cljs.core.first(arglist__9908);
arglist__9908 = cljs.core.next(arglist__9908);
var y = cljs.core.first(arglist__9908);
arglist__9908 = cljs.core.next(arglist__9908);
var z = cljs.core.first(arglist__9908);
var args = cljs.core.rest(arglist__9908);
return G__9906__delegate(x,y,z,args);
});
G__9906.cljs$core$IFn$_invoke$arity$variadic = G__9906__delegate;
return G__9906;
})()
;
G__9905 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9905__0.call(this);
case 1:
return G__9905__1.call(this,x);
case 2:
return G__9905__2.call(this,x,y);
case 3:
return G__9905__3.call(this,x,y,z);
default:
var G__9909 = null;
if (arguments.length > 3) {
var G__9910__i = 0, G__9910__a = new Array(arguments.length -  3);
while (G__9910__i < G__9910__a.length) {G__9910__a[G__9910__i] = arguments[G__9910__i + 3]; ++G__9910__i;}
G__9909 = new cljs.core.IndexedSeq(G__9910__a,0);
}
return G__9905__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9905.cljs$lang$maxFixedArity = 3;
G__9905.cljs$lang$applyTo = G__9905__4.cljs$lang$applyTo;
G__9905.cljs$core$IFn$_invoke$arity$0 = G__9905__0;
G__9905.cljs$core$IFn$_invoke$arity$1 = G__9905__1;
G__9905.cljs$core$IFn$_invoke$arity$2 = G__9905__2;
G__9905.cljs$core$IFn$_invoke$arity$3 = G__9905__3;
G__9905.cljs$core$IFn$_invoke$arity$variadic = G__9905__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9905;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9911 = null;
var G__9911__0 = (function (){
var G__9873 = arg1;
var G__9874 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9873,G__9874) : f.call(null,G__9873,G__9874));
});
var G__9911__1 = (function (x){
var G__9875 = arg1;
var G__9876 = arg2;
var G__9877 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9875,G__9876,G__9877) : f.call(null,G__9875,G__9876,G__9877));
});
var G__9911__2 = (function (x,y){
var G__9878 = arg1;
var G__9879 = arg2;
var G__9880 = x;
var G__9881 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9878,G__9879,G__9880,G__9881) : f.call(null,G__9878,G__9879,G__9880,G__9881));
});
var G__9911__3 = (function (x,y,z){
var G__9882 = arg1;
var G__9883 = arg2;
var G__9884 = x;
var G__9885 = y;
var G__9886 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9882,G__9883,G__9884,G__9885,G__9886) : f.call(null,G__9882,G__9883,G__9884,G__9885,G__9886));
});
var G__9911__4 = (function() { 
var G__9912__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9912 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9913__i = 0, G__9913__a = new Array(arguments.length -  3);
while (G__9913__i < G__9913__a.length) {G__9913__a[G__9913__i] = arguments[G__9913__i + 3]; ++G__9913__i;}
  args = new cljs.core.IndexedSeq(G__9913__a,0);
} 
return G__9912__delegate.call(this,x,y,z,args);};
G__9912.cljs$lang$maxFixedArity = 3;
G__9912.cljs$lang$applyTo = (function (arglist__9914){
var x = cljs.core.first(arglist__9914);
arglist__9914 = cljs.core.next(arglist__9914);
var y = cljs.core.first(arglist__9914);
arglist__9914 = cljs.core.next(arglist__9914);
var z = cljs.core.first(arglist__9914);
var args = cljs.core.rest(arglist__9914);
return G__9912__delegate(x,y,z,args);
});
G__9912.cljs$core$IFn$_invoke$arity$variadic = G__9912__delegate;
return G__9912;
})()
;
G__9911 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9911__0.call(this);
case 1:
return G__9911__1.call(this,x);
case 2:
return G__9911__2.call(this,x,y);
case 3:
return G__9911__3.call(this,x,y,z);
default:
var G__9915 = null;
if (arguments.length > 3) {
var G__9916__i = 0, G__9916__a = new Array(arguments.length -  3);
while (G__9916__i < G__9916__a.length) {G__9916__a[G__9916__i] = arguments[G__9916__i + 3]; ++G__9916__i;}
G__9915 = new cljs.core.IndexedSeq(G__9916__a,0);
}
return G__9911__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9911.cljs$lang$maxFixedArity = 3;
G__9911.cljs$lang$applyTo = G__9911__4.cljs$lang$applyTo;
G__9911.cljs$core$IFn$_invoke$arity$0 = G__9911__0;
G__9911.cljs$core$IFn$_invoke$arity$1 = G__9911__1;
G__9911.cljs$core$IFn$_invoke$arity$2 = G__9911__2;
G__9911.cljs$core$IFn$_invoke$arity$3 = G__9911__3;
G__9911.cljs$core$IFn$_invoke$arity$variadic = G__9911__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9911;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9917 = null;
var G__9917__0 = (function (){
var G__9887 = arg1;
var G__9888 = arg2;
var G__9889 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9887,G__9888,G__9889) : f.call(null,G__9887,G__9888,G__9889));
});
var G__9917__1 = (function (x){
var G__9890 = arg1;
var G__9891 = arg2;
var G__9892 = arg3;
var G__9893 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9890,G__9891,G__9892,G__9893) : f.call(null,G__9890,G__9891,G__9892,G__9893));
});
var G__9917__2 = (function (x,y){
var G__9894 = arg1;
var G__9895 = arg2;
var G__9896 = arg3;
var G__9897 = x;
var G__9898 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9894,G__9895,G__9896,G__9897,G__9898) : f.call(null,G__9894,G__9895,G__9896,G__9897,G__9898));
});
var G__9917__3 = (function (x,y,z){
var G__9899 = arg1;
var G__9900 = arg2;
var G__9901 = arg3;
var G__9902 = x;
var G__9903 = y;
var G__9904 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9899,G__9900,G__9901,G__9902,G__9903,G__9904) : f.call(null,G__9899,G__9900,G__9901,G__9902,G__9903,G__9904));
});
var G__9917__4 = (function() { 
var G__9918__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9918 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9919__i = 0, G__9919__a = new Array(arguments.length -  3);
while (G__9919__i < G__9919__a.length) {G__9919__a[G__9919__i] = arguments[G__9919__i + 3]; ++G__9919__i;}
  args = new cljs.core.IndexedSeq(G__9919__a,0);
} 
return G__9918__delegate.call(this,x,y,z,args);};
G__9918.cljs$lang$maxFixedArity = 3;
G__9918.cljs$lang$applyTo = (function (arglist__9920){
var x = cljs.core.first(arglist__9920);
arglist__9920 = cljs.core.next(arglist__9920);
var y = cljs.core.first(arglist__9920);
arglist__9920 = cljs.core.next(arglist__9920);
var z = cljs.core.first(arglist__9920);
var args = cljs.core.rest(arglist__9920);
return G__9918__delegate(x,y,z,args);
});
G__9918.cljs$core$IFn$_invoke$arity$variadic = G__9918__delegate;
return G__9918;
})()
;
G__9917 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9917__0.call(this);
case 1:
return G__9917__1.call(this,x);
case 2:
return G__9917__2.call(this,x,y);
case 3:
return G__9917__3.call(this,x,y,z);
default:
var G__9921 = null;
if (arguments.length > 3) {
var G__9922__i = 0, G__9922__a = new Array(arguments.length -  3);
while (G__9922__i < G__9922__a.length) {G__9922__a[G__9922__i] = arguments[G__9922__i + 3]; ++G__9922__i;}
G__9921 = new cljs.core.IndexedSeq(G__9922__a,0);
}
return G__9917__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9917.cljs$lang$maxFixedArity = 3;
G__9917.cljs$lang$applyTo = G__9917__4.cljs$lang$applyTo;
G__9917.cljs$core$IFn$_invoke$arity$0 = G__9917__0;
G__9917.cljs$core$IFn$_invoke$arity$1 = G__9917__1;
G__9917.cljs$core$IFn$_invoke$arity$2 = G__9917__2;
G__9917.cljs$core$IFn$_invoke$arity$3 = G__9917__3;
G__9917.cljs$core$IFn$_invoke$arity$variadic = G__9917__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9917;
})()
});
var partial__5 = (function() { 
var G__9923__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9924__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9924 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9925__i = 0, G__9925__a = new Array(arguments.length -  0);
while (G__9925__i < G__9925__a.length) {G__9925__a[G__9925__i] = arguments[G__9925__i + 0]; ++G__9925__i;}
  args = new cljs.core.IndexedSeq(G__9925__a,0);
} 
return G__9924__delegate.call(this,args);};
G__9924.cljs$lang$maxFixedArity = 0;
G__9924.cljs$lang$applyTo = (function (arglist__9926){
var args = cljs.core.seq(arglist__9926);
return G__9924__delegate(args);
});
G__9924.cljs$core$IFn$_invoke$arity$variadic = G__9924__delegate;
return G__9924;
})()
;
};
var G__9923 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9927__i = 0, G__9927__a = new Array(arguments.length -  4);
while (G__9927__i < G__9927__a.length) {G__9927__a[G__9927__i] = arguments[G__9927__i + 4]; ++G__9927__i;}
  more = new cljs.core.IndexedSeq(G__9927__a,0);
} 
return G__9923__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9923.cljs$lang$maxFixedArity = 4;
G__9923.cljs$lang$applyTo = (function (arglist__9928){
var f = cljs.core.first(arglist__9928);
arglist__9928 = cljs.core.next(arglist__9928);
var arg1 = cljs.core.first(arglist__9928);
arglist__9928 = cljs.core.next(arglist__9928);
var arg2 = cljs.core.first(arglist__9928);
arglist__9928 = cljs.core.next(arglist__9928);
var arg3 = cljs.core.first(arglist__9928);
var more = cljs.core.rest(arglist__9928);
return G__9923__delegate(f,arg1,arg2,arg3,more);
});
G__9923.cljs$core$IFn$_invoke$arity$variadic = G__9923__delegate;
return G__9923;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9929 = null;
if (arguments.length > 4) {
var G__9930__i = 0, G__9930__a = new Array(arguments.length -  4);
while (G__9930__i < G__9930__a.length) {G__9930__a[G__9930__i] = arguments[G__9930__i + 4]; ++G__9930__i;}
G__9929 = new cljs.core.IndexedSeq(G__9930__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__9963 = null;
var G__9963__1 = (function (a){
var G__9947 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9947) : f.call(null,G__9947));
});
var G__9963__2 = (function (a,b){
var G__9948 = (((a == null))?x:a);
var G__9949 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9948,G__9949) : f.call(null,G__9948,G__9949));
});
var G__9963__3 = (function (a,b,c){
var G__9950 = (((a == null))?x:a);
var G__9951 = b;
var G__9952 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9950,G__9951,G__9952) : f.call(null,G__9950,G__9951,G__9952));
});
var G__9963__4 = (function() { 
var G__9964__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9964 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9965__i = 0, G__9965__a = new Array(arguments.length -  3);
while (G__9965__i < G__9965__a.length) {G__9965__a[G__9965__i] = arguments[G__9965__i + 3]; ++G__9965__i;}
  ds = new cljs.core.IndexedSeq(G__9965__a,0);
} 
return G__9964__delegate.call(this,a,b,c,ds);};
G__9964.cljs$lang$maxFixedArity = 3;
G__9964.cljs$lang$applyTo = (function (arglist__9966){
var a = cljs.core.first(arglist__9966);
arglist__9966 = cljs.core.next(arglist__9966);
var b = cljs.core.first(arglist__9966);
arglist__9966 = cljs.core.next(arglist__9966);
var c = cljs.core.first(arglist__9966);
var ds = cljs.core.rest(arglist__9966);
return G__9964__delegate(a,b,c,ds);
});
G__9964.cljs$core$IFn$_invoke$arity$variadic = G__9964__delegate;
return G__9964;
})()
;
G__9963 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9963__1.call(this,a);
case 2:
return G__9963__2.call(this,a,b);
case 3:
return G__9963__3.call(this,a,b,c);
default:
var G__9967 = null;
if (arguments.length > 3) {
var G__9968__i = 0, G__9968__a = new Array(arguments.length -  3);
while (G__9968__i < G__9968__a.length) {G__9968__a[G__9968__i] = arguments[G__9968__i + 3]; ++G__9968__i;}
G__9967 = new cljs.core.IndexedSeq(G__9968__a,0);
}
return G__9963__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9963.cljs$lang$maxFixedArity = 3;
G__9963.cljs$lang$applyTo = G__9963__4.cljs$lang$applyTo;
G__9963.cljs$core$IFn$_invoke$arity$1 = G__9963__1;
G__9963.cljs$core$IFn$_invoke$arity$2 = G__9963__2;
G__9963.cljs$core$IFn$_invoke$arity$3 = G__9963__3;
G__9963.cljs$core$IFn$_invoke$arity$variadic = G__9963__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9963;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__9969 = null;
var G__9969__2 = (function (a,b){
var G__9953 = (((a == null))?x:a);
var G__9954 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9953,G__9954) : f.call(null,G__9953,G__9954));
});
var G__9969__3 = (function (a,b,c){
var G__9955 = (((a == null))?x:a);
var G__9956 = (((b == null))?y:b);
var G__9957 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9955,G__9956,G__9957) : f.call(null,G__9955,G__9956,G__9957));
});
var G__9969__4 = (function() { 
var G__9970__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9970 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9971__i = 0, G__9971__a = new Array(arguments.length -  3);
while (G__9971__i < G__9971__a.length) {G__9971__a[G__9971__i] = arguments[G__9971__i + 3]; ++G__9971__i;}
  ds = new cljs.core.IndexedSeq(G__9971__a,0);
} 
return G__9970__delegate.call(this,a,b,c,ds);};
G__9970.cljs$lang$maxFixedArity = 3;
G__9970.cljs$lang$applyTo = (function (arglist__9972){
var a = cljs.core.first(arglist__9972);
arglist__9972 = cljs.core.next(arglist__9972);
var b = cljs.core.first(arglist__9972);
arglist__9972 = cljs.core.next(arglist__9972);
var c = cljs.core.first(arglist__9972);
var ds = cljs.core.rest(arglist__9972);
return G__9970__delegate(a,b,c,ds);
});
G__9970.cljs$core$IFn$_invoke$arity$variadic = G__9970__delegate;
return G__9970;
})()
;
G__9969 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9969__2.call(this,a,b);
case 3:
return G__9969__3.call(this,a,b,c);
default:
var G__9973 = null;
if (arguments.length > 3) {
var G__9974__i = 0, G__9974__a = new Array(arguments.length -  3);
while (G__9974__i < G__9974__a.length) {G__9974__a[G__9974__i] = arguments[G__9974__i + 3]; ++G__9974__i;}
G__9973 = new cljs.core.IndexedSeq(G__9974__a,0);
}
return G__9969__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9969.cljs$lang$maxFixedArity = 3;
G__9969.cljs$lang$applyTo = G__9969__4.cljs$lang$applyTo;
G__9969.cljs$core$IFn$_invoke$arity$2 = G__9969__2;
G__9969.cljs$core$IFn$_invoke$arity$3 = G__9969__3;
G__9969.cljs$core$IFn$_invoke$arity$variadic = G__9969__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9969;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__9975 = null;
var G__9975__2 = (function (a,b){
var G__9958 = (((a == null))?x:a);
var G__9959 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9958,G__9959) : f.call(null,G__9958,G__9959));
});
var G__9975__3 = (function (a,b,c){
var G__9960 = (((a == null))?x:a);
var G__9961 = (((b == null))?y:b);
var G__9962 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9960,G__9961,G__9962) : f.call(null,G__9960,G__9961,G__9962));
});
var G__9975__4 = (function() { 
var G__9976__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9976 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9977__i = 0, G__9977__a = new Array(arguments.length -  3);
while (G__9977__i < G__9977__a.length) {G__9977__a[G__9977__i] = arguments[G__9977__i + 3]; ++G__9977__i;}
  ds = new cljs.core.IndexedSeq(G__9977__a,0);
} 
return G__9976__delegate.call(this,a,b,c,ds);};
G__9976.cljs$lang$maxFixedArity = 3;
G__9976.cljs$lang$applyTo = (function (arglist__9978){
var a = cljs.core.first(arglist__9978);
arglist__9978 = cljs.core.next(arglist__9978);
var b = cljs.core.first(arglist__9978);
arglist__9978 = cljs.core.next(arglist__9978);
var c = cljs.core.first(arglist__9978);
var ds = cljs.core.rest(arglist__9978);
return G__9976__delegate(a,b,c,ds);
});
G__9976.cljs$core$IFn$_invoke$arity$variadic = G__9976__delegate;
return G__9976;
})()
;
G__9975 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9975__2.call(this,a,b);
case 3:
return G__9975__3.call(this,a,b,c);
default:
var G__9979 = null;
if (arguments.length > 3) {
var G__9980__i = 0, G__9980__a = new Array(arguments.length -  3);
while (G__9980__i < G__9980__a.length) {G__9980__a[G__9980__i] = arguments[G__9980__i + 3]; ++G__9980__i;}
G__9979 = new cljs.core.IndexedSeq(G__9980__a,0);
}
return G__9975__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9975.cljs$lang$maxFixedArity = 3;
G__9975.cljs$lang$applyTo = G__9975__4.cljs$lang$applyTo;
G__9975.cljs$core$IFn$_invoke$arity$2 = G__9975__2;
G__9975.cljs$core$IFn$_invoke$arity$3 = G__9975__3;
G__9975.cljs$core$IFn$_invoke$arity$variadic = G__9975__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9975;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__10011 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__10011) : cljs.core.volatile_BANG_.call(null,G__10011));
})();
return ((function (i){
return (function() {
var G__10041 = null;
var G__10041__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10041__1 = (function (result){
var G__10012 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10012) : rf.call(null,G__10012));
});
var G__10041__2 = (function (result,input){
var G__10013 = result;
var G__10014 = (function (){var G__10015 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__10016 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10015,G__10016) : f.call(null,G__10015,G__10016));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10013,G__10014) : rf.call(null,G__10013,G__10014));
});
G__10041 = function(result,input){
switch(arguments.length){
case 0:
return G__10041__0.call(this);
case 1:
return G__10041__1.call(this,result);
case 2:
return G__10041__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10041.cljs$core$IFn$_invoke$arity$0 = G__10041__0;
G__10041.cljs$core$IFn$_invoke$arity$1 = G__10041__1;
G__10041.cljs$core$IFn$_invoke$arity$2 = G__10041__2;
return G__10041;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4854__auto___10042 = size;
var i_10043 = (0);
while(true){
if((i_10043 < n__4854__auto___10042)){
cljs.core.chunk_append(b,(function (){var G__10037 = (idx + i_10043);
var G__10038 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10043);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10037,G__10038) : f.call(null,G__10037,G__10038));
})());

var G__10044 = (i_10043 + (1));
i_10043 = G__10044;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10039 = idx;
var G__10040 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10039,G__10040) : f.call(null,G__10039,G__10040));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__10063 = null;
var G__10063__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10063__1 = (function (result){
var G__10057 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10057) : rf.call(null,G__10057));
});
var G__10063__2 = (function (result,input){
var v = (function (){var G__10058 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10058) : f.call(null,G__10058));
})();
if((v == null)){
return result;
} else {
var G__10059 = result;
var G__10060 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10059,G__10060) : rf.call(null,G__10059,G__10060));
}
});
G__10063 = function(result,input){
switch(arguments.length){
case 0:
return G__10063__0.call(this);
case 1:
return G__10063__1.call(this,result);
case 2:
return G__10063__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10063.cljs$core$IFn$_invoke$arity$0 = G__10063__0;
G__10063.cljs$core$IFn$_invoke$arity$1 = G__10063__1;
G__10063.cljs$core$IFn$_invoke$arity$2 = G__10063__2;
return G__10063;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4854__auto___10064 = size;
var i_10065 = (0);
while(true){
if((i_10065 < n__4854__auto___10064)){
var x_10066 = (function (){var G__10061 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10065);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10061) : f.call(null,G__10061));
})();
if((x_10066 == null)){
} else {
cljs.core.chunk_append(b,x_10066);
}

var G__10067 = (i_10065 + (1));
i_10065 = G__10067;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10062 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10062) : f.call(null,G__10062));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__10068 = cljs.core.seq(self__.watches);
var chunk__10069 = null;
var count__10070 = (0);
var i__10071 = (0);
while(true){
if((i__10071 < count__10070)){
var vec__10072 = chunk__10069.cljs$core$IIndexed$_nth$arity$2(null,i__10071);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10072,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10072,(1),null);
var G__10073_10083 = key;
var G__10074_10084 = this$__$1;
var G__10075_10085 = oldval;
var G__10076_10086 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10073_10083,G__10074_10084,G__10075_10085,G__10076_10086) : f.call(null,G__10073_10083,G__10074_10084,G__10075_10085,G__10076_10086));

var G__10087 = seq__10068;
var G__10088 = chunk__10069;
var G__10089 = count__10070;
var G__10090 = (i__10071 + (1));
seq__10068 = G__10087;
chunk__10069 = G__10088;
count__10070 = G__10089;
i__10071 = G__10090;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__10068);
if(temp__4425__auto__){
var seq__10068__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10068__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__10068__$1);
var G__10091 = cljs.core.chunk_rest(seq__10068__$1);
var G__10092 = c__4754__auto__;
var G__10093 = cljs.core.count(c__4754__auto__);
var G__10094 = (0);
seq__10068 = G__10091;
chunk__10069 = G__10092;
count__10070 = G__10093;
i__10071 = G__10094;
continue;
} else {
var vec__10077 = cljs.core.first(seq__10068__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10077,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10077,(1),null);
var G__10078_10095 = key;
var G__10079_10096 = this$__$1;
var G__10080_10097 = oldval;
var G__10081_10098 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10078_10095,G__10079_10096,G__10080_10097,G__10081_10098) : f.call(null,G__10078_10095,G__10079_10096,G__10080_10097,G__10081_10098));

var G__10099 = cljs.core.next(seq__10068__$1);
var G__10100 = null;
var G__10101 = (0);
var G__10102 = (0);
seq__10068 = G__10099;
chunk__10069 = G__10100;
count__10070 = G__10101;
i__10071 = G__10102;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10082 = this$__$1;
return goog.getUid(G__10082);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__10106__delegate = function (x,p__10103){
var map__10105 = p__10103;
var map__10105__$1 = ((cljs.core.seq_QMARK_(map__10105))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10105):map__10105);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10105__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10105__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__10106 = function (x,var_args){
var p__10103 = null;
if (arguments.length > 1) {
var G__10107__i = 0, G__10107__a = new Array(arguments.length -  1);
while (G__10107__i < G__10107__a.length) {G__10107__a[G__10107__i] = arguments[G__10107__i + 1]; ++G__10107__i;}
  p__10103 = new cljs.core.IndexedSeq(G__10107__a,0);
} 
return G__10106__delegate.call(this,x,p__10103);};
G__10106.cljs$lang$maxFixedArity = 1;
G__10106.cljs$lang$applyTo = (function (arglist__10108){
var x = cljs.core.first(arglist__10108);
var p__10103 = cljs.core.rest(arglist__10108);
return G__10106__delegate(x,p__10103);
});
G__10106.cljs$core$IFn$_invoke$arity$variadic = G__10106__delegate;
return G__10106;
})()
;
atom = function(x,var_args){
var p__10103 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__10109 = null;
if (arguments.length > 1) {
var G__10110__i = 0, G__10110__a = new Array(arguments.length -  1);
while (G__10110__i < G__10110__a.length) {G__10110__a[G__10110__i] = arguments[G__10110__i + 1]; ++G__10110__i;}
G__10109 = new cljs.core.IndexedSeq(G__10110__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__10113 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__10113) : validate.call(null,G__10113));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__10114 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10114) : cljs.core.pr_str.call(null,G__10114));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10121 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10121) : f.call(null,G__10121));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10122 = a.state;
var G__10123 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10122,G__10123) : f.call(null,G__10122,G__10123));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10124 = a.state;
var G__10125 = x;
var G__10126 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10124,G__10125,G__10126) : f.call(null,G__10124,G__10125,G__10126));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__10127__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__10127 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__10128__i = 0, G__10128__a = new Array(arguments.length -  4);
while (G__10128__i < G__10128__a.length) {G__10128__a[G__10128__i] = arguments[G__10128__i + 4]; ++G__10128__i;}
  more = new cljs.core.IndexedSeq(G__10128__a,0);
} 
return G__10127__delegate.call(this,a,f,x,y,more);};
G__10127.cljs$lang$maxFixedArity = 4;
G__10127.cljs$lang$applyTo = (function (arglist__10129){
var a = cljs.core.first(arglist__10129);
arglist__10129 = cljs.core.next(arglist__10129);
var f = cljs.core.first(arglist__10129);
arglist__10129 = cljs.core.next(arglist__10129);
var x = cljs.core.first(arglist__10129);
arglist__10129 = cljs.core.next(arglist__10129);
var y = cljs.core.first(arglist__10129);
var more = cljs.core.rest(arglist__10129);
return G__10127__delegate(a,f,x,y,more);
});
G__10127.cljs$core$IFn$_invoke$arity$variadic = G__10127__delegate;
return G__10127;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__10130 = null;
if (arguments.length > 4) {
var G__10131__i = 0, G__10131__a = new Array(arguments.length -  4);
while (G__10131__i < G__10131__a.length) {G__10131__a[G__10131__i] = arguments[G__10131__i + 4]; ++G__10131__i;}
G__10130 = new cljs.core.IndexedSeq(G__10131__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__10130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10198 = null;
var G__10198__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10198__1 = (function (result){
var G__10165 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10165) : rf.call(null,G__10165));
});
var G__10198__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__10166 = i;
var G__10167 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10166,G__10167) : f.call(null,G__10166,G__10167));
})();
if((v == null)){
return result;
} else {
var G__10168 = result;
var G__10169 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10168,G__10169) : rf.call(null,G__10168,G__10169));
}
});
G__10198 = function(result,input){
switch(arguments.length){
case 0:
return G__10198__0.call(this);
case 1:
return G__10198__1.call(this,result);
case 2:
return G__10198__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10198.cljs$core$IFn$_invoke$arity$0 = G__10198__0;
G__10198.cljs$core$IFn$_invoke$arity$1 = G__10198__1;
G__10198.cljs$core$IFn$_invoke$arity$2 = G__10198__2;
return G__10198;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4854__auto___10199 = size;
var i_10200 = (0);
while(true){
if((i_10200 < n__4854__auto___10199)){
var x_10201 = (function (){var G__10194 = (idx + i_10200);
var G__10195 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10200);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10194,G__10195) : f.call(null,G__10194,G__10195));
})();
if((x_10201 == null)){
} else {
cljs.core.chunk_append(b,x_10201);
}

var G__10202 = (i_10200 + (1));
i_10200 = G__10202;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10196 = idx;
var G__10197 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10196,G__10197) : f.call(null,G__10196,G__10197));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__10416 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10416) : p.call(null,G__10416));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10418 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10418) : p.call(null,G__10418));
})();
if(cljs.core.truth_(and__3955__auto__)){
var G__10419 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10419) : p.call(null,G__10419));
} else {
return and__3955__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10421 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10421) : p.call(null,G__10421));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10423 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10423) : p.call(null,G__10423));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var G__10424 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10424) : p.call(null,G__10424));
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__10593__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10593 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10594__i = 0, G__10594__a = new Array(arguments.length -  3);
while (G__10594__i < G__10594__a.length) {G__10594__a[G__10594__i] = arguments[G__10594__i + 3]; ++G__10594__i;}
  args = new cljs.core.IndexedSeq(G__10594__a,0);
} 
return G__10593__delegate.call(this,x,y,z,args);};
G__10593.cljs$lang$maxFixedArity = 3;
G__10593.cljs$lang$applyTo = (function (arglist__10595){
var x = cljs.core.first(arglist__10595);
arglist__10595 = cljs.core.next(arglist__10595);
var y = cljs.core.first(arglist__10595);
arglist__10595 = cljs.core.next(arglist__10595);
var z = cljs.core.first(arglist__10595);
var args = cljs.core.rest(arglist__10595);
return G__10593__delegate(x,y,z,args);
});
G__10593.cljs$core$IFn$_invoke$arity$variadic = G__10593__delegate;
return G__10593;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__10596 = null;
if (arguments.length > 3) {
var G__10597__i = 0, G__10597__a = new Array(arguments.length -  3);
while (G__10597__i < G__10597__a.length) {G__10597__a[G__10597__i] = arguments[G__10597__i + 3]; ++G__10597__i;}
G__10596 = new cljs.core.IndexedSeq(G__10597__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10456 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10456) : p1.call(null,G__10456));
})();
if(cljs.core.truth_(and__3955__auto__)){
var G__10457 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10457) : p2.call(null,G__10457));
} else {
return and__3955__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10459 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10459) : p1.call(null,G__10459));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10461 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10461) : p1.call(null,G__10461));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var and__3955__auto____$2 = (function (){var G__10463 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10463) : p2.call(null,G__10463));
})();
if(cljs.core.truth_(and__3955__auto____$2)){
var G__10464 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10464) : p2.call(null,G__10464));
} else {
return and__3955__auto____$2;
}
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10466 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10466) : p1.call(null,G__10466));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10468 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10468) : p1.call(null,G__10468));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var and__3955__auto____$2 = (function (){var G__10470 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10470) : p1.call(null,G__10470));
})();
if(cljs.core.truth_(and__3955__auto____$2)){
var and__3955__auto____$3 = (function (){var G__10472 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10472) : p2.call(null,G__10472));
})();
if(cljs.core.truth_(and__3955__auto____$3)){
var and__3955__auto____$4 = (function (){var G__10474 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10474) : p2.call(null,G__10474));
})();
if(cljs.core.truth_(and__3955__auto____$4)){
var G__10475 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10475) : p2.call(null,G__10475));
} else {
return and__3955__auto____$4;
}
} else {
return and__3955__auto____$3;
}
} else {
return and__3955__auto____$2;
}
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__10598__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10203_SHARP_){
var and__3955__auto__ = (function (){var G__10480 = p1__10203_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10480) : p1.call(null,G__10480));
})();
if(cljs.core.truth_(and__3955__auto__)){
var G__10481 = p1__10203_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10481) : p2.call(null,G__10481));
} else {
return and__3955__auto__;
}
}),args)));
};
var G__10598 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10599__i = 0, G__10599__a = new Array(arguments.length -  3);
while (G__10599__i < G__10599__a.length) {G__10599__a[G__10599__i] = arguments[G__10599__i + 3]; ++G__10599__i;}
  args = new cljs.core.IndexedSeq(G__10599__a,0);
} 
return G__10598__delegate.call(this,x,y,z,args);};
G__10598.cljs$lang$maxFixedArity = 3;
G__10598.cljs$lang$applyTo = (function (arglist__10600){
var x = cljs.core.first(arglist__10600);
arglist__10600 = cljs.core.next(arglist__10600);
var y = cljs.core.first(arglist__10600);
arglist__10600 = cljs.core.next(arglist__10600);
var z = cljs.core.first(arglist__10600);
var args = cljs.core.rest(arglist__10600);
return G__10598__delegate(x,y,z,args);
});
G__10598.cljs$core$IFn$_invoke$arity$variadic = G__10598__delegate;
return G__10598;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__10601 = null;
if (arguments.length > 3) {
var G__10602__i = 0, G__10602__a = new Array(arguments.length -  3);
while (G__10602__i < G__10602__a.length) {G__10602__a[G__10602__i] = arguments[G__10602__i + 3]; ++G__10602__i;}
G__10601 = new cljs.core.IndexedSeq(G__10602__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10527 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10527) : p1.call(null,G__10527));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10529 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10529) : p2.call(null,G__10529));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var G__10530 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10530) : p3.call(null,G__10530));
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10532 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10532) : p1.call(null,G__10532));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10534 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10534) : p2.call(null,G__10534));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var and__3955__auto____$2 = (function (){var G__10536 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10536) : p3.call(null,G__10536));
})();
if(cljs.core.truth_(and__3955__auto____$2)){
var and__3955__auto____$3 = (function (){var G__10538 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10538) : p1.call(null,G__10538));
})();
if(cljs.core.truth_(and__3955__auto____$3)){
var and__3955__auto____$4 = (function (){var G__10540 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10540) : p2.call(null,G__10540));
})();
if(cljs.core.truth_(and__3955__auto____$4)){
var G__10541 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10541) : p3.call(null,G__10541));
} else {
return and__3955__auto____$4;
}
} else {
return and__3955__auto____$3;
}
} else {
return and__3955__auto____$2;
}
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3955__auto__ = (function (){var G__10543 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10543) : p1.call(null,G__10543));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10545 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10545) : p2.call(null,G__10545));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var and__3955__auto____$2 = (function (){var G__10547 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10547) : p3.call(null,G__10547));
})();
if(cljs.core.truth_(and__3955__auto____$2)){
var and__3955__auto____$3 = (function (){var G__10549 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10549) : p1.call(null,G__10549));
})();
if(cljs.core.truth_(and__3955__auto____$3)){
var and__3955__auto____$4 = (function (){var G__10551 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10551) : p2.call(null,G__10551));
})();
if(cljs.core.truth_(and__3955__auto____$4)){
var and__3955__auto____$5 = (function (){var G__10553 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10553) : p3.call(null,G__10553));
})();
if(cljs.core.truth_(and__3955__auto____$5)){
var and__3955__auto____$6 = (function (){var G__10555 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10555) : p1.call(null,G__10555));
})();
if(cljs.core.truth_(and__3955__auto____$6)){
var and__3955__auto____$7 = (function (){var G__10557 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10557) : p2.call(null,G__10557));
})();
if(cljs.core.truth_(and__3955__auto____$7)){
var G__10558 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10558) : p3.call(null,G__10558));
} else {
return and__3955__auto____$7;
}
} else {
return and__3955__auto____$6;
}
} else {
return and__3955__auto____$5;
}
} else {
return and__3955__auto____$4;
}
} else {
return and__3955__auto____$3;
}
} else {
return and__3955__auto____$2;
}
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__10603__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10204_SHARP_){
var and__3955__auto__ = (function (){var G__10565 = p1__10204_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10565) : p1.call(null,G__10565));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10567 = p1__10204_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10567) : p2.call(null,G__10567));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var G__10568 = p1__10204_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10568) : p3.call(null,G__10568));
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
}),args)));
};
var G__10603 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10604__i = 0, G__10604__a = new Array(arguments.length -  3);
while (G__10604__i < G__10604__a.length) {G__10604__a[G__10604__i] = arguments[G__10604__i + 3]; ++G__10604__i;}
  args = new cljs.core.IndexedSeq(G__10604__a,0);
} 
return G__10603__delegate.call(this,x,y,z,args);};
G__10603.cljs$lang$maxFixedArity = 3;
G__10603.cljs$lang$applyTo = (function (arglist__10605){
var x = cljs.core.first(arglist__10605);
arglist__10605 = cljs.core.next(arglist__10605);
var y = cljs.core.first(arglist__10605);
arglist__10605 = cljs.core.next(arglist__10605);
var z = cljs.core.first(arglist__10605);
var args = cljs.core.rest(arglist__10605);
return G__10603__delegate(x,y,z,args);
});
G__10603.cljs$core$IFn$_invoke$arity$variadic = G__10603__delegate;
return G__10603;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__10606 = null;
if (arguments.length > 3) {
var G__10607__i = 0, G__10607__a = new Array(arguments.length -  3);
while (G__10607__i < G__10607__a.length) {G__10607__a[G__10607__i] = arguments[G__10607__i + 3]; ++G__10607__i;}
G__10606 = new cljs.core.IndexedSeq(G__10607__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__10608__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10205_SHARP_){
var G__10584 = x;
return (p1__10205_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10205_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10584) : p1__10205_SHARP_.call(null,G__10584));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10206_SHARP_){
var and__3955__auto__ = (function (){var G__10586 = x;
return (p1__10206_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10206_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10586) : p1__10206_SHARP_.call(null,G__10586));
})();
if(cljs.core.truth_(and__3955__auto__)){
var G__10587 = y;
return (p1__10206_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10206_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10587) : p1__10206_SHARP_.call(null,G__10587));
} else {
return and__3955__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10207_SHARP_){
var and__3955__auto__ = (function (){var G__10589 = x;
return (p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10589) : p1__10207_SHARP_.call(null,G__10589));
})();
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__10591 = y;
return (p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10591) : p1__10207_SHARP_.call(null,G__10591));
})();
if(cljs.core.truth_(and__3955__auto____$1)){
var G__10592 = z;
return (p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10207_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10592) : p1__10207_SHARP_.call(null,G__10592));
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__10609__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10208_SHARP_){
return cljs.core.every_QMARK_(p1__10208_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10610__i = 0, G__10610__a = new Array(arguments.length -  3);
while (G__10610__i < G__10610__a.length) {G__10610__a[G__10610__i] = arguments[G__10610__i + 3]; ++G__10610__i;}
  args = new cljs.core.IndexedSeq(G__10610__a,0);
} 
return G__10609__delegate.call(this,x,y,z,args);};
G__10609.cljs$lang$maxFixedArity = 3;
G__10609.cljs$lang$applyTo = (function (arglist__10611){
var x = cljs.core.first(arglist__10611);
arglist__10611 = cljs.core.next(arglist__10611);
var y = cljs.core.first(arglist__10611);
arglist__10611 = cljs.core.next(arglist__10611);
var z = cljs.core.first(arglist__10611);
var args = cljs.core.rest(arglist__10611);
return G__10609__delegate(x,y,z,args);
});
G__10609.cljs$core$IFn$_invoke$arity$variadic = G__10609__delegate;
return G__10609;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__10612 = null;
if (arguments.length > 3) {
var G__10613__i = 0, G__10613__a = new Array(arguments.length -  3);
while (G__10613__i < G__10613__a.length) {G__10613__a[G__10613__i] = arguments[G__10613__i + 3]; ++G__10613__i;}
G__10612 = new cljs.core.IndexedSeq(G__10613__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__10608 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10614__i = 0, G__10614__a = new Array(arguments.length -  3);
while (G__10614__i < G__10614__a.length) {G__10614__a[G__10614__i] = arguments[G__10614__i + 3]; ++G__10614__i;}
  ps = new cljs.core.IndexedSeq(G__10614__a,0);
} 
return G__10608__delegate.call(this,p1,p2,p3,ps);};
G__10608.cljs$lang$maxFixedArity = 3;
G__10608.cljs$lang$applyTo = (function (arglist__10615){
var p1 = cljs.core.first(arglist__10615);
arglist__10615 = cljs.core.next(arglist__10615);
var p2 = cljs.core.first(arglist__10615);
arglist__10615 = cljs.core.next(arglist__10615);
var p3 = cljs.core.first(arglist__10615);
var ps = cljs.core.rest(arglist__10615);
return G__10608__delegate(p1,p2,p3,ps);
});
G__10608.cljs$core$IFn$_invoke$arity$variadic = G__10608__delegate;
return G__10608;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__10616 = null;
if (arguments.length > 3) {
var G__10617__i = 0, G__10617__a = new Array(arguments.length -  3);
while (G__10617__i < G__10617__a.length) {G__10617__a[G__10617__i] = arguments[G__10617__i + 3]; ++G__10617__i;}
G__10616 = new cljs.core.IndexedSeq(G__10617__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10823 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10823) : p.call(null,G__10823));
});
var sp1__2 = (function (x,y){
var or__3967__auto__ = (function (){var G__10825 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10825) : p.call(null,G__10825));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var G__10826 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10826) : p.call(null,G__10826));
}
});
var sp1__3 = (function (x,y,z){
var or__3967__auto__ = (function (){var G__10828 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10828) : p.call(null,G__10828));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10830 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10830) : p.call(null,G__10830));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var G__10831 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10831) : p.call(null,G__10831));
}
}
});
var sp1__4 = (function() { 
var G__10992__delegate = function (x,y,z,args){
var or__3967__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10992 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10993__i = 0, G__10993__a = new Array(arguments.length -  3);
while (G__10993__i < G__10993__a.length) {G__10993__a[G__10993__i] = arguments[G__10993__i + 3]; ++G__10993__i;}
  args = new cljs.core.IndexedSeq(G__10993__a,0);
} 
return G__10992__delegate.call(this,x,y,z,args);};
G__10992.cljs$lang$maxFixedArity = 3;
G__10992.cljs$lang$applyTo = (function (arglist__10994){
var x = cljs.core.first(arglist__10994);
arglist__10994 = cljs.core.next(arglist__10994);
var y = cljs.core.first(arglist__10994);
arglist__10994 = cljs.core.next(arglist__10994);
var z = cljs.core.first(arglist__10994);
var args = cljs.core.rest(arglist__10994);
return G__10992__delegate(x,y,z,args);
});
G__10992.cljs$core$IFn$_invoke$arity$variadic = G__10992__delegate;
return G__10992;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__10995 = null;
if (arguments.length > 3) {
var G__10996__i = 0, G__10996__a = new Array(arguments.length -  3);
while (G__10996__i < G__10996__a.length) {G__10996__a[G__10996__i] = arguments[G__10996__i + 3]; ++G__10996__i;}
G__10995 = new cljs.core.IndexedSeq(G__10996__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3967__auto__ = (function (){var G__10863 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10863) : p1.call(null,G__10863));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var G__10864 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10864) : p2.call(null,G__10864));
}
});
var sp2__2 = (function (x,y){
var or__3967__auto__ = (function (){var G__10866 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10866) : p1.call(null,G__10866));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10868 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10868) : p1.call(null,G__10868));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var G__10870 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10870) : p2.call(null,G__10870));
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
var G__10871 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10871) : p2.call(null,G__10871));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3967__auto__ = (function (){var G__10873 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10873) : p1.call(null,G__10873));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10875 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10875) : p1.call(null,G__10875));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var G__10877 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10877) : p1.call(null,G__10877));
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
var or__3967__auto____$3 = (function (){var G__10879 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10879) : p2.call(null,G__10879));
})();
if(cljs.core.truth_(or__3967__auto____$3)){
return or__3967__auto____$3;
} else {
var or__3967__auto____$4 = (function (){var G__10881 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10881) : p2.call(null,G__10881));
})();
if(cljs.core.truth_(or__3967__auto____$4)){
return or__3967__auto____$4;
} else {
var G__10882 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10882) : p2.call(null,G__10882));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__10997__delegate = function (x,y,z,args){
var or__3967__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.some(((function (or__3967__auto__){
return (function (p1__10618_SHARP_){
var or__3967__auto____$1 = (function (){var G__10884 = p1__10618_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10884) : p1.call(null,G__10884));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var G__10885 = p1__10618_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10885) : p2.call(null,G__10885));
}
});})(or__3967__auto__))
,args);
}
};
var G__10997 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10998__i = 0, G__10998__a = new Array(arguments.length -  3);
while (G__10998__i < G__10998__a.length) {G__10998__a[G__10998__i] = arguments[G__10998__i + 3]; ++G__10998__i;}
  args = new cljs.core.IndexedSeq(G__10998__a,0);
} 
return G__10997__delegate.call(this,x,y,z,args);};
G__10997.cljs$lang$maxFixedArity = 3;
G__10997.cljs$lang$applyTo = (function (arglist__10999){
var x = cljs.core.first(arglist__10999);
arglist__10999 = cljs.core.next(arglist__10999);
var y = cljs.core.first(arglist__10999);
arglist__10999 = cljs.core.next(arglist__10999);
var z = cljs.core.first(arglist__10999);
var args = cljs.core.rest(arglist__10999);
return G__10997__delegate(x,y,z,args);
});
G__10997.cljs$core$IFn$_invoke$arity$variadic = G__10997__delegate;
return G__10997;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__11000 = null;
if (arguments.length > 3) {
var G__11001__i = 0, G__11001__a = new Array(arguments.length -  3);
while (G__11001__i < G__11001__a.length) {G__11001__a[G__11001__i] = arguments[G__11001__i + 3]; ++G__11001__i;}
G__11000 = new cljs.core.IndexedSeq(G__11001__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3967__auto__ = (function (){var G__10931 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10931) : p1.call(null,G__10931));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10933 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10933) : p2.call(null,G__10933));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var G__10934 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10934) : p3.call(null,G__10934));
}
}
});
var sp3__2 = (function (x,y){
var or__3967__auto__ = (function (){var G__10936 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10936) : p1.call(null,G__10936));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10938 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10938) : p2.call(null,G__10938));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var G__10940 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10940) : p3.call(null,G__10940));
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
var or__3967__auto____$3 = (function (){var G__10942 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10942) : p1.call(null,G__10942));
})();
if(cljs.core.truth_(or__3967__auto____$3)){
return or__3967__auto____$3;
} else {
var or__3967__auto____$4 = (function (){var G__10944 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10944) : p2.call(null,G__10944));
})();
if(cljs.core.truth_(or__3967__auto____$4)){
return or__3967__auto____$4;
} else {
var G__10945 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10945) : p3.call(null,G__10945));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3967__auto__ = (function (){var G__10947 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10947) : p1.call(null,G__10947));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10949 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10949) : p2.call(null,G__10949));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var G__10951 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10951) : p3.call(null,G__10951));
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
var or__3967__auto____$3 = (function (){var G__10953 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10953) : p1.call(null,G__10953));
})();
if(cljs.core.truth_(or__3967__auto____$3)){
return or__3967__auto____$3;
} else {
var or__3967__auto____$4 = (function (){var G__10955 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10955) : p2.call(null,G__10955));
})();
if(cljs.core.truth_(or__3967__auto____$4)){
return or__3967__auto____$4;
} else {
var or__3967__auto____$5 = (function (){var G__10957 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10957) : p3.call(null,G__10957));
})();
if(cljs.core.truth_(or__3967__auto____$5)){
return or__3967__auto____$5;
} else {
var or__3967__auto____$6 = (function (){var G__10959 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10959) : p1.call(null,G__10959));
})();
if(cljs.core.truth_(or__3967__auto____$6)){
return or__3967__auto____$6;
} else {
var or__3967__auto____$7 = (function (){var G__10961 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10961) : p2.call(null,G__10961));
})();
if(cljs.core.truth_(or__3967__auto____$7)){
return or__3967__auto____$7;
} else {
var G__10962 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10962) : p3.call(null,G__10962));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__11002__delegate = function (x,y,z,args){
var or__3967__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.some(((function (or__3967__auto__){
return (function (p1__10619_SHARP_){
var or__3967__auto____$1 = (function (){var G__10964 = p1__10619_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10964) : p1.call(null,G__10964));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var G__10966 = p1__10619_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10966) : p2.call(null,G__10966));
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
var G__10967 = p1__10619_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10967) : p3.call(null,G__10967));
}
}
});})(or__3967__auto__))
,args);
}
};
var G__11002 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11003__i = 0, G__11003__a = new Array(arguments.length -  3);
while (G__11003__i < G__11003__a.length) {G__11003__a[G__11003__i] = arguments[G__11003__i + 3]; ++G__11003__i;}
  args = new cljs.core.IndexedSeq(G__11003__a,0);
} 
return G__11002__delegate.call(this,x,y,z,args);};
G__11002.cljs$lang$maxFixedArity = 3;
G__11002.cljs$lang$applyTo = (function (arglist__11004){
var x = cljs.core.first(arglist__11004);
arglist__11004 = cljs.core.next(arglist__11004);
var y = cljs.core.first(arglist__11004);
arglist__11004 = cljs.core.next(arglist__11004);
var z = cljs.core.first(arglist__11004);
var args = cljs.core.rest(arglist__11004);
return G__11002__delegate(x,y,z,args);
});
G__11002.cljs$core$IFn$_invoke$arity$variadic = G__11002__delegate;
return G__11002;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__11005 = null;
if (arguments.length > 3) {
var G__11006__i = 0, G__11006__a = new Array(arguments.length -  3);
while (G__11006__i < G__11006__a.length) {G__11006__a[G__11006__i] = arguments[G__11006__i + 3]; ++G__11006__i;}
G__11005 = new cljs.core.IndexedSeq(G__11006__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__11007__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10620_SHARP_){
var G__10983 = x;
return (p1__10620_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10620_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10983) : p1__10620_SHARP_.call(null,G__10983));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10621_SHARP_){
var or__3967__auto__ = (function (){var G__10985 = x;
return (p1__10621_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10621_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10985) : p1__10621_SHARP_.call(null,G__10985));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var G__10986 = y;
return (p1__10621_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10621_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10986) : p1__10621_SHARP_.call(null,G__10986));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10622_SHARP_){
var or__3967__auto__ = (function (){var G__10988 = x;
return (p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10988) : p1__10622_SHARP_.call(null,G__10988));
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var G__10990 = y;
return (p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10990) : p1__10622_SHARP_.call(null,G__10990));
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var G__10991 = z;
return (p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10622_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10991) : p1__10622_SHARP_.call(null,G__10991));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__11008__delegate = function (x,y,z,args){
var or__3967__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.some(((function (or__3967__auto__,ps__$1){
return (function (p1__10623_SHARP_){
return cljs.core.some(p1__10623_SHARP_,args);
});})(or__3967__auto__,ps__$1))
,ps__$1);
}
};
var G__11008 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11009__i = 0, G__11009__a = new Array(arguments.length -  3);
while (G__11009__i < G__11009__a.length) {G__11009__a[G__11009__i] = arguments[G__11009__i + 3]; ++G__11009__i;}
  args = new cljs.core.IndexedSeq(G__11009__a,0);
} 
return G__11008__delegate.call(this,x,y,z,args);};
G__11008.cljs$lang$maxFixedArity = 3;
G__11008.cljs$lang$applyTo = (function (arglist__11010){
var x = cljs.core.first(arglist__11010);
arglist__11010 = cljs.core.next(arglist__11010);
var y = cljs.core.first(arglist__11010);
arglist__11010 = cljs.core.next(arglist__11010);
var z = cljs.core.first(arglist__11010);
var args = cljs.core.rest(arglist__11010);
return G__11008__delegate(x,y,z,args);
});
G__11008.cljs$core$IFn$_invoke$arity$variadic = G__11008__delegate;
return G__11008;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__11011 = null;
if (arguments.length > 3) {
var G__11012__i = 0, G__11012__a = new Array(arguments.length -  3);
while (G__11012__i < G__11012__a.length) {G__11012__a[G__11012__i] = arguments[G__11012__i + 3]; ++G__11012__i;}
G__11011 = new cljs.core.IndexedSeq(G__11012__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__11007 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__11013__i = 0, G__11013__a = new Array(arguments.length -  3);
while (G__11013__i < G__11013__a.length) {G__11013__a[G__11013__i] = arguments[G__11013__i + 3]; ++G__11013__i;}
  ps = new cljs.core.IndexedSeq(G__11013__a,0);
} 
return G__11007__delegate.call(this,p1,p2,p3,ps);};
G__11007.cljs$lang$maxFixedArity = 3;
G__11007.cljs$lang$applyTo = (function (arglist__11014){
var p1 = cljs.core.first(arglist__11014);
arglist__11014 = cljs.core.next(arglist__11014);
var p2 = cljs.core.first(arglist__11014);
arglist__11014 = cljs.core.next(arglist__11014);
var p3 = cljs.core.first(arglist__11014);
var ps = cljs.core.rest(arglist__11014);
return G__11007__delegate(p1,p2,p3,ps);
});
G__11007.cljs$core$IFn$_invoke$arity$variadic = G__11007__delegate;
return G__11007;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__11015 = null;
if (arguments.length > 3) {
var G__11016__i = 0, G__11016__a = new Array(arguments.length -  3);
while (G__11016__i < G__11016__a.length) {G__11016__a[G__11016__i] = arguments[G__11016__i + 3]; ++G__11016__i;}
G__11015 = new cljs.core.IndexedSeq(G__11016__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__11015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__11071 = null;
var G__11071__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11071__1 = (function (result){
var G__11057 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11057) : rf.call(null,G__11057));
});
var G__11071__2 = (function (result,input){
var G__11058 = result;
var G__11059 = (function (){var G__11060 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11060) : f.call(null,G__11060));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11058,G__11059) : rf.call(null,G__11058,G__11059));
});
var G__11071__3 = (function() { 
var G__11072__delegate = function (result,input,inputs){
var G__11061 = result;
var G__11062 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11061,G__11062) : rf.call(null,G__11061,G__11062));
};
var G__11072 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__11073__i = 0, G__11073__a = new Array(arguments.length -  2);
while (G__11073__i < G__11073__a.length) {G__11073__a[G__11073__i] = arguments[G__11073__i + 2]; ++G__11073__i;}
  inputs = new cljs.core.IndexedSeq(G__11073__a,0);
} 
return G__11072__delegate.call(this,result,input,inputs);};
G__11072.cljs$lang$maxFixedArity = 2;
G__11072.cljs$lang$applyTo = (function (arglist__11074){
var result = cljs.core.first(arglist__11074);
arglist__11074 = cljs.core.next(arglist__11074);
var input = cljs.core.first(arglist__11074);
var inputs = cljs.core.rest(arglist__11074);
return G__11072__delegate(result,input,inputs);
});
G__11072.cljs$core$IFn$_invoke$arity$variadic = G__11072__delegate;
return G__11072;
})()
;
G__11071 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__11071__0.call(this);
case 1:
return G__11071__1.call(this,result);
case 2:
return G__11071__2.call(this,result,input);
default:
var G__11075 = null;
if (arguments.length > 2) {
var G__11076__i = 0, G__11076__a = new Array(arguments.length -  2);
while (G__11076__i < G__11076__a.length) {G__11076__a[G__11076__i] = arguments[G__11076__i + 2]; ++G__11076__i;}
G__11075 = new cljs.core.IndexedSeq(G__11076__a,0);
}
return G__11071__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__11075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11071.cljs$lang$maxFixedArity = 2;
G__11071.cljs$lang$applyTo = G__11071__3.cljs$lang$applyTo;
G__11071.cljs$core$IFn$_invoke$arity$0 = G__11071__0;
G__11071.cljs$core$IFn$_invoke$arity$1 = G__11071__1;
G__11071.cljs$core$IFn$_invoke$arity$2 = G__11071__2;
G__11071.cljs$core$IFn$_invoke$arity$variadic = G__11071__3.cljs$core$IFn$_invoke$arity$variadic;
return G__11071;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4854__auto___11077 = size;
var i_11078 = (0);
while(true){
if((i_11078 < n__4854__auto___11077)){
cljs.core.chunk_append(b,(function (){var G__11063 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11078);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11063) : f.call(null,G__11063));
})());

var G__11079 = (i_11078 + (1));
i_11078 = G__11079;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__11064 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11064) : f.call(null,G__11064));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__11065 = cljs.core.first(s1);
var G__11066 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11065,G__11066) : f.call(null,G__11065,G__11066));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__11067 = cljs.core.first(s1);
var G__11068 = cljs.core.first(s2);
var G__11069 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11067,G__11068,G__11069) : f.call(null,G__11067,G__11068,G__11069));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__11080__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__11017_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__11017_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__11080 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11081__i = 0, G__11081__a = new Array(arguments.length -  4);
while (G__11081__i < G__11081__a.length) {G__11081__a[G__11081__i] = arguments[G__11081__i + 4]; ++G__11081__i;}
  colls = new cljs.core.IndexedSeq(G__11081__a,0);
} 
return G__11080__delegate.call(this,f,c1,c2,c3,colls);};
G__11080.cljs$lang$maxFixedArity = 4;
G__11080.cljs$lang$applyTo = (function (arglist__11082){
var f = cljs.core.first(arglist__11082);
arglist__11082 = cljs.core.next(arglist__11082);
var c1 = cljs.core.first(arglist__11082);
arglist__11082 = cljs.core.next(arglist__11082);
var c2 = cljs.core.first(arglist__11082);
arglist__11082 = cljs.core.next(arglist__11082);
var c3 = cljs.core.first(arglist__11082);
var colls = cljs.core.rest(arglist__11082);
return G__11080__delegate(f,c1,c2,c3,colls);
});
G__11080.cljs$core$IFn$_invoke$arity$variadic = G__11080__delegate;
return G__11080;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__11083 = null;
if (arguments.length > 4) {
var G__11084__i = 0, G__11084__a = new Array(arguments.length -  4);
while (G__11084__i < G__11084__a.length) {G__11084__a[G__11084__i] = arguments[G__11084__i + 4]; ++G__11084__i;}
G__11083 = new cljs.core.IndexedSeq(G__11084__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11093 = null;
var G__11093__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11093__1 = (function (result){
var G__11090 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11090) : rf.call(null,G__11090));
});
var G__11093__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__11091 = result;
var G__11092 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11091,G__11092) : rf.call(null,G__11091,G__11092));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__11093 = function(result,input){
switch(arguments.length){
case 0:
return G__11093__0.call(this);
case 1:
return G__11093__1.call(this,result);
case 2:
return G__11093__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11093.cljs$core$IFn$_invoke$arity$0 = G__11093__0;
G__11093.cljs$core$IFn$_invoke$arity$1 = G__11093__1;
G__11093.cljs$core$IFn$_invoke$arity$2 = G__11093__2;
return G__11093;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11100 = null;
var G__11100__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11100__1 = (function (result){
var G__11097 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11097) : rf.call(null,G__11097));
});
var G__11100__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__11098 = result;
var G__11099 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11098,G__11099) : rf.call(null,G__11098,G__11099));
}
});
G__11100 = function(result,input){
switch(arguments.length){
case 0:
return G__11100__0.call(this);
case 1:
return G__11100__1.call(this,result);
case 2:
return G__11100__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11100.cljs$core$IFn$_invoke$arity$0 = G__11100__0;
G__11100.cljs$core$IFn$_invoke$arity$1 = G__11100__1;
G__11100.cljs$core$IFn$_invoke$arity$2 = G__11100__2;
return G__11100;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__11101 = (n__$1 - (1));
var G__11102 = cljs.core.rest(s);
n__$1 = G__11101;
coll__$1 = G__11102;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__11105 = cljs.core.next(s);
var G__11106 = cljs.core.next(lead);
s = G__11105;
lead = G__11106;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__11119 = null;
var G__11119__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11119__1 = (function (result){
var G__11113 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11113) : rf.call(null,G__11113));
});
var G__11119__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3955__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3955__auto__)){
var G__11114 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11114) : pred.call(null,G__11114));
} else {
return and__3955__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__11115 = result;
var G__11116 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11115,G__11116) : rf.call(null,G__11115,G__11116));
}
});
G__11119 = function(result,input){
switch(arguments.length){
case 0:
return G__11119__0.call(this);
case 1:
return G__11119__1.call(this,result);
case 2:
return G__11119__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11119.cljs$core$IFn$_invoke$arity$0 = G__11119__0;
G__11119.cljs$core$IFn$_invoke$arity$1 = G__11119__1;
G__11119.cljs$core$IFn$_invoke$arity$2 = G__11119__2;
return G__11119;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3955__auto__ = s;
if(and__3955__auto__){
var G__11118 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__11118) : pred__$1.call(null,G__11118));
} else {
return and__3955__auto__;
}
})())){
var G__11120 = pred__$1;
var G__11121 = cljs.core.rest(s);
pred__$1 = G__11120;
coll__$1 = G__11121;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__11130 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11130) : f.call(null,G__11130));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__11133__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__11133 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__11134__i = 0, G__11134__a = new Array(arguments.length -  2);
while (G__11134__i < G__11134__a.length) {G__11134__a[G__11134__i] = arguments[G__11134__i + 2]; ++G__11134__i;}
  colls = new cljs.core.IndexedSeq(G__11134__a,0);
} 
return G__11133__delegate.call(this,c1,c2,colls);};
G__11133.cljs$lang$maxFixedArity = 2;
G__11133.cljs$lang$applyTo = (function (arglist__11135){
var c1 = cljs.core.first(arglist__11135);
arglist__11135 = cljs.core.next(arglist__11135);
var c2 = cljs.core.first(arglist__11135);
var colls = cljs.core.rest(arglist__11135);
return G__11133__delegate(c1,c2,colls);
});
G__11133.cljs$core$IFn$_invoke$arity$variadic = G__11133__delegate;
return G__11133;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__11136 = null;
if (arguments.length > 2) {
var G__11137__i = 0, G__11137__a = new Array(arguments.length -  2);
while (G__11137__i < G__11137__a.length) {G__11137__a[G__11137__i] = arguments[G__11137__i + 2]; ++G__11137__i;}
G__11136 = new cljs.core.IndexedSeq(G__11137__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__11136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__11152 = null;
var G__11152__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11152__1 = (function (result){
var G__11145 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11145) : rf.call(null,G__11145));
});
var G__11152__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__11146 = result;
var G__11147 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11146,G__11147) : rf.call(null,G__11146,G__11147));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__11148 = sepr;
var G__11149 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11148,G__11149) : rf.call(null,G__11148,G__11149));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__11150 = result;
var G__11151 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11150,G__11151) : rf.call(null,G__11150,G__11151));
}
});
G__11152 = function(result,input){
switch(arguments.length){
case 0:
return G__11152__0.call(this);
case 1:
return G__11152__1.call(this,result);
case 2:
return G__11152__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11152.cljs$core$IFn$_invoke$arity$0 = G__11152__0;
G__11152.cljs$core$IFn$_invoke$arity$1 = G__11152__1;
G__11152.cljs$core$IFn$_invoke$arity$2 = G__11152__2;
return G__11152;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var coll__$1 = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__11161__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__11161 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__11162__i = 0, G__11162__a = new Array(arguments.length -  1);
while (G__11162__i < G__11162__a.length) {G__11162__a[G__11162__i] = arguments[G__11162__i + 1]; ++G__11162__i;}
  colls = new cljs.core.IndexedSeq(G__11162__a,0);
} 
return G__11161__delegate.call(this,f,colls);};
G__11161.cljs$lang$maxFixedArity = 1;
G__11161.cljs$lang$applyTo = (function (arglist__11163){
var f = cljs.core.first(arglist__11163);
var colls = cljs.core.rest(arglist__11163);
return G__11161__delegate(f,colls);
});
G__11161.cljs$core$IFn$_invoke$arity$variadic = G__11161__delegate;
return G__11161;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__11164 = null;
if (arguments.length > 1) {
var G__11165__i = 0, G__11165__a = new Array(arguments.length -  1);
while (G__11165__i < G__11165__a.length) {G__11165__a[G__11165__i] = arguments[G__11165__i + 1]; ++G__11165__i;}
G__11164 = new cljs.core.IndexedSeq(G__11165__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__11184 = null;
var G__11184__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11184__1 = (function (result){
var G__11178 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11178) : rf.call(null,G__11178));
});
var G__11184__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11179 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11179) : pred.call(null,G__11179));
})())){
var G__11180 = result;
var G__11181 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11180,G__11181) : rf.call(null,G__11180,G__11181));
} else {
return result;
}
});
G__11184 = function(result,input){
switch(arguments.length){
case 0:
return G__11184__0.call(this);
case 1:
return G__11184__1.call(this,result);
case 2:
return G__11184__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11184.cljs$core$IFn$_invoke$arity$0 = G__11184__0;
G__11184.cljs$core$IFn$_invoke$arity$1 = G__11184__1;
G__11184.cljs$core$IFn$_invoke$arity$2 = G__11184__2;
return G__11184;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4854__auto___11185 = size;
var i_11186 = (0);
while(true){
if((i_11186 < n__4854__auto___11185)){
if(cljs.core.truth_((function (){var G__11182 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11186);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11182) : pred.call(null,G__11182));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11186));
} else {
}

var G__11187 = (i_11186 + (1));
i_11186 = G__11187;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__11183 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11183) : pred.call(null,G__11183));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__11194 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__11194) : branch_QMARK_.call(null,G__11194));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__11195 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__11195) : children.call(null,G__11195));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__11196_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__11196_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__11199 = to;
if(G__11199){
var bit__4641__auto__ = (G__11199.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4641__auto__) || (G__11199.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__11200 = to;
if(G__11200){
var bit__4641__auto__ = (G__11200.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4641__auto__) || (G__11200.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__11202 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11202) : f.call(null,G__11202));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__11203__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__11203 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11204__i = 0, G__11204__a = new Array(arguments.length -  4);
while (G__11204__i < G__11204__a.length) {G__11204__a[G__11204__i] = arguments[G__11204__i + 4]; ++G__11204__i;}
  colls = new cljs.core.IndexedSeq(G__11204__a,0);
} 
return G__11203__delegate.call(this,f,c1,c2,c3,colls);};
G__11203.cljs$lang$maxFixedArity = 4;
G__11203.cljs$lang$applyTo = (function (arglist__11205){
var f = cljs.core.first(arglist__11205);
arglist__11205 = cljs.core.next(arglist__11205);
var c1 = cljs.core.first(arglist__11205);
arglist__11205 = cljs.core.next(arglist__11205);
var c2 = cljs.core.first(arglist__11205);
arglist__11205 = cljs.core.next(arglist__11205);
var c3 = cljs.core.first(arglist__11205);
var colls = cljs.core.rest(arglist__11205);
return G__11203__delegate(f,c1,c2,c3,colls);
});
G__11203.cljs$core$IFn$_invoke$arity$variadic = G__11203__delegate;
return G__11203;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__11206 = null;
if (arguments.length > 4) {
var G__11207__i = 0, G__11207__a = new Array(arguments.length -  4);
while (G__11207__i < G__11207__a.length) {G__11207__a[G__11207__i] = arguments[G__11207__i + 4]; ++G__11207__i;}
G__11206 = new cljs.core.IndexedSeq(G__11207__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__11209 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11209) : pred.call(null,G__11209));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__11224 = m__$1;
if(G__11224){
var bit__4648__auto__ = (G__11224.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4648__auto__) || (G__11224.cljs$core$ILookup$)){
return true;
} else {
if((!G__11224.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11224);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11224);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__11225 = sentinel;
var G__11226 = m__$2;
var G__11227 = cljs.core.next(ks__$1);
sentinel = G__11225;
m__$1 = G__11226;
ks__$1 = G__11227;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function assoc_in(m,p__11228,v){
var vec__11233 = p__11228;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11233,(0),null);
var ks = cljs.core.nthnext(vec__11233,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__11234,f){
var vec__11272 = p__11234;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11272,(0),null);
var ks = cljs.core.nthnext(vec__11272,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11273 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11273) : f.call(null,G__11273));
})());
}
});
var update_in__4 = (function (m,p__11235,f,a){
var vec__11274 = p__11235;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11274,(0),null);
var ks = cljs.core.nthnext(vec__11274,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11275 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11276 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11275,G__11276) : f.call(null,G__11275,G__11276));
})());
}
});
var update_in__5 = (function (m,p__11236,f,a,b){
var vec__11277 = p__11236;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11277,(0),null);
var ks = cljs.core.nthnext(vec__11277,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11278 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11279 = a;
var G__11280 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11278,G__11279,G__11280) : f.call(null,G__11278,G__11279,G__11280));
})());
}
});
var update_in__6 = (function (m,p__11237,f,a,b,c){
var vec__11281 = p__11237;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11281,(0),null);
var ks = cljs.core.nthnext(vec__11281,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11282 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11283 = a;
var G__11284 = b;
var G__11285 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11282,G__11283,G__11284,G__11285) : f.call(null,G__11282,G__11283,G__11284,G__11285));
})());
}
});
var update_in__7 = (function() { 
var G__11287__delegate = function (m,p__11238,f,a,b,c,args){
var vec__11286 = p__11238;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11286,(0),null);
var ks = cljs.core.nthnext(vec__11286,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__11287 = function (m,p__11238,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__11288__i = 0, G__11288__a = new Array(arguments.length -  6);
while (G__11288__i < G__11288__a.length) {G__11288__a[G__11288__i] = arguments[G__11288__i + 6]; ++G__11288__i;}
  args = new cljs.core.IndexedSeq(G__11288__a,0);
} 
return G__11287__delegate.call(this,m,p__11238,f,a,b,c,args);};
G__11287.cljs$lang$maxFixedArity = 6;
G__11287.cljs$lang$applyTo = (function (arglist__11289){
var m = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var p__11238 = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var f = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var a = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var b = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var c = cljs.core.first(arglist__11289);
var args = cljs.core.rest(arglist__11289);
return G__11287__delegate(m,p__11238,f,a,b,c,args);
});
G__11287.cljs$core$IFn$_invoke$arity$variadic = G__11287__delegate;
return G__11287;
})()
;
update_in = function(m,p__11238,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__11238,f);
case 4:
return update_in__4.call(this,m,p__11238,f,a);
case 5:
return update_in__5.call(this,m,p__11238,f,a,b);
case 6:
return update_in__6.call(this,m,p__11238,f,a,b,c);
default:
var G__11290 = null;
if (arguments.length > 6) {
var G__11291__i = 0, G__11291__a = new Array(arguments.length -  6);
while (G__11291__i < G__11291__a.length) {G__11291__a[G__11291__i] = arguments[G__11291__i + 6]; ++G__11291__i;}
G__11290 = new cljs.core.IndexedSeq(G__11291__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__11238,f,a,b,c, G__11290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11302 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11302) : f.call(null,G__11302));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11303 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11304 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11303,G__11304) : f.call(null,G__11303,G__11304));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11305 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11306 = x;
var G__11307 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11305,G__11306,G__11307) : f.call(null,G__11305,G__11306,G__11307));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11308 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11309 = x;
var G__11310 = y;
var G__11311 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11308,G__11309,G__11310,G__11311) : f.call(null,G__11308,G__11309,G__11310,G__11311));
})());
});
var update__7 = (function() { 
var G__11312__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__11312 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__11313__i = 0, G__11313__a = new Array(arguments.length -  6);
while (G__11313__i < G__11313__a.length) {G__11313__a[G__11313__i] = arguments[G__11313__i + 6]; ++G__11313__i;}
  more = new cljs.core.IndexedSeq(G__11313__a,0);
} 
return G__11312__delegate.call(this,m,k,f,x,y,z,more);};
G__11312.cljs$lang$maxFixedArity = 6;
G__11312.cljs$lang$applyTo = (function (arglist__11314){
var m = cljs.core.first(arglist__11314);
arglist__11314 = cljs.core.next(arglist__11314);
var k = cljs.core.first(arglist__11314);
arglist__11314 = cljs.core.next(arglist__11314);
var f = cljs.core.first(arglist__11314);
arglist__11314 = cljs.core.next(arglist__11314);
var x = cljs.core.first(arglist__11314);
arglist__11314 = cljs.core.next(arglist__11314);
var y = cljs.core.first(arglist__11314);
arglist__11314 = cljs.core.next(arglist__11314);
var z = cljs.core.first(arglist__11314);
var more = cljs.core.rest(arglist__11314);
return G__11312__delegate(m,k,f,x,y,z,more);
});
G__11312.cljs$core$IFn$_invoke$arity$variadic = G__11312__delegate;
return G__11312;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__11315 = null;
if (arguments.length > 6) {
var G__11316__i = 0, G__11316__a = new Array(arguments.length -  6);
while (G__11316__i < G__11316__a.length) {G__11316__a[G__11316__i] = arguments[G__11316__i + 6]; ++G__11316__i;}
G__11315 = new cljs.core.IndexedSeq(G__11316__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__11315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__11317 = (ll - (5));
var G__11318 = r;
ll = G__11317;
ret = G__11318;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11323 = cljs.core.pv_aget(node,(0));
var G__11324 = (level - (5));
node = G__11323;
level = G__11324;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11325 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__11326 = (level - (5));
node = G__11325;
level = G__11326;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11336 = init__$2;
var G__11337 = (j + i);
var G__11338 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11336,G__11337,G__11338) : f.call(null,G__11336,G__11337,G__11338));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11349 = (j + (1));
var G__11350 = init__$3;
j = G__11349;
init__$2 = G__11350;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11339 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11339) : cljs.core.deref.call(null,G__11339));
} else {
var G__11351 = (i + len);
var G__11352 = init__$2;
i = G__11351;
init__$1 = G__11352;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__11340 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__11340) : cljs.core.tv_editable_root.call(null,G__11340));
})(),(function (){var G__11341 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__11341) : cljs.core.tv_editable_tail.call(null,G__11341));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11342 = init__$2;
var G__11343 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11342,G__11343) : f.call(null,G__11342,G__11343));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11353 = (j + (1));
var G__11354 = init__$3;
j = G__11353;
init__$2 = G__11354;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11344 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11344) : cljs.core.deref.call(null,G__11344));
} else {
var G__11355 = (i + len);
var G__11356 = init__$2;
i = G__11355;
init__$1 = G__11356;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__11345 = coll__$1;
var G__11346 = cljs.core.first_array_for_longvec(coll__$1);
var G__11347 = (0);
var G__11348 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11345,G__11346,G__11347,G__11348) : cljs.core.chunked_seq.call(null,G__11345,G__11346,G__11347,G__11348));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4854__auto___11357 = len;
var i_11358 = (0);
while(true){
if((i_11358 < n__4854__auto___11357)){
(new_tail[i_11358] = (self__.tail[i_11358]));

var G__11359 = (i_11358 + (1));
i_11358 = G__11359;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__11360 = null;
var G__11360__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11360__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11360 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11360__2.call(this,self__,k);
case 3:
return G__11360__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11360.cljs$core$IFn$_invoke$arity$2 = G__11360__2;
G__11360.cljs$core$IFn$_invoke$arity$3 = G__11360__3;
return G__11360;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args11335){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11335)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__11361 = (i + (1));
var G__11362 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__11361;
out = G__11362;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11363__i = 0, G__11363__a = new Array(arguments.length -  0);
while (G__11363__i < G__11363__a.length) {G__11363__a[G__11363__i] = arguments[G__11363__i + 0]; ++G__11363__i;}
  args = new cljs.core.IndexedSeq(G__11363__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__11364){
var args = cljs.core.seq(arglist__11364);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11365 = self__.vec;
var G__11366 = self__.node;
var G__11367 = self__.i;
var G__11368 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11365,G__11366,G__11367,G__11368) : cljs.core.chunked_seq.call(null,G__11365,G__11366,G__11367,G__11368));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__11369 = self__.vec;
var G__11370 = (self__.i + self__.off);
var G__11371 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11369,G__11370,G__11371) : cljs.core.subvec.call(null,G__11369,G__11370,G__11371));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__11372 = self__.vec;
var G__11373 = (self__.i + self__.off);
var G__11374 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11372,G__11373,G__11374) : cljs.core.subvec.call(null,G__11372,G__11373,G__11374));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11375 = self__.vec;
var G__11376 = self__.node;
var G__11377 = self__.i;
var G__11378 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11375,G__11376,G__11377,G__11378) : cljs.core.chunked_seq.call(null,G__11375,G__11376,G__11377,G__11378));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11379 = self__.vec;
var G__11380 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11381 = end;
var G__11382 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11379,G__11380,G__11381,G__11382) : cljs.core.chunked_seq.call(null,G__11379,G__11380,G__11381,G__11382));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__11383 = self__.vec;
var G__11384 = self__.node;
var G__11385 = self__.i;
var G__11386 = self__.off;
var G__11387 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__11383,G__11384,G__11385,G__11386,G__11387) : cljs.core.chunked_seq.call(null,G__11383,G__11384,G__11385,G__11386,G__11387));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11388 = self__.vec;
var G__11389 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11390 = end;
var G__11391 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11388,G__11389,G__11390,G__11391) : cljs.core.chunked_seq.call(null,G__11388,G__11389,G__11390,G__11391));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__11393 = self__.meta;
var G__11394 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__11395 = self__.start;
var G__11396 = (function (){var x__4284__auto__ = self__.end;
var y__4285__auto__ = (v_pos + (1));
return ((x__4284__auto__ > y__4285__auto__) ? x__4284__auto__ : y__4285__auto__);
})();
var G__11397 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11393,G__11394,G__11395,G__11396,G__11397) : cljs.core.build_subvec.call(null,G__11393,G__11394,G__11395,G__11396,G__11397));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__11398 = self__.meta;
var G__11399 = self__.v;
var G__11400 = self__.start;
var G__11401 = (self__.end - (1));
var G__11402 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11398,G__11399,G__11400,G__11401,G__11402) : cljs.core.build_subvec.call(null,G__11398,G__11399,G__11400,G__11401,G__11402));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__11404 = meta__$1;
var G__11405 = self__.v;
var G__11406 = self__.start;
var G__11407 = self__.end;
var G__11408 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11404,G__11405,G__11406,G__11407,G__11408) : cljs.core.build_subvec.call(null,G__11404,G__11405,G__11406,G__11407,G__11408));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11409 = self__.meta;
var G__11410 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__11411 = self__.start;
var G__11412 = (self__.end + (1));
var G__11413 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11409,G__11410,G__11411,G__11412,G__11413) : cljs.core.build_subvec.call(null,G__11409,G__11410,G__11411,G__11412,G__11413));
});

cljs.core.Subvec.prototype.call = (function() {
var G__11414 = null;
var G__11414__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11414__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11414 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11414__2.call(this,self__,k);
case 3:
return G__11414__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11414.cljs$core$IFn$_invoke$arity$2 = G__11414__2;
G__11414.cljs$core$IFn$_invoke$arity$3 = G__11414__3;
return G__11414;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args11392){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11392)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__11415 = meta;
var G__11416 = v.v;
var G__11417 = (v.start + start);
var G__11418 = (v.start + end);
var G__11419 = __hash;
meta = G__11415;
v = G__11416;
start = G__11417;
end = G__11418;
__hash = G__11419;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj11426 = {};
return obj11426;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__11434 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__11435 = (level - (5));
node = G__11434;
level = G__11435;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__11439 = null;
var G__11439__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11439__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11439 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11439__2.call(this,self__,k);
case 3:
return G__11439__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11439.cljs$core$IFn$_invoke$arity$2 = G__11439__2;
G__11439.cljs$core$IFn$_invoke$arity$3 = G__11439__3;
return G__11439;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args11436){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11436)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3967__auto__ = self__.front;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3967__auto__ = self__.rear;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11440 = (i + incr);
i = G__11440;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11441 = (i + (1));
var G__11442 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11441;
out = G__11442;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj11446 = {};
return obj11446;
})();
var l = ks.length;
var i_11447 = (0);
while(true){
if((i_11447 < l)){
var k_11448 = (ks[i_11447]);
(new_obj[k_11448] = (obj[k_11448]));

var G__11449 = (i_11447 + (1));
i_11447 = G__11449;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3955__auto__ = (function (){var G__11453 = k;
return goog.isString(G__11453);
})();
if(cljs.core.truth_(and__3955__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3955__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11454 = init__$1;
var G__11455 = k;
var G__11456 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11454,G__11455,G__11456) : f.call(null,G__11454,G__11455,G__11456));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11457 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11457) : cljs.core.deref.call(null,G__11457));
} else {
var G__11463 = cljs.core.rest(keys__$1);
var G__11464 = init__$2;
keys__$1 = G__11463;
init__$1 = G__11464;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3955__auto__ = (function (){var G__11459 = k;
return goog.isString(G__11459);
})();
if(cljs.core.truth_(and__3955__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3955__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11460 = k;
return goog.isString(G__11460);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3955__auto__ = (function (){var G__11462 = k;
return goog.isString(G__11462);
})();
if(cljs.core.truth_(and__3955__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3955__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11450_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11450_SHARP_,(self__.strobj[p1__11450_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11465 = null;
var G__11465__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11465__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11465 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11465__2.call(this,self__,k);
case 3:
return G__11465__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11465.cljs$core$IFn$_invoke$arity$2 = G__11465__2;
G__11465.cljs$core$IFn$_invoke$arity$3 = G__11465__3;
return G__11465;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11451){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11451)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11467 = {};
return obj11467;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11468 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11468,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11468,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11469 = (i + (2));
i = G__11469;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11470 = (i + (2));
i = G__11470;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11471 = (i + (2));
i = G__11471;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11472 = (i + (2));
i = G__11472;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11473 = (i + (2));
i = G__11473;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3967__auto__ = (function (){var G__11477 = k;
return goog.isString(G__11477);
})();
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11478 = (0);
while(true){
if((i_11478 < l)){
(narr[i_11478] = (arr[i_11478]));

var G__11479 = (i_11478 + (1));
i_11478 = G__11479;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11481 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11481) : cljs.core.keys.call(null,G__11481));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11482 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11482) : cljs.core.vals.call(null,G__11482));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11483 = cljs.core.seq(coll);
var chunk__11484 = null;
var count__11485 = (0);
var i__11486 = (0);
while(true){
if((i__11486 < count__11485)){
var vec__11487 = chunk__11484.cljs$core$IIndexed$_nth$arity$2(null,i__11486);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11487,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11487,(1),null);
var G__11488_11501 = v;
var G__11489_11502 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11488_11501,G__11489_11502) : f.call(null,G__11488_11501,G__11489_11502));

var G__11503 = seq__11483;
var G__11504 = chunk__11484;
var G__11505 = count__11485;
var G__11506 = (i__11486 + (1));
seq__11483 = G__11503;
chunk__11484 = G__11504;
count__11485 = G__11505;
i__11486 = G__11506;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__11483);
if(temp__4425__auto__){
var seq__11483__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11483__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__11483__$1);
var G__11507 = cljs.core.chunk_rest(seq__11483__$1);
var G__11508 = c__4754__auto__;
var G__11509 = cljs.core.count(c__4754__auto__);
var G__11510 = (0);
seq__11483 = G__11507;
chunk__11484 = G__11508;
count__11485 = G__11509;
i__11486 = G__11510;
continue;
} else {
var vec__11490 = cljs.core.first(seq__11483__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11490,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11490,(1),null);
var G__11491_11511 = v;
var G__11492_11512 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11491_11511,G__11492_11512) : f.call(null,G__11491_11511,G__11492_11512));

var G__11513 = cljs.core.next(seq__11483__$1);
var G__11514 = null;
var G__11515 = (0);
var G__11516 = (0);
seq__11483 = G__11513;
chunk__11484 = G__11514;
count__11485 = G__11515;
i__11486 = G__11516;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11493 = init__$1;
var G__11494 = (self__.arr[i]);
var G__11495 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11493,G__11494,G__11495) : f.call(null,G__11493,G__11494,G__11495));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11496 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11496) : cljs.core.deref.call(null,G__11496));
} else {
var G__11517 = (i + (2));
var G__11518 = init__$2;
i = G__11517;
init__$1 = G__11518;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11497 = other;
if(G__11497){
var bit__4641__auto__ = (G__11497.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4641__auto__) || (G__11497.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11519 = (i + (2));
i = G__11519;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11499 = {};
return obj11499;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11520 = (s + (2));
var G__11521 = d;
s = G__11520;
d = G__11521;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11522 = (s + (2));
var G__11523 = (d + (2));
s = G__11522;
d = G__11523;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11500 = cljs.core.aclone(self__.arr);
(G__11500[(idx + (1))] = v);

return G__11500;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11524 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11525 = cljs.core.next(es);
ret = G__11524;
es = G__11525;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11526 = null;
var G__11526__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11526__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11526 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11526__2.call(this,self__,k);
case 3:
return G__11526__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11526.cljs$core$IFn$_invoke$arity$2 = G__11526__2;
G__11526.cljs$core$IFn$_invoke$arity$3 = G__11526__3;
return G__11526;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11480){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11480)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11527 = (i + (2));
var G__11528 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11527;
ret = G__11528;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11529 = o;
if(G__11529){
var bit__4648__auto__ = (G__11529.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4648__auto__) || (G__11529.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11529);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11530 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11530) : cljs.core.key.call(null,G__11530));
})(),(function (){var G__11531 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11531) : cljs.core.val.call(null,G__11531));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__11537 = cljs.core.next(es);
var G__11538 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11532 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11532) : cljs.core.key.call(null,G__11532));
})(),(function (){var G__11533 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11533) : cljs.core.val.call(null,G__11533));
})());
es = G__11537;
tcoll__$2 = G__11538;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11534 = self__.len;
var G__11535 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11534,G__11535) : cljs.core.array__GT_transient_hash_map.call(null,G__11534,G__11535));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11536_11539 = self__.arr;
G__11536_11539.pop();

G__11536_11539.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11540 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11541 = (i + (2));
out = G__11540;
i = G__11541;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__11544 = cljs.core.aclone(arr);
(G__11544[i] = a);

return G__11544;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__11545 = cljs.core.aclone(arr);
(G__11545[i] = a);

(G__11545[j] = b);

return G__11545;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11550 = init__$1;
var G__11551 = k;
var G__11552 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11550,G__11551,G__11552) : f.call(null,G__11550,G__11551,G__11552));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11553 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11553) : cljs.core.deref.call(null,G__11553));
} else {
var G__11554 = (i + (2));
var G__11555 = init__$2;
i = G__11554;
init__$1 = G__11555;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11556 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11556) : cljs.core.create_inode_seq.call(null,G__11556));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11570 = (0);
var j_11571 = (0);
while(true){
if((i_11570 < (32))){
if((((self__.bitmap >>> i_11570) & (1)) === (0))){
var G__11572 = (i_11570 + (1));
var G__11573 = j_11571;
i_11570 = G__11572;
j_11571 = G__11573;
continue;
} else {
(nodes[i_11570] = ((!(((self__.arr[j_11571]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11571])),(self__.arr[j_11571]),(self__.arr[(j_11571 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11571 + (1))])));

var G__11574 = (i_11570 + (1));
var G__11575 = (j_11571 + (2));
i_11570 = G__11574;
j_11571 = G__11575;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11557 = edit__$1;
var G__11558 = (shift + (5));
var G__11559 = key_or_nil;
var G__11560 = val_or_node;
var G__11561 = hash;
var G__11562 = key;
var G__11563 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563) : cljs.core.create_node.call(null,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11576 = (0);
var j_11577 = (0);
while(true){
if((i_11576 < (32))){
if((((self__.bitmap >>> i_11576) & (1)) === (0))){
var G__11578 = (i_11576 + (1));
var G__11579 = j_11577;
i_11576 = G__11578;
j_11577 = G__11579;
continue;
} else {
(nodes[i_11576] = ((!(((self__.arr[j_11577]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11577])),(self__.arr[j_11577]),(self__.arr[(j_11577 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11577 + (1))])));

var G__11580 = (i_11576 + (1));
var G__11581 = (j_11577 + (2));
i_11576 = G__11580;
j_11577 = G__11581;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11564 = (shift + (5));
var G__11565 = key_or_nil;
var G__11566 = val_or_node;
var G__11567 = hash;
var G__11568 = key;
var G__11569 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11564,G__11565,G__11566,G__11567,G__11568,G__11569) : cljs.core.create_node.call(null,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11582 = (i + (1));
var G__11583 = (j + (2));
var G__11584 = (bitmap | ((1) << i));
i = G__11582;
j = G__11583;
bitmap = G__11584;
continue;
} else {
var G__11585 = (i + (1));
var G__11586 = j;
var G__11587 = bitmap;
i = G__11585;
j = G__11586;
bitmap = G__11587;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11588 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11588) : cljs.core.create_array_node_seq.call(null,G__11588));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11589 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11589) : cljs.core.deref.call(null,G__11589));
} else {
var G__11590 = (i + (1));
var G__11591 = init__$2;
i = G__11590;
init__$1 = G__11591;
continue;
}
} else {
var G__11592 = (i + (1));
var G__11593 = init__$1;
i = G__11592;
init__$1 = G__11593;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11594 = (i + (2));
i = G__11594;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11595 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11595) : cljs.core.create_inode_seq.call(null,G__11595));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11596 = self__.nodes;
var G__11597 = (self__.i + (2));
var G__11598 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11596,G__11597,G__11598) : cljs.core.create_inode_seq.call(null,G__11596,G__11597,G__11598));
} else {
var G__11599 = self__.nodes;
var G__11600 = self__.i;
var G__11601 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11599,G__11600,G__11601) : cljs.core.create_inode_seq.call(null,G__11599,G__11600,G__11601));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4423__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4423__auto__)){
var node = temp__4423__auto__;
var temp__4423__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var node_seq = temp__4423__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11605 = (j + (2));
j = G__11605;
continue;
}
} else {
var G__11606 = (j + (2));
j = G__11606;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11607 = null;
var G__11608 = self__.nodes;
var G__11609 = self__.i;
var G__11610 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11607,G__11608,G__11609,G__11610) : cljs.core.create_array_node_seq.call(null,G__11607,G__11608,G__11609,G__11610));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4423__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4423__auto__)){
var nj = temp__4423__auto__;
var temp__4423__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var ns = temp__4423__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11615 = (j + (1));
j = G__11615;
continue;
}
} else {
var G__11616 = (j + (1));
j = G__11616;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11618 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11618) : cljs.core.keys.call(null,G__11618));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11619 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11619) : cljs.core.vals.call(null,G__11619));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11620 = cljs.core.seq(coll);
var chunk__11621 = null;
var count__11622 = (0);
var i__11623 = (0);
while(true){
if((i__11623 < count__11622)){
var vec__11624 = chunk__11621.cljs$core$IIndexed$_nth$arity$2(null,i__11623);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11624,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11624,(1),null);
var G__11625_11636 = v;
var G__11626_11637 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11625_11636,G__11626_11637) : f.call(null,G__11625_11636,G__11626_11637));

var G__11638 = seq__11620;
var G__11639 = chunk__11621;
var G__11640 = count__11622;
var G__11641 = (i__11623 + (1));
seq__11620 = G__11638;
chunk__11621 = G__11639;
count__11622 = G__11640;
i__11623 = G__11641;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__11620);
if(temp__4425__auto__){
var seq__11620__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11620__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__11620__$1);
var G__11642 = cljs.core.chunk_rest(seq__11620__$1);
var G__11643 = c__4754__auto__;
var G__11644 = cljs.core.count(c__4754__auto__);
var G__11645 = (0);
seq__11620 = G__11642;
chunk__11621 = G__11643;
count__11622 = G__11644;
i__11623 = G__11645;
continue;
} else {
var vec__11627 = cljs.core.first(seq__11620__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11627,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11627,(1),null);
var G__11628_11646 = v;
var G__11629_11647 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11628_11646,G__11629_11647) : f.call(null,G__11628_11646,G__11629_11647));

var G__11648 = cljs.core.next(seq__11620__$1);
var G__11649 = null;
var G__11650 = (0);
var G__11651 = (0);
seq__11620 = G__11648;
chunk__11621 = G__11649;
count__11622 = G__11650;
i__11623 = G__11651;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11630 = init;
var G__11631 = null;
var G__11632 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11630,G__11631,G__11632) : f.call(null,G__11630,G__11631,G__11632));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11633 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11633) : cljs.core.deref.call(null,G__11633));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11635 = {};
return obj11635;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11652 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11653 = cljs.core.next(es);
ret = G__11652;
es = G__11653;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11654 = null;
var G__11654__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11654__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11654 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11654__2.call(this,self__,k);
case 3:
return G__11654__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11654.cljs$core$IFn$_invoke$arity$2 = G__11654__2;
G__11654.cljs$core$IFn$_invoke$arity$3 = G__11654__3;
return G__11654;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11617){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11617)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11655 = (i + (2));
var G__11656 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11655;
ret = G__11656;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11657 = (i + (1));
var G__11658 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11657;
out = G__11658;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11659 = o;
if(G__11659){
var bit__4648__auto__ = (G__11659.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4648__auto__) || (G__11659.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11659.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11659);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11659);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11660 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11660) : cljs.core.key.call(null,G__11660));
})(),(function (){var G__11661 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11661) : cljs.core.val.call(null,G__11661));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__11664 = cljs.core.next(es);
var G__11665 = tcoll__$1.assoc_BANG_((function (){var G__11662 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11662) : cljs.core.key.call(null,G__11662));
})(),(function (){var G__11663 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11663) : cljs.core.val.call(null,G__11663));
})());
es = G__11664;
tcoll__$1 = G__11665;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11666 = ((ascending_QMARK_)?t.left:t.right);
var G__11667 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11666;
stack__$1 = G__11667;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11680 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11680) : cljs.core.deref.call(null,G__11680));
} else {
var init__$2 = (function (){var G__11681 = init__$1;
var G__11682 = node.key;
var G__11683 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11681,G__11682,G__11683) : f.call(null,G__11681,G__11682,G__11683));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11684 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11684) : cljs.core.deref.call(null,G__11684));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11685 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11685) : cljs.core.deref.call(null,G__11685));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11687 = null;
var G__11687__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11687__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11687 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11687__2.call(this,self__,k);
case 3:
return G__11687__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11687.cljs$core$IFn$_invoke$arity$2 = G__11687__2;
G__11687.cljs$core$IFn$_invoke$arity$3 = G__11687__3;
return G__11687;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11686){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11686)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11689 = null;
var G__11689__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11689__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11689 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11689__2.call(this,self__,k);
case 3:
return G__11689__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11689.cljs$core$IFn$_invoke$arity$2 = G__11689__2;
G__11689.cljs$core$IFn$_invoke$arity$3 = G__11689__3;
return G__11689;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11688){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11688)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11702 = k;
var G__11703 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11702,G__11703) : comp.call(null,G__11702,G__11703));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11722 = k;
var G__11723 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11722,G__11723) : comp.call(null,G__11722,G__11723));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11734 = k;
var G__11735 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11734,G__11735) : comp.call(null,G__11734,G__11735));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11737 = cljs.core.seq(coll);
var chunk__11738 = null;
var count__11739 = (0);
var i__11740 = (0);
while(true){
if((i__11740 < count__11739)){
var vec__11741 = chunk__11738.cljs$core$IIndexed$_nth$arity$2(null,i__11740);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11741,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11741,(1),null);
var G__11742_11754 = v;
var G__11743_11755 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11742_11754,G__11743_11755) : f.call(null,G__11742_11754,G__11743_11755));

var G__11756 = seq__11737;
var G__11757 = chunk__11738;
var G__11758 = count__11739;
var G__11759 = (i__11740 + (1));
seq__11737 = G__11756;
chunk__11738 = G__11757;
count__11739 = G__11758;
i__11740 = G__11759;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__11737);
if(temp__4425__auto__){
var seq__11737__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11737__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__11737__$1);
var G__11760 = cljs.core.chunk_rest(seq__11737__$1);
var G__11761 = c__4754__auto__;
var G__11762 = cljs.core.count(c__4754__auto__);
var G__11763 = (0);
seq__11737 = G__11760;
chunk__11738 = G__11761;
count__11739 = G__11762;
i__11740 = G__11763;
continue;
} else {
var vec__11744 = cljs.core.first(seq__11737__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11744,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11744,(1),null);
var G__11745_11764 = v;
var G__11746_11765 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11745_11764,G__11746_11765) : f.call(null,G__11745_11764,G__11746_11765));

var G__11766 = cljs.core.next(seq__11737__$1);
var G__11767 = null;
var G__11768 = (0);
var G__11769 = (0);
seq__11737 = G__11766;
chunk__11738 = G__11767;
count__11739 = G__11768;
i__11740 = G__11769;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11747 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11747) : cljs.core.keys.call(null,G__11747));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11748 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11748) : cljs.core.vals.call(null,G__11748));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11749 = k;
var G__11750 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11749,G__11750) : self__.comp.call(null,G__11749,G__11750));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11770 = t.left;
t = G__11770;
continue;
} else {
var G__11771 = t.right;
t = G__11771;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11772 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11773 = cljs.core.next(es);
ret = G__11772;
es = G__11773;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11774 = null;
var G__11774__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11774__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11774 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11774__2.call(this,self__,k);
case 3:
return G__11774__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11774.cljs$core$IFn$_invoke$arity$2 = G__11774__2;
G__11774.cljs$core$IFn$_invoke$arity$3 = G__11774__3;
return G__11774;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11736)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11751 = k;
var G__11752 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11751,G__11752) : self__.comp.call(null,G__11751,G__11752));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11775 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11776 = t.left;
stack = G__11775;
t = G__11776;
continue;
} else {
var G__11777 = stack;
var G__11778 = t.right;
stack = G__11777;
t = G__11778;
continue;
}
} else {
if((c > (0))){
var G__11779 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11780 = t.right;
stack = G__11779;
t = G__11780;
continue;
} else {
var G__11781 = stack;
var G__11782 = t.left;
stack = G__11781;
t = G__11782;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11753 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11753) : cljs.core.key.call(null,G__11753));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11783 = cljs.core.nnext(in$);
var G__11784 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11783;
out = G__11784;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11785__i = 0, G__11785__a = new Array(arguments.length -  0);
while (G__11785__i < G__11785__a.length) {G__11785__a[G__11785__i] = arguments[G__11785__i + 0]; ++G__11785__i;}
  keyvals = new cljs.core.IndexedSeq(G__11785__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11786){
var keyvals = cljs.core.seq(arglist__11786);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11787__i = 0, G__11787__a = new Array(arguments.length -  0);
while (G__11787__i < G__11787__a.length) {G__11787__a[G__11787__i] = arguments[G__11787__i + 0]; ++G__11787__i;}
  keyvals = new cljs.core.IndexedSeq(G__11787__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11788){
var keyvals = cljs.core.seq(arglist__11788);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11792 = {};
return obj11792;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11793 = cljs.core.nnext(kvs);
kvs = G__11793;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11794__i = 0, G__11794__a = new Array(arguments.length -  0);
while (G__11794__i < G__11794__a.length) {G__11794__a[G__11794__i] = arguments[G__11794__i + 0]; ++G__11794__i;}
  keyvals = new cljs.core.IndexedSeq(G__11794__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11795){
var keyvals = cljs.core.seq(arglist__11795);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11796 = cljs.core.nnext(in$);
var G__11797 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11796;
out = G__11797;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11798__i = 0, G__11798__a = new Array(arguments.length -  0);
while (G__11798__i < G__11798__a.length) {G__11798__a[G__11798__i] = arguments[G__11798__i + 0]; ++G__11798__i;}
  keyvals = new cljs.core.IndexedSeq(G__11798__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11799){
var keyvals = cljs.core.seq(arglist__11799);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11800 = cljs.core.nnext(in$);
var G__11801 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11800;
out = G__11801;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11802__i = 0, G__11802__a = new Array(arguments.length -  1);
while (G__11802__i < G__11802__a.length) {G__11802__a[G__11802__i] = arguments[G__11802__i + 1]; ++G__11802__i;}
  keyvals = new cljs.core.IndexedSeq(G__11802__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11803){
var comparator = cljs.core.first(arglist__11803);
var keyvals = cljs.core.rest(arglist__11803);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11804 = self__.mseq;
if(G__11804){
var bit__4648__auto__ = (G__11804.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4648__auto__) || (G__11804.cljs$core$INext$)){
return true;
} else {
if((!G__11804.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11804);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11805 = self__.mseq;
if(G__11805){
var bit__4648__auto__ = (G__11805.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4648__auto__) || (G__11805.cljs$core$INext$)){
return true;
} else {
if((!G__11805.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11805);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11805);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function keys(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11806 = self__.mseq;
if(G__11806){
var bit__4648__auto__ = (G__11806.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4648__auto__) || (G__11806.cljs$core$INext$)){
return true;
} else {
if((!G__11806.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11806);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11806);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11807 = self__.mseq;
if(G__11807){
var bit__4648__auto__ = (G__11807.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4648__auto__) || (G__11807.cljs$core$INext$)){
return true;
} else {
if((!G__11807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11807);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function vals(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11808_SHARP_,p2__11809_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3967__auto__ = p1__11808_SHARP_;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11809_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11810__i = 0, G__11810__a = new Array(arguments.length -  0);
while (G__11810__i < G__11810__a.length) {G__11810__a[G__11810__i] = arguments[G__11810__i + 0]; ++G__11810__i;}
  maps = new cljs.core.IndexedSeq(G__11810__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11811){
var maps = cljs.core.seq(arglist__11811);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11814 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11815 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11814,G__11815) : f.call(null,G__11814,G__11815));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3967__auto__ = m1;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11816__i = 0, G__11816__a = new Array(arguments.length -  1);
while (G__11816__i < G__11816__a.length) {G__11816__a[G__11816__i] = arguments[G__11816__i + 1]; ++G__11816__i;}
  maps = new cljs.core.IndexedSeq(G__11816__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11817){
var f = cljs.core.first(arglist__11817);
var maps = cljs.core.rest(arglist__11817);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11818 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11819 = cljs.core.next(keys);
ret = G__11818;
keys = G__11819;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11822 = cljs.core.seq(coll);
var chunk__11823 = null;
var count__11824 = (0);
var i__11825 = (0);
while(true){
if((i__11825 < count__11824)){
var vec__11826 = chunk__11823.cljs$core$IIndexed$_nth$arity$2(null,i__11825);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11826,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11826,(1),null);
var G__11827_11832 = v;
var G__11828_11833 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11827_11832,G__11828_11833) : f.call(null,G__11827_11832,G__11828_11833));

var G__11834 = seq__11822;
var G__11835 = chunk__11823;
var G__11836 = count__11824;
var G__11837 = (i__11825 + (1));
seq__11822 = G__11834;
chunk__11823 = G__11835;
count__11824 = G__11836;
i__11825 = G__11837;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__11822);
if(temp__4425__auto__){
var seq__11822__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11822__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__11822__$1);
var G__11838 = cljs.core.chunk_rest(seq__11822__$1);
var G__11839 = c__4754__auto__;
var G__11840 = cljs.core.count(c__4754__auto__);
var G__11841 = (0);
seq__11822 = G__11838;
chunk__11823 = G__11839;
count__11824 = G__11840;
i__11825 = G__11841;
continue;
} else {
var vec__11829 = cljs.core.first(seq__11822__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11829,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11829,(1),null);
var G__11830_11842 = v;
var G__11831_11843 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11830_11842,G__11831_11843) : f.call(null,G__11830_11842,G__11831_11843));

var G__11844 = cljs.core.next(seq__11822__$1);
var G__11845 = null;
var G__11846 = (0);
var G__11847 = (0);
seq__11822 = G__11844;
chunk__11823 = G__11845;
count__11824 = G__11846;
i__11825 = G__11847;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11820_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11820_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11848 = null;
var G__11848__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11848__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11848 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11848__2.call(this,self__,k);
case 3:
return G__11848__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11848.cljs$core$IFn$_invoke$arity$2 = G__11848__2;
G__11848.cljs$core$IFn$_invoke$arity$3 = G__11848__3;
return G__11848;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11821){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11821)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11849 = (i + (1));
var G__11850 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11849;
out = G__11850;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11851 = (i + (1));
var G__11852 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11851;
out = G__11852;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__11854 = null;
var G__11854__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11854__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11854 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11854__2.call(this,self__,k);
case 3:
return G__11854__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11854.cljs$core$IFn$_invoke$arity$2 = G__11854__2;
G__11854.cljs$core$IFn$_invoke$arity$3 = G__11854__3;
return G__11854;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11853){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11853)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11857 = cljs.core.seq(coll);
var chunk__11858 = null;
var count__11859 = (0);
var i__11860 = (0);
while(true){
if((i__11860 < count__11859)){
var vec__11861 = chunk__11858.cljs$core$IIndexed$_nth$arity$2(null,i__11860);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11861,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11861,(1),null);
var G__11862_11867 = v;
var G__11863_11868 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11862_11867,G__11863_11868) : f.call(null,G__11862_11867,G__11863_11868));

var G__11869 = seq__11857;
var G__11870 = chunk__11858;
var G__11871 = count__11859;
var G__11872 = (i__11860 + (1));
seq__11857 = G__11869;
chunk__11858 = G__11870;
count__11859 = G__11871;
i__11860 = G__11872;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__11857);
if(temp__4425__auto__){
var seq__11857__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11857__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__11857__$1);
var G__11873 = cljs.core.chunk_rest(seq__11857__$1);
var G__11874 = c__4754__auto__;
var G__11875 = cljs.core.count(c__4754__auto__);
var G__11876 = (0);
seq__11857 = G__11873;
chunk__11858 = G__11874;
count__11859 = G__11875;
i__11860 = G__11876;
continue;
} else {
var vec__11864 = cljs.core.first(seq__11857__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11864,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11864,(1),null);
var G__11865_11877 = v;
var G__11866_11878 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11865_11877,G__11866_11878) : f.call(null,G__11865_11877,G__11866_11878));

var G__11879 = cljs.core.next(seq__11857__$1);
var G__11880 = null;
var G__11881 = (0);
var G__11882 = (0);
seq__11857 = G__11879;
chunk__11858 = G__11880;
count__11859 = G__11881;
i__11860 = G__11882;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11855_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11855_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11883 = null;
var G__11883__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11883__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11883 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11883__2.call(this,self__,k);
case 3:
return G__11883__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11883.cljs$core$IFn$_invoke$arity$2 = G__11883__2;
G__11883.cljs$core$IFn$_invoke$arity$3 = G__11883__3;
return G__11883;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11856){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11856)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4848__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4848__auto__.length)){
var G__11884 = (i + (1));
var G__11885 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11884;
res = G__11885;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11886 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11887 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11886;
out = G__11887;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11888__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11888 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11889__i = 0, G__11889__a = new Array(arguments.length -  0);
while (G__11889__i < G__11889__a.length) {G__11889__a[G__11889__i] = arguments[G__11889__i + 0]; ++G__11889__i;}
  keys = new cljs.core.IndexedSeq(G__11889__a,0);
} 
return G__11888__delegate.call(this,keys);};
G__11888.cljs$lang$maxFixedArity = 0;
G__11888.cljs$lang$applyTo = (function (arglist__11890){
var keys = cljs.core.seq(arglist__11890);
return G__11888__delegate(keys);
});
G__11888.cljs$core$IFn$_invoke$arity$variadic = G__11888__delegate;
return G__11888;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11891 = null;
if (arguments.length > 0) {
var G__11892__i = 0, G__11892__a = new Array(arguments.length -  0);
while (G__11892__i < G__11892__a.length) {G__11892__a[G__11892__i] = arguments[G__11892__i + 0]; ++G__11892__i;}
G__11891 = new cljs.core.IndexedSeq(G__11892__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11893__i = 0, G__11893__a = new Array(arguments.length -  0);
while (G__11893__i < G__11893__a.length) {G__11893__a[G__11893__i] = arguments[G__11893__i + 0]; ++G__11893__i;}
  keys = new cljs.core.IndexedSeq(G__11893__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11894){
var keys = cljs.core.seq(arglist__11894);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11895__i = 0, G__11895__a = new Array(arguments.length -  1);
while (G__11895__i < G__11895__a.length) {G__11895__a[G__11895__i] = arguments[G__11895__i + 1]; ++G__11895__i;}
  keys = new cljs.core.IndexedSeq(G__11895__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11896){
var comparator = cljs.core.first(arglist__11896);
var keys = cljs.core.rest(arglist__11896);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11897_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__11897_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.val(e);
} else {
return p1__11897_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4423__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11898_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__11898_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.second(e);
} else {
return p1__11898_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11919 = null;
var G__11919__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11919__1 = (function (result){
var G__11909 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11909) : rf.call(null,G__11909));
});
var G__11919__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11910 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11910) : cljs.core.deref.call(null,G__11910));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11911 = result;
var G__11912 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11911,G__11912) : rf.call(null,G__11911,G__11912));
}
});
G__11919 = function(result,input){
switch(arguments.length){
case 0:
return G__11919__0.call(this);
case 1:
return G__11919__1.call(this,result);
case 2:
return G__11919__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11919.cljs$core$IFn$_invoke$arity$0 = G__11919__0;
G__11919.cljs$core$IFn$_invoke$arity$1 = G__11919__1;
G__11919.cljs$core$IFn$_invoke$arity$2 = G__11919__2;
return G__11919;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11917,seen__$1){
while(true){
var vec__11918 = p__11917;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11918,(0),null);
var xs__$1 = vec__11918;
var temp__4425__auto__ = cljs.core.seq(xs__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11920 = cljs.core.rest(s);
var G__11921 = seen__$1;
p__11917 = G__11920;
seen__$1 = G__11921;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11922 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11923 = cljs.core.next(s__$1);
ret = G__11922;
s__$1 = G__11923;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function name(x){
if((function (){var G__11925 = x;
if(G__11925){
var bit__4641__auto__ = (G__11925.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4641__auto__) || (G__11925.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11926 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11927 = cljs.core.next(ks);
var G__11928 = cljs.core.next(vs);
map = G__11926;
ks = G__11927;
vs = G__11928;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11939 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11939) : k.call(null,G__11939));
})() > (function (){var G__11940 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11940) : k.call(null,G__11940));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11941__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11929_SHARP_,p2__11930_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11929_SHARP_,p2__11930_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11941 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11942__i = 0, G__11942__a = new Array(arguments.length -  3);
while (G__11942__i < G__11942__a.length) {G__11942__a[G__11942__i] = arguments[G__11942__i + 3]; ++G__11942__i;}
  more = new cljs.core.IndexedSeq(G__11942__a,0);
} 
return G__11941__delegate.call(this,k,x,y,more);};
G__11941.cljs$lang$maxFixedArity = 3;
G__11941.cljs$lang$applyTo = (function (arglist__11943){
var k = cljs.core.first(arglist__11943);
arglist__11943 = cljs.core.next(arglist__11943);
var x = cljs.core.first(arglist__11943);
arglist__11943 = cljs.core.next(arglist__11943);
var y = cljs.core.first(arglist__11943);
var more = cljs.core.rest(arglist__11943);
return G__11941__delegate(k,x,y,more);
});
G__11941.cljs$core$IFn$_invoke$arity$variadic = G__11941__delegate;
return G__11941;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11944 = null;
if (arguments.length > 3) {
var G__11945__i = 0, G__11945__a = new Array(arguments.length -  3);
while (G__11945__i < G__11945__a.length) {G__11945__a[G__11945__i] = arguments[G__11945__i + 3]; ++G__11945__i;}
G__11944 = new cljs.core.IndexedSeq(G__11945__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__11956 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11956) : k.call(null,G__11956));
})() < (function (){var G__11957 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11957) : k.call(null,G__11957));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__11958__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11946_SHARP_,p2__11947_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11946_SHARP_,p2__11947_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11958 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11959__i = 0, G__11959__a = new Array(arguments.length -  3);
while (G__11959__i < G__11959__a.length) {G__11959__a[G__11959__i] = arguments[G__11959__i + 3]; ++G__11959__i;}
  more = new cljs.core.IndexedSeq(G__11959__a,0);
} 
return G__11958__delegate.call(this,k,x,y,more);};
G__11958.cljs$lang$maxFixedArity = 3;
G__11958.cljs$lang$applyTo = (function (arglist__11960){
var k = cljs.core.first(arglist__11960);
arglist__11960 = cljs.core.next(arglist__11960);
var x = cljs.core.first(arglist__11960);
arglist__11960 = cljs.core.next(arglist__11960);
var y = cljs.core.first(arglist__11960);
var more = cljs.core.rest(arglist__11960);
return G__11958__delegate(k,x,y,more);
});
G__11958.cljs$core$IFn$_invoke$arity$variadic = G__11958__delegate;
return G__11958;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__11961 = null;
if (arguments.length > 3) {
var G__11962__i = 0, G__11962__a = new Array(arguments.length -  3);
while (G__11962__i < G__11962__a.length) {G__11962__a[G__11962__i] = arguments[G__11962__i + 3]; ++G__11962__i;}
G__11961 = new cljs.core.IndexedSeq(G__11962__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11979 = null;
var G__11979__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11979__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11974 = result;
var G__11975 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11974,G__11975) : rf.call(null,G__11974,G__11975));
})());
})());
var G__11976 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11976) : rf.call(null,G__11976));
});
var G__11979__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11977 = result;
var G__11978 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11977,G__11978) : rf.call(null,G__11977,G__11978));
} else {
return result;
}
});
G__11979 = function(result,input){
switch(arguments.length){
case 0:
return G__11979__0.call(this);
case 1:
return G__11979__1.call(this,result);
case 2:
return G__11979__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11979.cljs$core$IFn$_invoke$arity$0 = G__11979__0;
G__11979.cljs$core$IFn$_invoke$arity$1 = G__11979__1;
G__11979.cljs$core$IFn$_invoke$arity$2 = G__11979__2;
return G__11979;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11992 = null;
var G__11992__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11992__1 = (function (result){
var G__11987 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11987) : rf.call(null,G__11987));
});
var G__11992__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11988 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11988) : pred.call(null,G__11988));
})())){
var G__11989 = result;
var G__11990 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11989,G__11990) : rf.call(null,G__11989,G__11990));
} else {
return cljs.core.reduced(result);
}
});
G__11992 = function(result,input){
switch(arguments.length){
case 0:
return G__11992__0.call(this);
case 1:
return G__11992__1.call(this,result);
case 2:
return G__11992__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11992.cljs$core$IFn$_invoke$arity$0 = G__11992__0;
G__11992.cljs$core$IFn$_invoke$arity$1 = G__11992__1;
G__11992.cljs$core$IFn$_invoke$arity$2 = G__11992__2;
return G__11992;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.truth_((function (){var G__11991 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11991) : pred.call(null,G__11991));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11997 = (function (){var G__11999 = cljs.core._entry_key(sc,e);
var G__12000 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11999,G__12000) : comp.call(null,G__11999,G__12000));
})();
var G__11998 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11997,G__11998) : test.call(null,G__11997,G__11998));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__12004 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12004,(0),null);
var s = vec__12004;
if(cljs.core.truth_((function (){var G__12005 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12005) : include.call(null,G__12005));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__12006 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12006,(0),null);
var s = vec__12006;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__12010 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12010,(0),null);
var s = vec__12010;
if(cljs.core.truth_((function (){var G__12011 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12011) : include.call(null,G__12011));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__12012 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12012,(0),null);
var s = vec__12012;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__12013 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12013) : Math.ceil.call(null,G__12013));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4388__auto__ = self__.__hash;
if(!((h__4388__auto__ == null))){
return h__4388__auto__;
} else {
var h__4388__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4388__auto____$1;

return h__4388__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__12014 = ret;
var G__12015 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12014,G__12015) : f.call(null,G__12014,G__12015));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__12016 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12016) : cljs.core.deref.call(null,G__12016));
} else {
var G__12017 = (i + self__.step);
var G__12018 = ret__$1;
i = G__12017;
ret = G__12018;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12036 = null;
var G__12036__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12036__1 = (function (result){
var G__12033 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12033) : rf.call(null,G__12033));
});
var G__12036__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__12034 = result;
var G__12035 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12034,G__12035) : rf.call(null,G__12034,G__12035));
} else {
return result;
}
});
G__12036 = function(result,input){
switch(arguments.length){
case 0:
return G__12036__0.call(this);
case 1:
return G__12036__1.call(this,result);
case 2:
return G__12036__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12036.cljs$core$IFn$_invoke$arity$0 = G__12036__0;
G__12036.cljs$core$IFn$_invoke$arity$1 = G__12036__1;
G__12036.cljs$core$IFn$_invoke$arity$2 = G__12036__2;
return G__12036;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__12058 = null;
var G__12058__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12058__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__12049 = result;
var G__12050 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12049,G__12050) : rf.call(null,G__12049,G__12050));
})());
})());
var G__12051 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12051) : rf.call(null,G__12051));
});
var G__12058__2 = (function (result,input){
var pval = (function (){var G__12052 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12052) : cljs.core.deref.call(null,G__12052));
})();
var val = (function (){var G__12053 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12053) : f.call(null,G__12053));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__12054 = result;
var G__12055 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12054,G__12055) : rf.call(null,G__12054,G__12055));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__12058 = function(result,input){
switch(arguments.length){
case 0:
return G__12058__0.call(this);
case 1:
return G__12058__1.call(this,result);
case 2:
return G__12058__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12058.cljs$core$IFn$_invoke$arity$0 = G__12058__0;
G__12058.cljs$core$IFn$_invoke$arity$1 = G__12058__1;
G__12058.cljs$core$IFn$_invoke$arity$2 = G__12058__2;
return G__12058;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__12056 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12056) : f.call(null,G__12056));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4425__auto__){
return (function (p1__12037_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__12057 = p1__12037_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12057) : f.call(null,G__12057));
})());
});})(fst,fv,s,temp__4425__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__12067 = init;
var G__12068 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12067,G__12068) : f.call(null,G__12067,G__12068));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__12163 = null;
var G__12163__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__12163__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12121 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12121) : f.call(null,G__12121));
})()],null));
});
var G__12163__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12122 = x;
var G__12123 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12122,G__12123) : f.call(null,G__12122,G__12123));
})()],null));
});
var G__12163__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12124 = x;
var G__12125 = y;
var G__12126 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12124,G__12125,G__12126) : f.call(null,G__12124,G__12125,G__12126));
})()],null));
});
var G__12163__4 = (function() { 
var G__12164__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__12164 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12165__i = 0, G__12165__a = new Array(arguments.length -  3);
while (G__12165__i < G__12165__a.length) {G__12165__a[G__12165__i] = arguments[G__12165__i + 3]; ++G__12165__i;}
  args = new cljs.core.IndexedSeq(G__12165__a,0);
} 
return G__12164__delegate.call(this,x,y,z,args);};
G__12164.cljs$lang$maxFixedArity = 3;
G__12164.cljs$lang$applyTo = (function (arglist__12166){
var x = cljs.core.first(arglist__12166);
arglist__12166 = cljs.core.next(arglist__12166);
var y = cljs.core.first(arglist__12166);
arglist__12166 = cljs.core.next(arglist__12166);
var z = cljs.core.first(arglist__12166);
var args = cljs.core.rest(arglist__12166);
return G__12164__delegate(x,y,z,args);
});
G__12164.cljs$core$IFn$_invoke$arity$variadic = G__12164__delegate;
return G__12164;
})()
;
G__12163 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12163__0.call(this);
case 1:
return G__12163__1.call(this,x);
case 2:
return G__12163__2.call(this,x,y);
case 3:
return G__12163__3.call(this,x,y,z);
default:
var G__12167 = null;
if (arguments.length > 3) {
var G__12168__i = 0, G__12168__a = new Array(arguments.length -  3);
while (G__12168__i < G__12168__a.length) {G__12168__a[G__12168__i] = arguments[G__12168__i + 3]; ++G__12168__i;}
G__12167 = new cljs.core.IndexedSeq(G__12168__a,0);
}
return G__12163__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12163.cljs$lang$maxFixedArity = 3;
G__12163.cljs$lang$applyTo = G__12163__4.cljs$lang$applyTo;
G__12163.cljs$core$IFn$_invoke$arity$0 = G__12163__0;
G__12163.cljs$core$IFn$_invoke$arity$1 = G__12163__1;
G__12163.cljs$core$IFn$_invoke$arity$2 = G__12163__2;
G__12163.cljs$core$IFn$_invoke$arity$3 = G__12163__3;
G__12163.cljs$core$IFn$_invoke$arity$variadic = G__12163__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12163;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__12169 = null;
var G__12169__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__12169__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12127 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12127) : f.call(null,G__12127));
})(),(function (){var G__12128 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12128) : g.call(null,G__12128));
})()],null));
});
var G__12169__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12129 = x;
var G__12130 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12129,G__12130) : f.call(null,G__12129,G__12130));
})(),(function (){var G__12131 = x;
var G__12132 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12131,G__12132) : g.call(null,G__12131,G__12132));
})()],null));
});
var G__12169__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12133 = x;
var G__12134 = y;
var G__12135 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12133,G__12134,G__12135) : f.call(null,G__12133,G__12134,G__12135));
})(),(function (){var G__12136 = x;
var G__12137 = y;
var G__12138 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12136,G__12137,G__12138) : g.call(null,G__12136,G__12137,G__12138));
})()],null));
});
var G__12169__4 = (function() { 
var G__12170__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__12170 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12171__i = 0, G__12171__a = new Array(arguments.length -  3);
while (G__12171__i < G__12171__a.length) {G__12171__a[G__12171__i] = arguments[G__12171__i + 3]; ++G__12171__i;}
  args = new cljs.core.IndexedSeq(G__12171__a,0);
} 
return G__12170__delegate.call(this,x,y,z,args);};
G__12170.cljs$lang$maxFixedArity = 3;
G__12170.cljs$lang$applyTo = (function (arglist__12172){
var x = cljs.core.first(arglist__12172);
arglist__12172 = cljs.core.next(arglist__12172);
var y = cljs.core.first(arglist__12172);
arglist__12172 = cljs.core.next(arglist__12172);
var z = cljs.core.first(arglist__12172);
var args = cljs.core.rest(arglist__12172);
return G__12170__delegate(x,y,z,args);
});
G__12170.cljs$core$IFn$_invoke$arity$variadic = G__12170__delegate;
return G__12170;
})()
;
G__12169 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12169__0.call(this);
case 1:
return G__12169__1.call(this,x);
case 2:
return G__12169__2.call(this,x,y);
case 3:
return G__12169__3.call(this,x,y,z);
default:
var G__12173 = null;
if (arguments.length > 3) {
var G__12174__i = 0, G__12174__a = new Array(arguments.length -  3);
while (G__12174__i < G__12174__a.length) {G__12174__a[G__12174__i] = arguments[G__12174__i + 3]; ++G__12174__i;}
G__12173 = new cljs.core.IndexedSeq(G__12174__a,0);
}
return G__12169__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12169.cljs$lang$maxFixedArity = 3;
G__12169.cljs$lang$applyTo = G__12169__4.cljs$lang$applyTo;
G__12169.cljs$core$IFn$_invoke$arity$0 = G__12169__0;
G__12169.cljs$core$IFn$_invoke$arity$1 = G__12169__1;
G__12169.cljs$core$IFn$_invoke$arity$2 = G__12169__2;
G__12169.cljs$core$IFn$_invoke$arity$3 = G__12169__3;
G__12169.cljs$core$IFn$_invoke$arity$variadic = G__12169__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12169;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__12175 = null;
var G__12175__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__12175__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12139 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12139) : f.call(null,G__12139));
})(),(function (){var G__12140 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12140) : g.call(null,G__12140));
})(),(function (){var G__12141 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12141) : h.call(null,G__12141));
})()],null));
});
var G__12175__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12142 = x;
var G__12143 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12142,G__12143) : f.call(null,G__12142,G__12143));
})(),(function (){var G__12144 = x;
var G__12145 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12144,G__12145) : g.call(null,G__12144,G__12145));
})(),(function (){var G__12146 = x;
var G__12147 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12146,G__12147) : h.call(null,G__12146,G__12147));
})()],null));
});
var G__12175__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12148 = x;
var G__12149 = y;
var G__12150 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12148,G__12149,G__12150) : f.call(null,G__12148,G__12149,G__12150));
})(),(function (){var G__12151 = x;
var G__12152 = y;
var G__12153 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12151,G__12152,G__12153) : g.call(null,G__12151,G__12152,G__12153));
})(),(function (){var G__12154 = x;
var G__12155 = y;
var G__12156 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12154,G__12155,G__12156) : h.call(null,G__12154,G__12155,G__12156));
})()],null));
});
var G__12175__4 = (function() { 
var G__12176__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__12176 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12177__i = 0, G__12177__a = new Array(arguments.length -  3);
while (G__12177__i < G__12177__a.length) {G__12177__a[G__12177__i] = arguments[G__12177__i + 3]; ++G__12177__i;}
  args = new cljs.core.IndexedSeq(G__12177__a,0);
} 
return G__12176__delegate.call(this,x,y,z,args);};
G__12176.cljs$lang$maxFixedArity = 3;
G__12176.cljs$lang$applyTo = (function (arglist__12178){
var x = cljs.core.first(arglist__12178);
arglist__12178 = cljs.core.next(arglist__12178);
var y = cljs.core.first(arglist__12178);
arglist__12178 = cljs.core.next(arglist__12178);
var z = cljs.core.first(arglist__12178);
var args = cljs.core.rest(arglist__12178);
return G__12176__delegate(x,y,z,args);
});
G__12176.cljs$core$IFn$_invoke$arity$variadic = G__12176__delegate;
return G__12176;
})()
;
G__12175 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12175__0.call(this);
case 1:
return G__12175__1.call(this,x);
case 2:
return G__12175__2.call(this,x,y);
case 3:
return G__12175__3.call(this,x,y,z);
default:
var G__12179 = null;
if (arguments.length > 3) {
var G__12180__i = 0, G__12180__a = new Array(arguments.length -  3);
while (G__12180__i < G__12180__a.length) {G__12180__a[G__12180__i] = arguments[G__12180__i + 3]; ++G__12180__i;}
G__12179 = new cljs.core.IndexedSeq(G__12180__a,0);
}
return G__12175__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12175.cljs$lang$maxFixedArity = 3;
G__12175.cljs$lang$applyTo = G__12175__4.cljs$lang$applyTo;
G__12175.cljs$core$IFn$_invoke$arity$0 = G__12175__0;
G__12175.cljs$core$IFn$_invoke$arity$1 = G__12175__1;
G__12175.cljs$core$IFn$_invoke$arity$2 = G__12175__2;
G__12175.cljs$core$IFn$_invoke$arity$3 = G__12175__3;
G__12175.cljs$core$IFn$_invoke$arity$variadic = G__12175__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12175;
})()
});
var juxt__4 = (function() { 
var G__12181__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__12182 = null;
var G__12182__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12069_SHARP_,p2__12070_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12069_SHARP_,(function (){return (p2__12070_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__12070_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__12070_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12182__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12071_SHARP_,p2__12072_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12071_SHARP_,(function (){var G__12157 = x;
return (p2__12072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__12072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12157) : p2__12072_SHARP_.call(null,G__12157));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12182__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12073_SHARP_,p2__12074_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12073_SHARP_,(function (){var G__12158 = x;
var G__12159 = y;
return (p2__12074_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__12074_SHARP_.cljs$core$IFn$_invoke$arity$2(G__12158,G__12159) : p2__12074_SHARP_.call(null,G__12158,G__12159));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12182__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12075_SHARP_,p2__12076_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12075_SHARP_,(function (){var G__12160 = x;
var G__12161 = y;
var G__12162 = z;
return (p2__12076_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__12076_SHARP_.cljs$core$IFn$_invoke$arity$3(G__12160,G__12161,G__12162) : p2__12076_SHARP_.call(null,G__12160,G__12161,G__12162));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12182__4 = (function() { 
var G__12183__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12077_SHARP_,p2__12078_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12077_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12078_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__12183 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12184__i = 0, G__12184__a = new Array(arguments.length -  3);
while (G__12184__i < G__12184__a.length) {G__12184__a[G__12184__i] = arguments[G__12184__i + 3]; ++G__12184__i;}
  args = new cljs.core.IndexedSeq(G__12184__a,0);
} 
return G__12183__delegate.call(this,x,y,z,args);};
G__12183.cljs$lang$maxFixedArity = 3;
G__12183.cljs$lang$applyTo = (function (arglist__12185){
var x = cljs.core.first(arglist__12185);
arglist__12185 = cljs.core.next(arglist__12185);
var y = cljs.core.first(arglist__12185);
arglist__12185 = cljs.core.next(arglist__12185);
var z = cljs.core.first(arglist__12185);
var args = cljs.core.rest(arglist__12185);
return G__12183__delegate(x,y,z,args);
});
G__12183.cljs$core$IFn$_invoke$arity$variadic = G__12183__delegate;
return G__12183;
})()
;
G__12182 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12182__0.call(this);
case 1:
return G__12182__1.call(this,x);
case 2:
return G__12182__2.call(this,x,y);
case 3:
return G__12182__3.call(this,x,y,z);
default:
var G__12186 = null;
if (arguments.length > 3) {
var G__12187__i = 0, G__12187__a = new Array(arguments.length -  3);
while (G__12187__i < G__12187__a.length) {G__12187__a[G__12187__i] = arguments[G__12187__i + 3]; ++G__12187__i;}
G__12186 = new cljs.core.IndexedSeq(G__12187__a,0);
}
return G__12182__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12182.cljs$lang$maxFixedArity = 3;
G__12182.cljs$lang$applyTo = G__12182__4.cljs$lang$applyTo;
G__12182.cljs$core$IFn$_invoke$arity$0 = G__12182__0;
G__12182.cljs$core$IFn$_invoke$arity$1 = G__12182__1;
G__12182.cljs$core$IFn$_invoke$arity$2 = G__12182__2;
G__12182.cljs$core$IFn$_invoke$arity$3 = G__12182__3;
G__12182.cljs$core$IFn$_invoke$arity$variadic = G__12182__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12182;
})()
;})(fs__$1))
};
var G__12181 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12188__i = 0, G__12188__a = new Array(arguments.length -  3);
while (G__12188__i < G__12188__a.length) {G__12188__a[G__12188__i] = arguments[G__12188__i + 3]; ++G__12188__i;}
  fs = new cljs.core.IndexedSeq(G__12188__a,0);
} 
return G__12181__delegate.call(this,f,g,h,fs);};
G__12181.cljs$lang$maxFixedArity = 3;
G__12181.cljs$lang$applyTo = (function (arglist__12189){
var f = cljs.core.first(arglist__12189);
arglist__12189 = cljs.core.next(arglist__12189);
var g = cljs.core.first(arglist__12189);
arglist__12189 = cljs.core.next(arglist__12189);
var h = cljs.core.first(arglist__12189);
var fs = cljs.core.rest(arglist__12189);
return G__12181__delegate(f,g,h,fs);
});
G__12181.cljs$core$IFn$_invoke$arity$variadic = G__12181__delegate;
return G__12181;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__12190 = null;
if (arguments.length > 3) {
var G__12191__i = 0, G__12191__a = new Array(arguments.length -  3);
while (G__12191__i < G__12191__a.length) {G__12191__a[G__12191__i] = arguments[G__12191__i + 3]; ++G__12191__i;}
G__12190 = new cljs.core.IndexedSeq(G__12191__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__12190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__12192 = cljs.core.next(coll);
coll = G__12192;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__12193 = (n - (1));
var G__12194 = cljs.core.next(coll);
n = G__12193;
coll = G__12194;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__12198 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12198,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12198,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12198,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_12206 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3967__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__12207_12213 = cljs.core.first(coll);
var G__12208_12214 = writer;
var G__12209_12215 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12207_12213,G__12208_12214,G__12209_12215) : print_one.call(null,G__12207_12213,G__12208_12214,G__12209_12215));
} else {
}

var coll_12216__$1 = cljs.core.next(coll);
var n_12217 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_12216__$1) && (((n_12217 == null)) || (!((n_12217 === (0)))))){
cljs.core._write(writer,sep);

var G__12210_12218 = cljs.core.first(coll_12216__$1);
var G__12211_12219 = writer;
var G__12212_12220 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12210_12218,G__12211_12219,G__12212_12220) : print_one.call(null,G__12210_12218,G__12211_12219,G__12212_12220));

var G__12221 = cljs.core.next(coll_12216__$1);
var G__12222 = (n_12217 - (1));
coll_12216__$1 = G__12221;
n_12217 = G__12222;
continue;
} else {
if((cljs.core.seq(coll_12216__$1)) && ((n_12217 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3967__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_12206;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__12227 = cljs.core.seq(ss);
var chunk__12228 = null;
var count__12229 = (0);
var i__12230 = (0);
while(true){
if((i__12230 < count__12229)){
var s = chunk__12228.cljs$core$IIndexed$_nth$arity$2(null,i__12230);
cljs.core._write(writer,s);

var G__12231 = seq__12227;
var G__12232 = chunk__12228;
var G__12233 = count__12229;
var G__12234 = (i__12230 + (1));
seq__12227 = G__12231;
chunk__12228 = G__12232;
count__12229 = G__12233;
i__12230 = G__12234;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__12227);
if(temp__4425__auto__){
var seq__12227__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12227__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__12227__$1);
var G__12235 = cljs.core.chunk_rest(seq__12227__$1);
var G__12236 = c__4754__auto__;
var G__12237 = cljs.core.count(c__4754__auto__);
var G__12238 = (0);
seq__12227 = G__12235;
chunk__12228 = G__12236;
count__12229 = G__12237;
i__12230 = G__12238;
continue;
} else {
var s = cljs.core.first(seq__12227__$1);
cljs.core._write(writer,s);

var G__12239 = cljs.core.next(seq__12227__$1);
var G__12240 = null;
var G__12241 = (0);
var G__12242 = (0);
seq__12227 = G__12239;
chunk__12228 = G__12240;
count__12229 = G__12241;
i__12230 = G__12242;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__12243__i = 0, G__12243__a = new Array(arguments.length -  1);
while (G__12243__i < G__12243__a.length) {G__12243__a[G__12243__i] = arguments[G__12243__i + 1]; ++G__12243__i;}
  ss = new cljs.core.IndexedSeq(G__12243__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__12244){
var writer = cljs.core.first(arglist__12244);
var ss = cljs.core.rest(arglist__12244);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj12246 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj12246;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__12249 = "[\\\\\"\b\f\n\r\t]";
var G__12250 = "g";
return RegExp(G__12249,G__12250);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3955__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3955__auto__)){
var and__3955__auto____$1 = (function (){var G__12264 = obj;
if(G__12264){
var bit__4648__auto__ = (G__12264.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4648__auto__) || (G__12264.cljs$core$IMeta$)){
return true;
} else {
if((!G__12264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12264);
}
})();
if(and__3955__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__12265_12275 = cljs.core.meta(obj);
var G__12266_12276 = writer;
var G__12267_12277 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__12265_12275,G__12266_12276,G__12267_12277) : cljs.core.pr_writer.call(null,G__12265_12275,G__12266_12276,G__12267_12277));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__12268 = obj;
if(G__12268){
var bit__4641__auto__ = (G__12268.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4641__auto__) || (G__12268.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__12269 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__12270 = cljs.core.pr_writer;
var G__12271 = writer;
var G__12272 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__12269,G__12270,G__12271,G__12272) : cljs.core.print_map.call(null,G__12269,G__12270,G__12271,G__12272));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__12273 = obj;
return goog.isString(G__12273);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__12278 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__12278;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__12274 = obj;
if(G__12274){
var bit__4648__auto__ = (G__12274.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4648__auto__) || (G__12274.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__12274.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12274);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4423__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4423__auto__)){
var alt_impl = temp__4423__auto__;
var G__12282 = obj;
var G__12283 = writer;
var G__12284 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__12282,G__12283,G__12284) : alt_impl.call(null,G__12282,G__12283,G__12284));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__12289 = cljs.core.seq(cljs.core.next(objs));
var chunk__12290 = null;
var count__12291 = (0);
var i__12292 = (0);
while(true){
if((i__12292 < count__12291)){
var obj = chunk__12290.cljs$core$IIndexed$_nth$arity$2(null,i__12292);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12293 = seq__12289;
var G__12294 = chunk__12290;
var G__12295 = count__12291;
var G__12296 = (i__12292 + (1));
seq__12289 = G__12293;
chunk__12290 = G__12294;
count__12291 = G__12295;
i__12292 = G__12296;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__12289);
if(temp__4425__auto__){
var seq__12289__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12289__$1)){
var c__4754__auto__ = cljs.core.chunk_first(seq__12289__$1);
var G__12297 = cljs.core.chunk_rest(seq__12289__$1);
var G__12298 = c__4754__auto__;
var G__12299 = cljs.core.count(c__4754__auto__);
var G__12300 = (0);
seq__12289 = G__12297;
chunk__12290 = G__12298;
count__12291 = G__12299;
i__12292 = G__12300;
continue;
} else {
var obj = cljs.core.first(seq__12289__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12301 = cljs.core.next(seq__12289__$1);
var G__12302 = null;
var G__12303 = (0);
var G__12304 = (0);
seq__12289 = G__12301;
chunk__12290 = G__12302;
count__12291 = G__12303;
i__12292 = G__12304;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12305__i = 0, G__12305__a = new Array(arguments.length -  0);
while (G__12305__i < G__12305__a.length) {G__12305__a[G__12305__i] = arguments[G__12305__i + 0]; ++G__12305__i;}
  objs = new cljs.core.IndexedSeq(G__12305__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__12306){
var objs = cljs.core.seq(arglist__12306);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12307__i = 0, G__12307__a = new Array(arguments.length -  0);
while (G__12307__i < G__12307__a.length) {G__12307__a[G__12307__i] = arguments[G__12307__i + 0]; ++G__12307__i;}
  objs = new cljs.core.IndexedSeq(G__12307__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__12308){
var objs = cljs.core.seq(arglist__12308);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12309__i = 0, G__12309__a = new Array(arguments.length -  0);
while (G__12309__i < G__12309__a.length) {G__12309__a[G__12309__i] = arguments[G__12309__i + 0]; ++G__12309__i;}
  objs = new cljs.core.IndexedSeq(G__12309__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__12310){
var objs = cljs.core.seq(arglist__12310);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12311__i = 0, G__12311__a = new Array(arguments.length -  0);
while (G__12311__i < G__12311__a.length) {G__12311__a[G__12311__i] = arguments[G__12311__i + 0]; ++G__12311__i;}
  objs = new cljs.core.IndexedSeq(G__12311__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__12312){
var objs = cljs.core.seq(arglist__12312);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12313__i = 0, G__12313__a = new Array(arguments.length -  0);
while (G__12313__i < G__12313__a.length) {G__12313__a[G__12313__i] = arguments[G__12313__i + 0]; ++G__12313__i;}
  objs = new cljs.core.IndexedSeq(G__12313__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__12314){
var objs = cljs.core.seq(arglist__12314);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12315__i = 0, G__12315__a = new Array(arguments.length -  0);
while (G__12315__i < G__12315__a.length) {G__12315__a[G__12315__i] = arguments[G__12315__i + 0]; ++G__12315__i;}
  objs = new cljs.core.IndexedSeq(G__12315__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__12316){
var objs = cljs.core.seq(arglist__12316);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12317__i = 0, G__12317__a = new Array(arguments.length -  0);
while (G__12317__i < G__12317__a.length) {G__12317__a[G__12317__i] = arguments[G__12317__i + 0]; ++G__12317__i;}
  objs = new cljs.core.IndexedSeq(G__12317__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__12318){
var objs = cljs.core.seq(arglist__12318);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12319__i = 0, G__12319__a = new Array(arguments.length -  0);
while (G__12319__i < G__12319__a.length) {G__12319__a[G__12319__i] = arguments[G__12319__i + 0]; ++G__12319__i;}
  objs = new cljs.core.IndexedSeq(G__12319__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__12320){
var objs = cljs.core.seq(arglist__12320);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__12327_12333 = cljs.core.key(e);
var G__12328_12334 = w;
var G__12329_12335 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12327_12333,G__12328_12334,G__12329_12335) : print_one.call(null,G__12327_12333,G__12328_12334,G__12329_12335));

cljs.core._write(w," ");

var G__12330 = cljs.core.val(e);
var G__12331 = w;
var G__12332 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12330,G__12331,G__12332) : print_one.call(null,G__12330,G__12331,G__12332));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__12336__i = 0, G__12336__a = new Array(arguments.length -  2);
while (G__12336__i < G__12336__a.length) {G__12336__a[G__12336__i] = arguments[G__12336__i + 2]; ++G__12336__i;}
  args = new cljs.core.IndexedSeq(G__12336__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__12337){
var iref = cljs.core.first(arglist__12337);
arglist__12337 = cljs.core.next(arglist__12337);
var f = cljs.core.first(arglist__12337);
var args = cljs.core.rest(arglist__12337);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__12340 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12340) : cljs.core.atom.call(null,G__12340));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__12342 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12342) : cljs.core.deref.call(null,G__12342));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__12343_SHARP_,p2__12344_SHARP_){
var ret = (function (){var G__12347 = p1__12343_SHARP_;
var G__12348 = p2__12344_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12347,G__12348) : rf.call(null,G__12347,G__12348));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__12351 = null;
var G__12351__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12351__1 = (function (result){
var G__12350 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12350) : rf.call(null,G__12350));
});
var G__12351__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__12351 = function(result,input){
switch(arguments.length){
case 0:
return G__12351__0.call(this);
case 1:
return G__12351__1.call(this,result);
case 2:
return G__12351__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12351.cljs$core$IFn$_invoke$arity$0 = G__12351__0;
G__12351.cljs$core$IFn$_invoke$arity$1 = G__12351__1;
G__12351.cljs$core$IFn$_invoke$arity$2 = G__12351__2;
return G__12351;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__12360 = null;
var G__12360__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12360__1 = (function (result){
var G__12356 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12356) : rf.call(null,G__12356));
});
var G__12360__2 = (function (result,input){
var prior = (function (){var G__12357 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12357) : cljs.core.deref.call(null,G__12357));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__12358 = result;
var G__12359 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12358,G__12359) : rf.call(null,G__12358,G__12359));
}
});
G__12360 = function(result,input){
switch(arguments.length){
case 0:
return G__12360__0.call(this);
case 1:
return G__12360__1.call(this,result);
case 2:
return G__12360__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12360.cljs$core$IFn$_invoke$arity$0 = G__12360__0;
G__12360.cljs$core$IFn$_invoke$arity$1 = G__12360__1;
G__12360.cljs$core$IFn$_invoke$arity$2 = G__12360__2;
return G__12360;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4945__auto__ = this;
return cljs.core.es6_iterator(this__4945__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__12362_SHARP_,p2__12361_SHARP_){
var G__12364 = p2__12361_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__12364) : proc.call(null,G__12364));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj12366 = {};
return obj12366;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._clj__GT_js[(function (){var G__12370 = x__4611__auto__;
return goog.typeOf(G__12370);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._key__GT_js[(function (){var G__12374 = x__4611__auto__;
return goog.typeOf(G__12374);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__12377 = k;
if(G__12377){
var bit__4648__auto__ = null;
if(cljs.core.truth_((function (){var or__3967__auto__ = bit__4648__auto__;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return G__12377.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12377.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12377);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12377);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__12378 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__12378) : cljs.core.clj__GT_js.call(null,G__12378));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__12394 = x;
if(G__12394){
var bit__4648__auto__ = null;
if(cljs.core.truth_((function (){var or__3967__auto__ = bit__4648__auto__;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return G__12394.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12394.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12394);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12394);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj12396 = {};
return obj12396;
})();
var seq__12397_12407 = cljs.core.seq(x);
var chunk__12398_12408 = null;
var count__12399_12409 = (0);
var i__12400_12410 = (0);
while(true){
if((i__12400_12410 < count__12399_12409)){
var vec__12401_12411 = chunk__12398_12408.cljs$core$IIndexed$_nth$arity$2(null,i__12400_12410);
var k_12412 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12401_12411,(0),null);
var v_12413 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12401_12411,(1),null);
(m[cljs.core.key__GT_js(k_12412)] = clj__GT_js(v_12413));

var G__12414 = seq__12397_12407;
var G__12415 = chunk__12398_12408;
var G__12416 = count__12399_12409;
var G__12417 = (i__12400_12410 + (1));
seq__12397_12407 = G__12414;
chunk__12398_12408 = G__12415;
count__12399_12409 = G__12416;
i__12400_12410 = G__12417;
continue;
} else {
var temp__4425__auto___12418 = cljs.core.seq(seq__12397_12407);
if(temp__4425__auto___12418){
var seq__12397_12419__$1 = temp__4425__auto___12418;
if(cljs.core.chunked_seq_QMARK_(seq__12397_12419__$1)){
var c__4754__auto___12420 = cljs.core.chunk_first(seq__12397_12419__$1);
var G__12421 = cljs.core.chunk_rest(seq__12397_12419__$1);
var G__12422 = c__4754__auto___12420;
var G__12423 = cljs.core.count(c__4754__auto___12420);
var G__12424 = (0);
seq__12397_12407 = G__12421;
chunk__12398_12408 = G__12422;
count__12399_12409 = G__12423;
i__12400_12410 = G__12424;
continue;
} else {
var vec__12402_12425 = cljs.core.first(seq__12397_12419__$1);
var k_12426 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12402_12425,(0),null);
var v_12427 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12402_12425,(1),null);
(m[cljs.core.key__GT_js(k_12426)] = clj__GT_js(v_12427));

var G__12428 = cljs.core.next(seq__12397_12419__$1);
var G__12429 = null;
var G__12430 = (0);
var G__12431 = (0);
seq__12397_12407 = G__12428;
chunk__12398_12408 = G__12429;
count__12399_12409 = G__12430;
i__12400_12410 = G__12431;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__12403_12432 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__12404_12433 = null;
var count__12405_12434 = (0);
var i__12406_12435 = (0);
while(true){
if((i__12406_12435 < count__12405_12434)){
var x_12436__$1 = chunk__12404_12433.cljs$core$IIndexed$_nth$arity$2(null,i__12406_12435);
arr.push(x_12436__$1);

var G__12437 = seq__12403_12432;
var G__12438 = chunk__12404_12433;
var G__12439 = count__12405_12434;
var G__12440 = (i__12406_12435 + (1));
seq__12403_12432 = G__12437;
chunk__12404_12433 = G__12438;
count__12405_12434 = G__12439;
i__12406_12435 = G__12440;
continue;
} else {
var temp__4425__auto___12441 = cljs.core.seq(seq__12403_12432);
if(temp__4425__auto___12441){
var seq__12403_12442__$1 = temp__4425__auto___12441;
if(cljs.core.chunked_seq_QMARK_(seq__12403_12442__$1)){
var c__4754__auto___12443 = cljs.core.chunk_first(seq__12403_12442__$1);
var G__12444 = cljs.core.chunk_rest(seq__12403_12442__$1);
var G__12445 = c__4754__auto___12443;
var G__12446 = cljs.core.count(c__4754__auto___12443);
var G__12447 = (0);
seq__12403_12432 = G__12444;
chunk__12404_12433 = G__12445;
count__12405_12434 = G__12446;
i__12406_12435 = G__12447;
continue;
} else {
var x_12448__$1 = cljs.core.first(seq__12403_12442__$1);
arr.push(x_12448__$1);

var G__12449 = cljs.core.next(seq__12403_12442__$1);
var G__12450 = null;
var G__12451 = (0);
var G__12452 = (0);
seq__12403_12432 = G__12449;
chunk__12404_12433 = G__12450;
count__12405_12434 = G__12451;
i__12406_12435 = G__12452;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12454 = {};
return obj12454;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3955__auto__ = x;
if(and__3955__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3955__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4611__auto__ = (((x == null))?null:x);
return (function (){var or__3967__auto__ = (cljs.core._js__GT_clj[(function (){var G__12458 = x__4611__auto__;
return goog.typeOf(G__12458);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__12515__delegate = function (x,opts){
var map__12488 = opts;
var map__12488__$1 = ((cljs.core.seq_QMARK_(map__12488))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12488):map__12488);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12488__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12488,map__12488__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__12504 = x__$1;
if(G__12504){
var bit__4648__auto__ = null;
if(cljs.core.truth_((function (){var or__3967__auto__ = bit__4648__auto__;
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return G__12504.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12504.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12504);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4723__auto__ = ((function (map__12488,map__12488__$1,keywordize_keys,keyfn){
return (function iter__12505(s__12506){
return (new cljs.core.LazySeq(null,((function (map__12488,map__12488__$1,keywordize_keys,keyfn){
return (function (){
var s__12506__$1 = s__12506;
while(true){
var temp__4425__auto__ = cljs.core.seq(s__12506__$1);
if(temp__4425__auto__){
var s__12506__$2 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12506__$2)){
var c__4721__auto__ = cljs.core.chunk_first(s__12506__$2);
var size__4722__auto__ = cljs.core.count(c__4721__auto__);
var b__12508 = cljs.core.chunk_buffer(size__4722__auto__);
if((function (){var i__12507 = (0);
while(true){
if((i__12507 < size__4722__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4721__auto__,i__12507);
cljs.core.chunk_append(b__12508,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12513 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12513) : keyfn.call(null,G__12513));
})(),thisfn((x__$1[k]))], null));

var G__12516 = (i__12507 + (1));
i__12507 = G__12516;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12508),iter__12505(cljs.core.chunk_rest(s__12506__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12508),null);
}
} else {
var k = cljs.core.first(s__12506__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12514 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12514) : keyfn.call(null,G__12514));
})(),thisfn((x__$1[k]))], null),iter__12505(cljs.core.rest(s__12506__$2)));
}
} else {
return null;
}
break;
}
});})(map__12488,map__12488__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12488,map__12488__$1,keywordize_keys,keyfn))
;
return iter__4723__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12488,map__12488__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12515 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12517__i = 0, G__12517__a = new Array(arguments.length -  1);
while (G__12517__i < G__12517__a.length) {G__12517__a[G__12517__i] = arguments[G__12517__i + 1]; ++G__12517__i;}
  opts = new cljs.core.IndexedSeq(G__12517__a,0);
} 
return G__12515__delegate.call(this,x,opts);};
G__12515.cljs$lang$maxFixedArity = 1;
G__12515.cljs$lang$applyTo = (function (arglist__12518){
var x = cljs.core.first(arglist__12518);
var opts = cljs.core.rest(arglist__12518);
return G__12515__delegate(x,opts);
});
G__12515.cljs$core$IFn$_invoke$arity$variadic = G__12515__delegate;
return G__12515;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__12519 = null;
if (arguments.length > 1) {
var G__12520__i = 0, G__12520__a = new Array(arguments.length -  1);
while (G__12520__i < G__12520__a.length) {G__12520__a[G__12520__i] = arguments[G__12520__i + 1]; ++G__12520__i;}
G__12519 = new cljs.core.IndexedSeq(G__12520__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__12523 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12523) : cljs.core.atom.call(null,G__12523));
})();
return ((function (mem){
return (function() { 
var G__12525__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12524 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12524) : cljs.core.deref.call(null,G__12524));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12525 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12526__i = 0, G__12526__a = new Array(arguments.length -  0);
while (G__12526__i < G__12526__a.length) {G__12526__a[G__12526__i] = arguments[G__12526__i + 0]; ++G__12526__i;}
  args = new cljs.core.IndexedSeq(G__12526__a,0);
} 
return G__12525__delegate.call(this,args);};
G__12525.cljs$lang$maxFixedArity = 0;
G__12525.cljs$lang$applyTo = (function (arglist__12527){
var args = cljs.core.seq(arglist__12527);
return G__12525__delegate(args);
});
G__12525.cljs$core$IFn$_invoke$arity$variadic = G__12525__delegate;
return G__12525;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12529 = ret;
f = G__12529;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__12530__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12530 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12531__i = 0, G__12531__a = new Array(arguments.length -  1);
while (G__12531__i < G__12531__a.length) {G__12531__a[G__12531__i] = arguments[G__12531__i + 1]; ++G__12531__i;}
  args = new cljs.core.IndexedSeq(G__12531__a,0);
} 
return G__12530__delegate.call(this,f,args);};
G__12530.cljs$lang$maxFixedArity = 1;
G__12530.cljs$lang$applyTo = (function (arglist__12532){
var f = cljs.core.first(arglist__12532);
var args = cljs.core.rest(arglist__12532);
return G__12530__delegate(f,args);
});
G__12530.cljs$core$IFn$_invoke$arity$variadic = G__12530__delegate;
return G__12530;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__12533 = null;
if (arguments.length > 1) {
var G__12534__i = 0, G__12534__a = new Array(arguments.length -  1);
while (G__12534__i < G__12534__a.length) {G__12534__a[G__12534__i] = arguments[G__12534__i + 1]; ++G__12534__i;}
G__12533 = new cljs.core.IndexedSeq(G__12534__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function rand_int(n){
var G__12537 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12537) : Math.floor.call(null,G__12537));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12539 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12539) : f.call(null,G__12539));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12541 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12541) : cljs.core.atom.call(null,G__12541));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12542__i = 0, G__12542__a = new Array(arguments.length -  1);
while (G__12542__i < G__12542__a.length) {G__12542__a[G__12542__i] = arguments[G__12542__i + 1]; ++G__12542__i;}
  args = new cljs.core.IndexedSeq(G__12542__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12543){
var f = cljs.core.first(arglist__12543);
var args = cljs.core.rest(arglist__12543);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12608 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12608) : cljs.core.deref.call(null,G__12608));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3967__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
var and__3955__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3955__auto__){
var and__3955__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3955__auto____$1){
var and__3955__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3955__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12633 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12631 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12631) : child.call(null,G__12631));
})(),(function (){var G__12632 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12632) : parent.call(null,G__12632));
})());
var G__12634 = (i + (1));
ret = G__12633;
i = G__12634;
continue;
}
break;
}
} else {
return and__3955__auto____$2;
}
} else {
return and__3955__auto____$1;
}
} else {
return and__3955__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12638 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12638) : cljs.core.deref.call(null,G__12638));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12642 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12642) : cljs.core.deref.call(null,G__12642));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12646 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12646) : cljs.core.deref.call(null,G__12646));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12655 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12655) : targets.call(null,G__12655));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12656 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12656) : sources.call(null,G__12656));
})()));
});})(tp,td,ta))
;
var or__3967__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12660 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12660) : tp.call(null,G__12660));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12661 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12661) : ta.call(null,G__12661));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12662 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12662) : ta.call(null,G__12662));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12669 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12669) : parentMap.call(null,G__12669));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12670 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12670) : parentMap.call(null,G__12670));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12663_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12663_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12663_SHARP_),cljs.core.second(p1__12663_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12671 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12671) : parentMap.call(null,G__12671));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12664_SHARP_,p2__12665_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12664_SHARP_,p2__12665_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12674 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12674) : cljs.core.deref.call(null,G__12674));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12675 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12675) : cljs.core.deref.call(null,G__12675));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12691 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12691) : cljs.core.deref.call(null,G__12691));
})().call(null,x);
var or__3967__auto__ = (cljs.core.truth_((function (){var and__3955__auto__ = xprefs;
if(cljs.core.truth_(and__3955__auto__)){
var G__12693 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12693) : xprefs.call(null,G__12693));
} else {
return and__3955__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12694 = cljs.core.rest(ps);
ps = G__12694;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3967__auto____$1)){
return or__3967__auto____$1;
} else {
var or__3967__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12695 = cljs.core.rest(ps);
ps = G__12695;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3967__auto____$2)){
return or__3967__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3967__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3967__auto__)){
return or__3967__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12709){
var vec__12710 = p__12709;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12710,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12710,(1),null);
var e = vec__12710;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12711 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12711) : cljs.core.deref.call(null,G__12711));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3967__auto__ = (be == null);
if(or__3967__auto__){
return or__3967__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12712 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12712) : cljs.core.deref.call(null,G__12712));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12713 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12713) : cljs.core.deref.call(null,G__12713));
})(),(function (){var G__12714 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12714) : cljs.core.deref.call(null,G__12714));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12716 = {};
return obj12716;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._reset[(function (){var G__12720 = x__4611__auto__;
return goog.typeOf(G__12720);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._reset["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._add_method[(function (){var G__12724 = x__4611__auto__;
return goog.typeOf(G__12724);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._add_method["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._remove_method[(function (){var G__12728 = x__4611__auto__;
return goog.typeOf(G__12728);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._prefer_method[(function (){var G__12732 = x__4611__auto__;
return goog.typeOf(G__12732);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._get_method[(function (){var G__12736 = x__4611__auto__;
return goog.typeOf(G__12736);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._get_method["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._methods[(function (){var G__12740 = x__4611__auto__;
return goog.typeOf(G__12740);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._methods["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3955__auto__ = mf;
if(and__3955__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3955__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4611__auto__ = (((mf == null))?null:mf);
return (function (){var or__3967__auto__ = (cljs.core._prefers[(function (){var G__12744 = x__4611__auto__;
return goog.typeOf(G__12744);
})()]);
if(or__3967__auto__){
return or__3967__auto__;
} else {
var or__3967__auto____$1 = (cljs.core._prefers["_"]);
if(or__3967__auto____$1){
return or__3967__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__13593 = null;
var G__13593__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13593__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12746 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12746) : self__.dispatch_fn.call(null,G__12746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12747 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12747) : target_fn.call(null,G__12747));
});
var G__13593__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12748 = a;
var G__12749 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12748,G__12749) : self__.dispatch_fn.call(null,G__12748,G__12749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12750 = a;
var G__12751 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12750,G__12751) : target_fn.call(null,G__12750,G__12751));
});
var G__13593__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12752 = a;
var G__12753 = b;
var G__12754 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12752,G__12753,G__12754) : self__.dispatch_fn.call(null,G__12752,G__12753,G__12754));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12755 = a;
var G__12756 = b;
var G__12757 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12755,G__12756,G__12757) : target_fn.call(null,G__12755,G__12756,G__12757));
});
var G__13593__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12758 = a;
var G__12759 = b;
var G__12760 = c;
var G__12761 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12758,G__12759,G__12760,G__12761) : self__.dispatch_fn.call(null,G__12758,G__12759,G__12760,G__12761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12762 = a;
var G__12763 = b;
var G__12764 = c;
var G__12765 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12762,G__12763,G__12764,G__12765) : target_fn.call(null,G__12762,G__12763,G__12764,G__12765));
});
var G__13593__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12766 = a;
var G__12767 = b;
var G__12768 = c;
var G__12769 = d;
var G__12770 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12766,G__12767,G__12768,G__12769,G__12770) : self__.dispatch_fn.call(null,G__12766,G__12767,G__12768,G__12769,G__12770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12771 = a;
var G__12772 = b;
var G__12773 = c;
var G__12774 = d;
var G__12775 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12771,G__12772,G__12773,G__12774,G__12775) : target_fn.call(null,G__12771,G__12772,G__12773,G__12774,G__12775));
});
var G__13593__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12776 = a;
var G__12777 = b;
var G__12778 = c;
var G__12779 = d;
var G__12780 = e;
var G__12781 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12776,G__12777,G__12778,G__12779,G__12780,G__12781) : self__.dispatch_fn.call(null,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12782 = a;
var G__12783 = b;
var G__12784 = c;
var G__12785 = d;
var G__12786 = e;
var G__12787 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12782,G__12783,G__12784,G__12785,G__12786,G__12787) : target_fn.call(null,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787));
});
var G__13593__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12788 = a;
var G__12789 = b;
var G__12790 = c;
var G__12791 = d;
var G__12792 = e;
var G__12793 = f;
var G__12794 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794) : self__.dispatch_fn.call(null,G__12788,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12795 = a;
var G__12796 = b;
var G__12797 = c;
var G__12798 = d;
var G__12799 = e;
var G__12800 = f;
var G__12801 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801) : target_fn.call(null,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801));
});
var G__13593__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12802 = a;
var G__12803 = b;
var G__12804 = c;
var G__12805 = d;
var G__12806 = e;
var G__12807 = f;
var G__12808 = g;
var G__12809 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809) : self__.dispatch_fn.call(null,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12810 = a;
var G__12811 = b;
var G__12812 = c;
var G__12813 = d;
var G__12814 = e;
var G__12815 = f;
var G__12816 = g;
var G__12817 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817) : target_fn.call(null,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815,G__12816,G__12817));
});
var G__13593__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12818 = a;
var G__12819 = b;
var G__12820 = c;
var G__12821 = d;
var G__12822 = e;
var G__12823 = f;
var G__12824 = g;
var G__12825 = h;
var G__12826 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825,G__12826) : self__.dispatch_fn.call(null,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825,G__12826));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12827 = a;
var G__12828 = b;
var G__12829 = c;
var G__12830 = d;
var G__12831 = e;
var G__12832 = f;
var G__12833 = g;
var G__12834 = h;
var G__12835 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835) : target_fn.call(null,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832,G__12833,G__12834,G__12835));
});
var G__13593__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12836 = a;
var G__12837 = b;
var G__12838 = c;
var G__12839 = d;
var G__12840 = e;
var G__12841 = f;
var G__12842 = g;
var G__12843 = h;
var G__12844 = i;
var G__12845 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845) : self__.dispatch_fn.call(null,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12846 = a;
var G__12847 = b;
var G__12848 = c;
var G__12849 = d;
var G__12850 = e;
var G__12851 = f;
var G__12852 = g;
var G__12853 = h;
var G__12854 = i;
var G__12855 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855) : target_fn.call(null,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855));
});
var G__13593__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12856 = a;
var G__12857 = b;
var G__12858 = c;
var G__12859 = d;
var G__12860 = e;
var G__12861 = f;
var G__12862 = g;
var G__12863 = h;
var G__12864 = i;
var G__12865 = j;
var G__12866 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866) : self__.dispatch_fn.call(null,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12867 = a;
var G__12868 = b;
var G__12869 = c;
var G__12870 = d;
var G__12871 = e;
var G__12872 = f;
var G__12873 = g;
var G__12874 = h;
var G__12875 = i;
var G__12876 = j;
var G__12877 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877) : target_fn.call(null,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877));
});
var G__13593__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12878 = a;
var G__12879 = b;
var G__12880 = c;
var G__12881 = d;
var G__12882 = e;
var G__12883 = f;
var G__12884 = g;
var G__12885 = h;
var G__12886 = i;
var G__12887 = j;
var G__12888 = k;
var G__12889 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889) : self__.dispatch_fn.call(null,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12890 = a;
var G__12891 = b;
var G__12892 = c;
var G__12893 = d;
var G__12894 = e;
var G__12895 = f;
var G__12896 = g;
var G__12897 = h;
var G__12898 = i;
var G__12899 = j;
var G__12900 = k;
var G__12901 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901) : target_fn.call(null,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901));
});
var G__13593__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12902 = a;
var G__12903 = b;
var G__12904 = c;
var G__12905 = d;
var G__12906 = e;
var G__12907 = f;
var G__12908 = g;
var G__12909 = h;
var G__12910 = i;
var G__12911 = j;
var G__12912 = k;
var G__12913 = l;
var G__12914 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914) : self__.dispatch_fn.call(null,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12915 = a;
var G__12916 = b;
var G__12917 = c;
var G__12918 = d;
var G__12919 = e;
var G__12920 = f;
var G__12921 = g;
var G__12922 = h;
var G__12923 = i;
var G__12924 = j;
var G__12925 = k;
var G__12926 = l;
var G__12927 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927) : target_fn.call(null,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927));
});
var G__13593__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12928 = a;
var G__12929 = b;
var G__12930 = c;
var G__12931 = d;
var G__12932 = e;
var G__12933 = f;
var G__12934 = g;
var G__12935 = h;
var G__12936 = i;
var G__12937 = j;
var G__12938 = k;
var G__12939 = l;
var G__12940 = m;
var G__12941 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941) : self__.dispatch_fn.call(null,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12942 = a;
var G__12943 = b;
var G__12944 = c;
var G__12945 = d;
var G__12946 = e;
var G__12947 = f;
var G__12948 = g;
var G__12949 = h;
var G__12950 = i;
var G__12951 = j;
var G__12952 = k;
var G__12953 = l;
var G__12954 = m;
var G__12955 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955) : target_fn.call(null,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955));
});
var G__13593__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12956 = a;
var G__12957 = b;
var G__12958 = c;
var G__12959 = d;
var G__12960 = e;
var G__12961 = f;
var G__12962 = g;
var G__12963 = h;
var G__12964 = i;
var G__12965 = j;
var G__12966 = k;
var G__12967 = l;
var G__12968 = m;
var G__12969 = n;
var G__12970 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970) : self__.dispatch_fn.call(null,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12971 = a;
var G__12972 = b;
var G__12973 = c;
var G__12974 = d;
var G__12975 = e;
var G__12976 = f;
var G__12977 = g;
var G__12978 = h;
var G__12979 = i;
var G__12980 = j;
var G__12981 = k;
var G__12982 = l;
var G__12983 = m;
var G__12984 = n;
var G__12985 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985) : target_fn.call(null,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985));
});
var G__13593__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12986 = a;
var G__12987 = b;
var G__12988 = c;
var G__12989 = d;
var G__12990 = e;
var G__12991 = f;
var G__12992 = g;
var G__12993 = h;
var G__12994 = i;
var G__12995 = j;
var G__12996 = k;
var G__12997 = l;
var G__12998 = m;
var G__12999 = n;
var G__13000 = o;
var G__13001 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001) : self__.dispatch_fn.call(null,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13002 = a;
var G__13003 = b;
var G__13004 = c;
var G__13005 = d;
var G__13006 = e;
var G__13007 = f;
var G__13008 = g;
var G__13009 = h;
var G__13010 = i;
var G__13011 = j;
var G__13012 = k;
var G__13013 = l;
var G__13014 = m;
var G__13015 = n;
var G__13016 = o;
var G__13017 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017) : target_fn.call(null,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017));
});
var G__13593__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13018 = a;
var G__13019 = b;
var G__13020 = c;
var G__13021 = d;
var G__13022 = e;
var G__13023 = f;
var G__13024 = g;
var G__13025 = h;
var G__13026 = i;
var G__13027 = j;
var G__13028 = k;
var G__13029 = l;
var G__13030 = m;
var G__13031 = n;
var G__13032 = o;
var G__13033 = p;
var G__13034 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034) : self__.dispatch_fn.call(null,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13035 = a;
var G__13036 = b;
var G__13037 = c;
var G__13038 = d;
var G__13039 = e;
var G__13040 = f;
var G__13041 = g;
var G__13042 = h;
var G__13043 = i;
var G__13044 = j;
var G__13045 = k;
var G__13046 = l;
var G__13047 = m;
var G__13048 = n;
var G__13049 = o;
var G__13050 = p;
var G__13051 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051) : target_fn.call(null,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051));
});
var G__13593__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13052 = a;
var G__13053 = b;
var G__13054 = c;
var G__13055 = d;
var G__13056 = e;
var G__13057 = f;
var G__13058 = g;
var G__13059 = h;
var G__13060 = i;
var G__13061 = j;
var G__13062 = k;
var G__13063 = l;
var G__13064 = m;
var G__13065 = n;
var G__13066 = o;
var G__13067 = p;
var G__13068 = q;
var G__13069 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069) : self__.dispatch_fn.call(null,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13070 = a;
var G__13071 = b;
var G__13072 = c;
var G__13073 = d;
var G__13074 = e;
var G__13075 = f;
var G__13076 = g;
var G__13077 = h;
var G__13078 = i;
var G__13079 = j;
var G__13080 = k;
var G__13081 = l;
var G__13082 = m;
var G__13083 = n;
var G__13084 = o;
var G__13085 = p;
var G__13086 = q;
var G__13087 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087) : target_fn.call(null,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087));
});
var G__13593__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13088 = a;
var G__13089 = b;
var G__13090 = c;
var G__13091 = d;
var G__13092 = e;
var G__13093 = f;
var G__13094 = g;
var G__13095 = h;
var G__13096 = i;
var G__13097 = j;
var G__13098 = k;
var G__13099 = l;
var G__13100 = m;
var G__13101 = n;
var G__13102 = o;
var G__13103 = p;
var G__13104 = q;
var G__13105 = r;
var G__13106 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106) : self__.dispatch_fn.call(null,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13107 = a;
var G__13108 = b;
var G__13109 = c;
var G__13110 = d;
var G__13111 = e;
var G__13112 = f;
var G__13113 = g;
var G__13114 = h;
var G__13115 = i;
var G__13116 = j;
var G__13117 = k;
var G__13118 = l;
var G__13119 = m;
var G__13120 = n;
var G__13121 = o;
var G__13122 = p;
var G__13123 = q;
var G__13124 = r;
var G__13125 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125) : target_fn.call(null,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125));
});
var G__13593__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13126 = a;
var G__13127 = b;
var G__13128 = c;
var G__13129 = d;
var G__13130 = e;
var G__13131 = f;
var G__13132 = g;
var G__13133 = h;
var G__13134 = i;
var G__13135 = j;
var G__13136 = k;
var G__13137 = l;
var G__13138 = m;
var G__13139 = n;
var G__13140 = o;
var G__13141 = p;
var G__13142 = q;
var G__13143 = r;
var G__13144 = s;
var G__13145 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145) : self__.dispatch_fn.call(null,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13146 = a;
var G__13147 = b;
var G__13148 = c;
var G__13149 = d;
var G__13150 = e;
var G__13151 = f;
var G__13152 = g;
var G__13153 = h;
var G__13154 = i;
var G__13155 = j;
var G__13156 = k;
var G__13157 = l;
var G__13158 = m;
var G__13159 = n;
var G__13160 = o;
var G__13161 = p;
var G__13162 = q;
var G__13163 = r;
var G__13164 = s;
var G__13165 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165) : target_fn.call(null,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165));
});
var G__13593__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13593 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13593__1.call(this,self__);
case 2:
return G__13593__2.call(this,self__,a);
case 3:
return G__13593__3.call(this,self__,a,b);
case 4:
return G__13593__4.call(this,self__,a,b,c);
case 5:
return G__13593__5.call(this,self__,a,b,c,d);
case 6:
return G__13593__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13593__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13593__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13593__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13593__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13593__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13593__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13593__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13593__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13593__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13593__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13593__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13593__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13593__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13593__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13593__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13593__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13593.cljs$core$IFn$_invoke$arity$1 = G__13593__1;
G__13593.cljs$core$IFn$_invoke$arity$2 = G__13593__2;
G__13593.cljs$core$IFn$_invoke$arity$3 = G__13593__3;
G__13593.cljs$core$IFn$_invoke$arity$4 = G__13593__4;
G__13593.cljs$core$IFn$_invoke$arity$5 = G__13593__5;
G__13593.cljs$core$IFn$_invoke$arity$6 = G__13593__6;
G__13593.cljs$core$IFn$_invoke$arity$7 = G__13593__7;
G__13593.cljs$core$IFn$_invoke$arity$8 = G__13593__8;
G__13593.cljs$core$IFn$_invoke$arity$9 = G__13593__9;
G__13593.cljs$core$IFn$_invoke$arity$10 = G__13593__10;
G__13593.cljs$core$IFn$_invoke$arity$11 = G__13593__11;
G__13593.cljs$core$IFn$_invoke$arity$12 = G__13593__12;
G__13593.cljs$core$IFn$_invoke$arity$13 = G__13593__13;
G__13593.cljs$core$IFn$_invoke$arity$14 = G__13593__14;
G__13593.cljs$core$IFn$_invoke$arity$15 = G__13593__15;
G__13593.cljs$core$IFn$_invoke$arity$16 = G__13593__16;
G__13593.cljs$core$IFn$_invoke$arity$17 = G__13593__17;
G__13593.cljs$core$IFn$_invoke$arity$18 = G__13593__18;
G__13593.cljs$core$IFn$_invoke$arity$19 = G__13593__19;
G__13593.cljs$core$IFn$_invoke$arity$20 = G__13593__20;
G__13593.cljs$core$IFn$_invoke$arity$21 = G__13593__21;
G__13593.cljs$core$IFn$_invoke$arity$22 = G__13593__22;
return G__13593;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12745)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13166 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__13166) : self__.dispatch_fn.call(null,G__13166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13167 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__13167) : target_fn.call(null,G__13167));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13168 = a;
var G__13169 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__13168,G__13169) : self__.dispatch_fn.call(null,G__13168,G__13169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13170 = a;
var G__13171 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__13170,G__13171) : target_fn.call(null,G__13170,G__13171));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13172 = a;
var G__13173 = b;
var G__13174 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__13172,G__13173,G__13174) : self__.dispatch_fn.call(null,G__13172,G__13173,G__13174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13175 = a;
var G__13176 = b;
var G__13177 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__13175,G__13176,G__13177) : target_fn.call(null,G__13175,G__13176,G__13177));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13178 = a;
var G__13179 = b;
var G__13180 = c;
var G__13181 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__13178,G__13179,G__13180,G__13181) : self__.dispatch_fn.call(null,G__13178,G__13179,G__13180,G__13181));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13182 = a;
var G__13183 = b;
var G__13184 = c;
var G__13185 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__13182,G__13183,G__13184,G__13185) : target_fn.call(null,G__13182,G__13183,G__13184,G__13185));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13186 = a;
var G__13187 = b;
var G__13188 = c;
var G__13189 = d;
var G__13190 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__13186,G__13187,G__13188,G__13189,G__13190) : self__.dispatch_fn.call(null,G__13186,G__13187,G__13188,G__13189,G__13190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13191 = a;
var G__13192 = b;
var G__13193 = c;
var G__13194 = d;
var G__13195 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__13191,G__13192,G__13193,G__13194,G__13195) : target_fn.call(null,G__13191,G__13192,G__13193,G__13194,G__13195));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13196 = a;
var G__13197 = b;
var G__13198 = c;
var G__13199 = d;
var G__13200 = e;
var G__13201 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__13196,G__13197,G__13198,G__13199,G__13200,G__13201) : self__.dispatch_fn.call(null,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13202 = a;
var G__13203 = b;
var G__13204 = c;
var G__13205 = d;
var G__13206 = e;
var G__13207 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__13202,G__13203,G__13204,G__13205,G__13206,G__13207) : target_fn.call(null,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13208 = a;
var G__13209 = b;
var G__13210 = c;
var G__13211 = d;
var G__13212 = e;
var G__13213 = f;
var G__13214 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214) : self__.dispatch_fn.call(null,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13215 = a;
var G__13216 = b;
var G__13217 = c;
var G__13218 = d;
var G__13219 = e;
var G__13220 = f;
var G__13221 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221) : target_fn.call(null,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13222 = a;
var G__13223 = b;
var G__13224 = c;
var G__13225 = d;
var G__13226 = e;
var G__13227 = f;
var G__13228 = g;
var G__13229 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229) : self__.dispatch_fn.call(null,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13230 = a;
var G__13231 = b;
var G__13232 = c;
var G__13233 = d;
var G__13234 = e;
var G__13235 = f;
var G__13236 = g;
var G__13237 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237) : target_fn.call(null,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13238 = a;
var G__13239 = b;
var G__13240 = c;
var G__13241 = d;
var G__13242 = e;
var G__13243 = f;
var G__13244 = g;
var G__13245 = h;
var G__13246 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246) : self__.dispatch_fn.call(null,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13247 = a;
var G__13248 = b;
var G__13249 = c;
var G__13250 = d;
var G__13251 = e;
var G__13252 = f;
var G__13253 = g;
var G__13254 = h;
var G__13255 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255) : target_fn.call(null,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13256 = a;
var G__13257 = b;
var G__13258 = c;
var G__13259 = d;
var G__13260 = e;
var G__13261 = f;
var G__13262 = g;
var G__13263 = h;
var G__13264 = i;
var G__13265 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265) : self__.dispatch_fn.call(null,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13266 = a;
var G__13267 = b;
var G__13268 = c;
var G__13269 = d;
var G__13270 = e;
var G__13271 = f;
var G__13272 = g;
var G__13273 = h;
var G__13274 = i;
var G__13275 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275) : target_fn.call(null,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13276 = a;
var G__13277 = b;
var G__13278 = c;
var G__13279 = d;
var G__13280 = e;
var G__13281 = f;
var G__13282 = g;
var G__13283 = h;
var G__13284 = i;
var G__13285 = j;
var G__13286 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286) : self__.dispatch_fn.call(null,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13287 = a;
var G__13288 = b;
var G__13289 = c;
var G__13290 = d;
var G__13291 = e;
var G__13292 = f;
var G__13293 = g;
var G__13294 = h;
var G__13295 = i;
var G__13296 = j;
var G__13297 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297) : target_fn.call(null,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13298 = a;
var G__13299 = b;
var G__13300 = c;
var G__13301 = d;
var G__13302 = e;
var G__13303 = f;
var G__13304 = g;
var G__13305 = h;
var G__13306 = i;
var G__13307 = j;
var G__13308 = k;
var G__13309 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309) : self__.dispatch_fn.call(null,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13310 = a;
var G__13311 = b;
var G__13312 = c;
var G__13313 = d;
var G__13314 = e;
var G__13315 = f;
var G__13316 = g;
var G__13317 = h;
var G__13318 = i;
var G__13319 = j;
var G__13320 = k;
var G__13321 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321) : target_fn.call(null,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13322 = a;
var G__13323 = b;
var G__13324 = c;
var G__13325 = d;
var G__13326 = e;
var G__13327 = f;
var G__13328 = g;
var G__13329 = h;
var G__13330 = i;
var G__13331 = j;
var G__13332 = k;
var G__13333 = l;
var G__13334 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334) : self__.dispatch_fn.call(null,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13335 = a;
var G__13336 = b;
var G__13337 = c;
var G__13338 = d;
var G__13339 = e;
var G__13340 = f;
var G__13341 = g;
var G__13342 = h;
var G__13343 = i;
var G__13344 = j;
var G__13345 = k;
var G__13346 = l;
var G__13347 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347) : target_fn.call(null,G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13348 = a;
var G__13349 = b;
var G__13350 = c;
var G__13351 = d;
var G__13352 = e;
var G__13353 = f;
var G__13354 = g;
var G__13355 = h;
var G__13356 = i;
var G__13357 = j;
var G__13358 = k;
var G__13359 = l;
var G__13360 = m;
var G__13361 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361) : self__.dispatch_fn.call(null,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13362 = a;
var G__13363 = b;
var G__13364 = c;
var G__13365 = d;
var G__13366 = e;
var G__13367 = f;
var G__13368 = g;
var G__13369 = h;
var G__13370 = i;
var G__13371 = j;
var G__13372 = k;
var G__13373 = l;
var G__13374 = m;
var G__13375 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374,G__13375) : target_fn.call(null,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374,G__13375));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13376 = a;
var G__13377 = b;
var G__13378 = c;
var G__13379 = d;
var G__13380 = e;
var G__13381 = f;
var G__13382 = g;
var G__13383 = h;
var G__13384 = i;
var G__13385 = j;
var G__13386 = k;
var G__13387 = l;
var G__13388 = m;
var G__13389 = n;
var G__13390 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388,G__13389,G__13390) : self__.dispatch_fn.call(null,G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388,G__13389,G__13390));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13391 = a;
var G__13392 = b;
var G__13393 = c;
var G__13394 = d;
var G__13395 = e;
var G__13396 = f;
var G__13397 = g;
var G__13398 = h;
var G__13399 = i;
var G__13400 = j;
var G__13401 = k;
var G__13402 = l;
var G__13403 = m;
var G__13404 = n;
var G__13405 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403,G__13404,G__13405) : target_fn.call(null,G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403,G__13404,G__13405));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13406 = a;
var G__13407 = b;
var G__13408 = c;
var G__13409 = d;
var G__13410 = e;
var G__13411 = f;
var G__13412 = g;
var G__13413 = h;
var G__13414 = i;
var G__13415 = j;
var G__13416 = k;
var G__13417 = l;
var G__13418 = m;
var G__13419 = n;
var G__13420 = o;
var G__13421 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421) : self__.dispatch_fn.call(null,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13422 = a;
var G__13423 = b;
var G__13424 = c;
var G__13425 = d;
var G__13426 = e;
var G__13427 = f;
var G__13428 = g;
var G__13429 = h;
var G__13430 = i;
var G__13431 = j;
var G__13432 = k;
var G__13433 = l;
var G__13434 = m;
var G__13435 = n;
var G__13436 = o;
var G__13437 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436,G__13437) : target_fn.call(null,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436,G__13437));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13438 = a;
var G__13439 = b;
var G__13440 = c;
var G__13441 = d;
var G__13442 = e;
var G__13443 = f;
var G__13444 = g;
var G__13445 = h;
var G__13446 = i;
var G__13447 = j;
var G__13448 = k;
var G__13449 = l;
var G__13450 = m;
var G__13451 = n;
var G__13452 = o;
var G__13453 = p;
var G__13454 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454) : self__.dispatch_fn.call(null,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13455 = a;
var G__13456 = b;
var G__13457 = c;
var G__13458 = d;
var G__13459 = e;
var G__13460 = f;
var G__13461 = g;
var G__13462 = h;
var G__13463 = i;
var G__13464 = j;
var G__13465 = k;
var G__13466 = l;
var G__13467 = m;
var G__13468 = n;
var G__13469 = o;
var G__13470 = p;
var G__13471 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471) : target_fn.call(null,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13472 = a;
var G__13473 = b;
var G__13474 = c;
var G__13475 = d;
var G__13476 = e;
var G__13477 = f;
var G__13478 = g;
var G__13479 = h;
var G__13480 = i;
var G__13481 = j;
var G__13482 = k;
var G__13483 = l;
var G__13484 = m;
var G__13485 = n;
var G__13486 = o;
var G__13487 = p;
var G__13488 = q;
var G__13489 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489) : self__.dispatch_fn.call(null,G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13490 = a;
var G__13491 = b;
var G__13492 = c;
var G__13493 = d;
var G__13494 = e;
var G__13495 = f;
var G__13496 = g;
var G__13497 = h;
var G__13498 = i;
var G__13499 = j;
var G__13500 = k;
var G__13501 = l;
var G__13502 = m;
var G__13503 = n;
var G__13504 = o;
var G__13505 = p;
var G__13506 = q;
var G__13507 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507) : target_fn.call(null,G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13508 = a;
var G__13509 = b;
var G__13510 = c;
var G__13511 = d;
var G__13512 = e;
var G__13513 = f;
var G__13514 = g;
var G__13515 = h;
var G__13516 = i;
var G__13517 = j;
var G__13518 = k;
var G__13519 = l;
var G__13520 = m;
var G__13521 = n;
var G__13522 = o;
var G__13523 = p;
var G__13524 = q;
var G__13525 = r;
var G__13526 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13508,G__13509,G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526) : self__.dispatch_fn.call(null,G__13508,G__13509,G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13527 = a;
var G__13528 = b;
var G__13529 = c;
var G__13530 = d;
var G__13531 = e;
var G__13532 = f;
var G__13533 = g;
var G__13534 = h;
var G__13535 = i;
var G__13536 = j;
var G__13537 = k;
var G__13538 = l;
var G__13539 = m;
var G__13540 = n;
var G__13541 = o;
var G__13542 = p;
var G__13543 = q;
var G__13544 = r;
var G__13545 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545) : target_fn.call(null,G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13546 = a;
var G__13547 = b;
var G__13548 = c;
var G__13549 = d;
var G__13550 = e;
var G__13551 = f;
var G__13552 = g;
var G__13553 = h;
var G__13554 = i;
var G__13555 = j;
var G__13556 = k;
var G__13557 = l;
var G__13558 = m;
var G__13559 = n;
var G__13560 = o;
var G__13561 = p;
var G__13562 = q;
var G__13563 = r;
var G__13564 = s;
var G__13565 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565) : self__.dispatch_fn.call(null,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13566 = a;
var G__13567 = b;
var G__13568 = c;
var G__13569 = d;
var G__13570 = e;
var G__13571 = f;
var G__13572 = g;
var G__13573 = h;
var G__13574 = i;
var G__13575 = j;
var G__13576 = k;
var G__13577 = l;
var G__13578 = m;
var G__13579 = n;
var G__13580 = o;
var G__13581 = p;
var G__13582 = q;
var G__13583 = r;
var G__13584 = s;
var G__13585 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585) : target_fn.call(null,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__13586 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13586) : cljs.core.deref.call(null,G__13586));
})(),(function (){var G__13587 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13587) : cljs.core.deref.call(null,G__13587));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4423__auto__ = (function (){var G__13588 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13588) : cljs.core.deref.call(null,G__13588));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4423__auto__)){
var target_fn = temp__4423__auto__;
return target_fn;
} else {
var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4423__auto____$1)){
var target_fn = temp__4423__auto____$1;
return target_fn;
} else {
return (function (){var G__13589 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13589) : cljs.core.deref.call(null,G__13589));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__13590 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13590) : cljs.core.deref.call(null,G__13590));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__13591 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13591) : cljs.core.deref.call(null,G__13591));
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13592 = this$__$1;
return goog.getUid(G__13592);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13594 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13594);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4554__auto__,writer__4555__auto__,opt__4556__auto__){
return cljs.core._write(writer__4555__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13602 = x;
var G__13603 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13602,G__13603) : pred.call(null,G__13602,G__13603));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13604 = y;
var G__13605 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13604,G__13605) : pred.call(null,G__13604,G__13605));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map